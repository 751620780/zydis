/**************************************************************************************************

  Verteron Disassembler Engine
  Version 1.0

  Remarks         : Freeware, Copyright must be included

  Original Author : Florian Bernd
  Modifications   :

  Last change     : 14. October 2014

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************/
#include "VXOpcodeTable.h"

namespace Verteron
{

namespace Disassembler
{

namespace Internal
{

#define INVALID 0
#define NODE(type, n) (static_cast<VXOpcodeTreeNode>(type) << 12 | (n))
#define MODRM(n) ((n) | 0x0800)

static const VXOpcodeTreeNode optreeTable[][256] = 
{
    {
        /* 00 */ MODRM(0x0015),
        /* 01 */ MODRM(0x0014),
        /* 02 */ MODRM(0x0016),
        /* 03 */ MODRM(0x0018),
        /* 04 */ 0x0017,
        /* 05 */ 0x0010,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0000),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0001),
        /* 08 */ MODRM(0x039F),
        /* 09 */ MODRM(0x039E),
        /* 0A */ MODRM(0x03A0),
        /* 0B */ MODRM(0x03A2),
        /* 0C */ 0x03A1,
        /* 0D */ 0x039A,
        /* 0E */ NODE(VXOpcodeTreeNodeType::MODE, 0x0002),
        /* 0F */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0001),
        /* 10 */ MODRM(0x000B),
        /* 11 */ MODRM(0x000A),
        /* 12 */ MODRM(0x000C),
        /* 13 */ MODRM(0x000E),
        /* 14 */ 0x000D,
        /* 15 */ 0x0006,
        /* 16 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0007),
        /* 17 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0008),
        /* 18 */ MODRM(0x050C),
        /* 19 */ MODRM(0x050D),
        /* 1A */ MODRM(0x050A),
        /* 1B */ MODRM(0x050B),
        /* 1C */ 0x0510,
        /* 1D */ 0x0511,
        /* 1E */ NODE(VXOpcodeTreeNodeType::MODE, 0x0009),
        /* 1F */ NODE(VXOpcodeTreeNodeType::MODE, 0x000A),
        /* 20 */ MODRM(0x0026),
        /* 21 */ MODRM(0x0027),
        /* 22 */ MODRM(0x0025),
        /* 23 */ MODRM(0x002C),
        /* 24 */ 0x002D,
        /* 25 */ 0x002E,
        /* 26 */ INVALID,
        /* 27 */ NODE(VXOpcodeTreeNodeType::MODE, 0x000B),
        /* 28 */ MODRM(0x0560),
        /* 29 */ MODRM(0x055F),
        /* 2A */ MODRM(0x0561),
        /* 2B */ MODRM(0x0563),
        /* 2C */ 0x0562,
        /* 2D */ 0x055B,
        /* 2E */ INVALID,
        /* 2F */ NODE(VXOpcodeTreeNodeType::MODE, 0x000C),
        /* 30 */ MODRM(0x06D2),
        /* 31 */ MODRM(0x06D1),
        /* 32 */ MODRM(0x06D0),
        /* 33 */ MODRM(0x06D3),
        /* 34 */ 0x06CC,
        /* 35 */ 0x06CB,
        /* 36 */ INVALID,
        /* 37 */ NODE(VXOpcodeTreeNodeType::MODE, 0x000D),
        /* 38 */ MODRM(0x006F),
        /* 39 */ MODRM(0x0070),
        /* 3A */ MODRM(0x006E),
        /* 3B */ MODRM(0x006C),
        /* 3C */ 0x006D,
        /* 3D */ 0x0073,
        /* 3E */ INVALID,
        /* 3F */ NODE(VXOpcodeTreeNodeType::MODE, 0x000E),
        /* 40 */ 0x02A7,
        /* 41 */ 0x02AE,
        /* 42 */ 0x02AD,
        /* 43 */ 0x02B0,
        /* 44 */ 0x02AF,
        /* 45 */ 0x02AC,
        /* 46 */ 0x02A9,
        /* 47 */ 0x02A8,
        /* 48 */ 0x00A7,
        /* 49 */ 0x00A6,
        /* 4A */ 0x00A8,
        /* 4B */ 0x00AA,
        /* 4C */ 0x00A9,
        /* 4D */ 0x00A2,
        /* 4E */ 0x00A1,
        /* 4F */ 0x00A3,
        /* 50 */ 0x04C5,
        /* 51 */ 0x04CA,
        /* 52 */ 0x04C4,
        /* 53 */ 0x04BF,
        /* 54 */ 0x04C0,
        /* 55 */ 0x04C1,
        /* 56 */ 0x04C2,
        /* 57 */ 0x04C3,
        /* 58 */ 0x0454,
        /* 59 */ 0x0451,
        /* 5A */ 0x0452,
        /* 5B */ 0x044C,
        /* 5C */ 0x0448,
        /* 5D */ 0x0447,
        /* 5E */ 0x0449,
        /* 5F */ 0x044B,
        /* 60 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0007),
        /* 61 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0008),
        /* 62 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0013),
        /* 63 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0014),
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ 0x04C8,
        /* 69 */ MODRM(0x02A1),
        /* 6A */ 0x04BC,
        /* 6B */ MODRM(0x02A0),
        /* 6C */ 0x02B1,
        /* 6D */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0009),
        /* 6E */ 0x03A9,
        /* 6F */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000A),
        /* 70 */ 0x02E2,
        /* 71 */ 0x02DB,
        /* 72 */ 0x02C8,
        /* 73 */ 0x02C6,
        /* 74 */ 0x02EA,
        /* 75 */ 0x02E1,
        /* 76 */ 0x02CA,
        /* 77 */ 0x02C4,
        /* 78 */ 0x02E8,
        /* 79 */ 0x02DF,
        /* 7A */ 0x02E5,
        /* 7B */ 0x02DC,
        /* 7C */ 0x02D1,
        /* 7D */ 0x02CF,
        /* 7E */ 0x02D4,
        /* 7F */ 0x02CE,
        /* 80 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000F),
        /* 81 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0010),
        /* 82 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0011),
        /* 83 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0012),
        /* 84 */ MODRM(0x0573),
        /* 85 */ MODRM(0x0572),
        /* 86 */ MODRM(0x06BB),
        /* 87 */ MODRM(0x06BC),
        /* 88 */ MODRM(0x0326),
        /* 89 */ MODRM(0x0321),
        /* 8A */ MODRM(0x0322),
        /* 8B */ MODRM(0x0323),
        /* 8C */ MODRM(0x032F),
        /* 8D */ MODRM(0x02F0),
        /* 8E */ MODRM(0x032E),
        /* 8F */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0013),
        /* 90 */ 0x06BD,
        /* 91 */ 0x06B9,
        /* 92 */ 0x06BA,
        /* 93 */ 0x06C1,
        /* 94 */ 0x06C2,
        /* 95 */ 0x06BF,
        /* 96 */ 0x06C0,
        /* 97 */ 0x06BE,
        /* 98 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000B),
        /* 99 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000C),
        /* 9A */ NODE(VXOpcodeTreeNodeType::MODE, 0x001D),
        /* 9B */ 0x06B4,
        /* 9C */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000D),
        /* 9D */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000E),
        /* 9E */ 0x0500,
        /* 9F */ 0x02EB,
        /* A0 */ 0x032D,
        /* A1 */ 0x0332,
        /* A2 */ 0x0331,
        /* A3 */ 0x0330,
        /* A4 */ 0x0371,
        /* A5 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x000F),
        /* A6 */ 0x0076,
        /* A7 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0010),
        /* A8 */ 0x0574,
        /* A9 */ 0x0576,
        /* AA */ 0x0555,
        /* AB */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0011),
        /* AC */ 0x0303,
        /* AD */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0012),
        /* AE */ 0x0512,
        /* AF */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0013),
        /* B0 */ 0x0329,
        /* B1 */ 0x0328,
        /* B2 */ 0x0327,
        /* B3 */ 0x032C,
        /* B4 */ 0x032B,
        /* B5 */ 0x032A,
        /* B6 */ 0x0333,
        /* B7 */ 0x033D,
        /* B8 */ 0x033C,
        /* B9 */ 0x033B,
        /* BA */ 0x0338,
        /* BB */ 0x0334,
        /* BC */ 0x0336,
        /* BD */ 0x033E,
        /* BE */ 0x0340,
        /* BF */ 0x033F,
        /* C0 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0014),
        /* C1 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0015),
        /* C2 */ 0x04EB,
        /* C3 */ 0x04EC,
        /* C4 */ NODE(VXOpcodeTreeNodeType::VEX, 0x0000),
        /* C5 */ NODE(VXOpcodeTreeNodeType::VEX, 0x0001),
        /* C6 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001A),
        /* C7 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001B),
        /* C8 */ 0x00B4,
        /* C9 */ 0x02F1,
        /* CA */ 0x04EA,
        /* CB */ 0x04E9,
        /* CC */ 0x02B7,
        /* CD */ 0x02B5,
        /* CE */ NODE(VXOpcodeTreeNodeType::MODE, 0x0027),
        /* CF */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0017),
        /* D0 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001C),
        /* D1 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001D),
        /* D2 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001E),
        /* D3 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x001F),
        /* D4 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0028),
        /* D5 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0029),
        /* D6 */ NODE(VXOpcodeTreeNodeType::MODE, 0x002A),
        /* D7 */ 0x06C9,
        /* D8 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0015),
        /* D9 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0016),
        /* DA */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0017),
        /* DB */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0018),
        /* DC */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0019),
        /* DD */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x001A),
        /* DE */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x001B),
        /* DF */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x001C),
        /* E0 */ 0x0309,
        /* E1 */ 0x0308,
        /* E2 */ 0x0307,
        /* E3 */ NODE(VXOpcodeTreeNodeType::ADDRESS_SIZE, 0x0000),
        /* E4 */ 0x02A6,
        /* E5 */ 0x02A3,
        /* E6 */ 0x03A6,
        /* E7 */ 0x03A5,
        /* E8 */ 0x004E,
        /* E9 */ 0x02D7,
        /* EA */ NODE(VXOpcodeTreeNodeType::MODE, 0x002B),
        /* EB */ 0x02D8,
        /* EC */ 0x02A4,
        /* ED */ 0x02A5,
        /* EE */ 0x03A7,
        /* EF */ 0x03A8,
        /* F0 */ 0x0302,
        /* F1 */ 0x02B6,
        /* F2 */ 0x04E8,
        /* F3 */ 0x04E7,
        /* F4 */ 0x0299,
        /* F5 */ 0x0059,
        /* F6 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0028),
        /* F7 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0029),
        /* F8 */ 0x0053,
        /* F9 */ 0x0550,
        /* FA */ 0x0057,
        /* FB */ 0x0553,
        /* FC */ 0x0054,
        /* FD */ 0x0551,
        /* FE */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x002A),
        /* FF */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x002B),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0000),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0000),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0021),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0022),
        /* 04 */ INVALID,
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0023),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0024),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0025),
        /* 08 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0026),
        /* 09 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0027),
        /* 0A */ INVALID,
        /* 0B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0028),
        /* 0C */ INVALID,
        /* 0D */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0003),
        /* 0E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0031),
        /* 0F */ NODE(VXOpcodeTreeNodeType::AMD3DNOW, 0x0000),
        /* 10 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0032),
        /* 11 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0033),
        /* 12 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0001),
        /* 13 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0036),
        /* 14 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0037),
        /* 15 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0038),
        /* 16 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0002),
        /* 17 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003B),
        /* 18 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0004),
        /* 19 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0040),
        /* 1A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0041),
        /* 1B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0042),
        /* 1C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0043),
        /* 1D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0044),
        /* 1E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0045),
        /* 1F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0046),
        /* 20 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0047),
        /* 21 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0048),
        /* 22 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0049),
        /* 23 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004A),
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004B),
        /* 29 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004C),
        /* 2A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004D),
        /* 2B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004E),
        /* 2C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x004F),
        /* 2D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0050),
        /* 2E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0051),
        /* 2F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0052),
        /* 30 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0053),
        /* 31 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0054),
        /* 32 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0055),
        /* 33 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0056),
        /* 34 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0057),
        /* 35 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0058),
        /* 36 */ INVALID,
        /* 37 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0059),
        /* 38 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0002),
        /* 39 */ INVALID,
        /* 3A */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0003),
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A9),
        /* 41 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AA),
        /* 42 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AB),
        /* 43 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AC),
        /* 44 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AD),
        /* 45 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AE),
        /* 46 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00AF),
        /* 47 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B0),
        /* 48 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B1),
        /* 49 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B2),
        /* 4A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B3),
        /* 4B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B4),
        /* 4C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B5),
        /* 4D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B6),
        /* 4E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B7),
        /* 4F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B8),
        /* 50 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00B9),
        /* 51 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BA),
        /* 52 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BB),
        /* 53 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BC),
        /* 54 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BD),
        /* 55 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BE),
        /* 56 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00BF),
        /* 57 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C0),
        /* 58 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C1),
        /* 59 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C2),
        /* 5A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C3),
        /* 5B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C4),
        /* 5C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C5),
        /* 5D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C6),
        /* 5E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C7),
        /* 5F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C8),
        /* 60 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00C9),
        /* 61 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CA),
        /* 62 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CB),
        /* 63 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CC),
        /* 64 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CD),
        /* 65 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CE),
        /* 66 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00CF),
        /* 67 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D0),
        /* 68 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D1),
        /* 69 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D2),
        /* 6A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D3),
        /* 6B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D4),
        /* 6C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D5),
        /* 6D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D6),
        /* 6E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D7),
        /* 6F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D8),
        /* 70 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00D9),
        /* 71 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0005),
        /* 72 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0006),
        /* 73 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0007),
        /* 74 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E4),
        /* 75 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E5),
        /* 76 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E6),
        /* 77 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E7),
        /* 78 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E8),
        /* 79 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E9),
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00EA),
        /* 7D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00EB),
        /* 7E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00EC),
        /* 7F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00ED),
        /* 80 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00EE),
        /* 81 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00EF),
        /* 82 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F0),
        /* 83 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F1),
        /* 84 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F2),
        /* 85 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F3),
        /* 86 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F4),
        /* 87 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F5),
        /* 88 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F6),
        /* 89 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F7),
        /* 8A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F8),
        /* 8B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00F9),
        /* 8C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FA),
        /* 8D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FB),
        /* 8E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FC),
        /* 8F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FD),
        /* 90 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FE),
        /* 91 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00FF),
        /* 92 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0100),
        /* 93 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0101),
        /* 94 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0102),
        /* 95 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0103),
        /* 96 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0104),
        /* 97 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0105),
        /* 98 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0106),
        /* 99 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0107),
        /* 9A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0108),
        /* 9B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0109),
        /* 9C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010A),
        /* 9D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010B),
        /* 9E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010C),
        /* 9F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010D),
        /* A0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010E),
        /* A1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x010F),
        /* A2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0110),
        /* A3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0111),
        /* A4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0112),
        /* A5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0113),
        /* A6 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0003),
        /* A7 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0004),
        /* A8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011D),
        /* A9 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011E),
        /* AA */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011F),
        /* AB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0120),
        /* AC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0121),
        /* AD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0122),
        /* AE */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0005),
        /* AF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0142),
        /* B0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0143),
        /* B1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0144),
        /* B2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0145),
        /* B3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0146),
        /* B4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0147),
        /* B5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0148),
        /* B6 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0149),
        /* B7 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014A),
        /* B8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014B),
        /* B9 */ INVALID,
        /* BA */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000C),
        /* BB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0150),
        /* BC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0151),
        /* BD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0152),
        /* BE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0153),
        /* BF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0154),
        /* C0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0155),
        /* C1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0156),
        /* C2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0157),
        /* C3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0158),
        /* C4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0159),
        /* C5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015A),
        /* C6 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015B),
        /* C7 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0006),
        /* C8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0160),
        /* C9 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0161),
        /* CA */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0162),
        /* CB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0163),
        /* CC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0164),
        /* CD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0165),
        /* CE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0166),
        /* CF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0167),
        /* D0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0168),
        /* D1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0169),
        /* D2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016A),
        /* D3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016B),
        /* D4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016C),
        /* D5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016D),
        /* D6 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016E),
        /* D7 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x016F),
        /* D8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0170),
        /* D9 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0171),
        /* DA */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0172),
        /* DB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0173),
        /* DC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0174),
        /* DD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0175),
        /* DE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0176),
        /* DF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0177),
        /* E0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0178),
        /* E1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0179),
        /* E2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017A),
        /* E3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017B),
        /* E4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017C),
        /* E5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017D),
        /* E6 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017E),
        /* E7 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x017F),
        /* E8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0180),
        /* E9 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0181),
        /* EA */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0182),
        /* EB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0183),
        /* EC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0184),
        /* ED */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0185),
        /* EE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0186),
        /* EF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0187),
        /* F0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0188),
        /* F1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0189),
        /* F2 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018A),
        /* F3 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018B),
        /* F4 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018C),
        /* F5 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018D),
        /* F6 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018E),
        /* F7 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0007),
        /* F8 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0190),
        /* F9 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0191),
        /* FA */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0192),
        /* FB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0193),
        /* FC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0194),
        /* FD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0195),
        /* FE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0196),
        /* FF */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005A),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005B),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005C),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005D),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005E),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x005F),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0060),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0061),
        /* 08 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0062),
        /* 09 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0063),
        /* 0A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0064),
        /* 0B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0065),
        /* 0C */ INVALID,
        /* 0D */ INVALID,
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0066),
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0067),
        /* 15 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0068),
        /* 16 */ INVALID,
        /* 17 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0069),
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006A),
        /* 1D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006B),
        /* 1E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006C),
        /* 1F */ INVALID,
        /* 20 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006D),
        /* 21 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006E),
        /* 22 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x006F),
        /* 23 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0070),
        /* 24 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0071),
        /* 25 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0072),
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0073),
        /* 29 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0074),
        /* 2A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0075),
        /* 2B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0076),
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0077),
        /* 31 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0078),
        /* 32 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0079),
        /* 33 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007A),
        /* 34 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007B),
        /* 35 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007C),
        /* 36 */ INVALID,
        /* 37 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007D),
        /* 38 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007E),
        /* 39 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x007F),
        /* 3A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0080),
        /* 3B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0081),
        /* 3C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0082),
        /* 3D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0083),
        /* 3E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0084),
        /* 3F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0085),
        /* 40 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0086),
        /* 41 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0087),
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ INVALID,
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ INVALID,
        /* 59 */ INVALID,
        /* 5A */ INVALID,
        /* 5B */ INVALID,
        /* 5C */ INVALID,
        /* 5D */ INVALID,
        /* 5E */ INVALID,
        /* 5F */ INVALID,
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0088),
        /* 81 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0089),
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ INVALID,
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008A),
        /* DC */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008B),
        /* DD */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008C),
        /* DE */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008D),
        /* DF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008E),
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x008F),
        /* F1 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0090),
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0091),
        /* 09 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0092),
        /* 0A */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0093),
        /* 0B */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0094),
        /* 0C */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0095),
        /* 0D */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0096),
        /* 0E */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0097),
        /* 0F */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0098),
        /* 10 */ INVALID,
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0099),
        /* 15 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009A),
        /* 16 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009B),
        /* 17 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009C),
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009D),
        /* 21 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009E),
        /* 22 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x009F),
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ INVALID,
        /* 2A */ INVALID,
        /* 2B */ INVALID,
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A0),
        /* 41 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A1),
        /* 42 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A2),
        /* 43 */ INVALID,
        /* 44 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A3),
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ INVALID,
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ INVALID,
        /* 59 */ INVALID,
        /* 5A */ INVALID,
        /* 5B */ INVALID,
        /* 5C */ INVALID,
        /* 5D */ INVALID,
        /* 5E */ INVALID,
        /* 5F */ INVALID,
        /* 60 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A4),
        /* 61 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A5),
        /* 62 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A6),
        /* 63 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A7),
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ INVALID,
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00A8),
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ INVALID,
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ INVALID,
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ MODRM(0x05FC),
        /* 11 */ MODRM(0x05FD),
        /* 12 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0008),
        /* 13 */ MODRM(0x05E2),
        /* 14 */ MODRM(0x06AF),
        /* 15 */ MODRM(0x06AD),
        /* 16 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0009),
        /* 17 */ MODRM(0x05DD),
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ MODRM(0x05CF),
        /* 29 */ MODRM(0x05D0),
        /* 2A */ INVALID,
        /* 2B */ MODRM(0x05E9),
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ MODRM(0x06AB),
        /* 2F */ MODRM(0x0599),
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ INVALID,
        /* 41 */ INVALID,
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ MODRM(0x05E5),
        /* 51 */ MODRM(0x06A0),
        /* 52 */ MODRM(0x069B),
        /* 53 */ MODRM(0x0695),
        /* 54 */ MODRM(0x058D),
        /* 55 */ MODRM(0x058B),
        /* 56 */ MODRM(0x060D),
        /* 57 */ MODRM(0x06B1),
        /* 58 */ MODRM(0x057F),
        /* 59 */ MODRM(0x0606),
        /* 5A */ MODRM(0x059F),
        /* 5B */ MODRM(0x059B),
        /* 5C */ MODRM(0x06A5),
        /* 5D */ MODRM(0x05C7),
        /* 5E */ MODRM(0x05AB),
        /* 5F */ MODRM(0x05C1),
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0000),
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000A),
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ MODRM(0x0595),
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ MODRM(0x069E),
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ INVALID,
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ INVALID,
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ INVALID,
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ MODRM(0x05FA),
        /* 11 */ MODRM(0x05FB),
        /* 12 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000B),
        /* 13 */ MODRM(0x05E0),
        /* 14 */ MODRM(0x06AE),
        /* 15 */ MODRM(0x06AC),
        /* 16 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000C),
        /* 17 */ MODRM(0x05DC),
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ MODRM(0x05CD),
        /* 29 */ MODRM(0x05CE),
        /* 2A */ INVALID,
        /* 2B */ MODRM(0x05E8),
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ MODRM(0x06AA),
        /* 2F */ MODRM(0x0598),
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ INVALID,
        /* 41 */ INVALID,
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ MODRM(0x05E4),
        /* 51 */ MODRM(0x069F),
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ MODRM(0x058C),
        /* 55 */ MODRM(0x058A),
        /* 56 */ MODRM(0x060C),
        /* 57 */ MODRM(0x06B0),
        /* 58 */ MODRM(0x057E),
        /* 59 */ MODRM(0x0605),
        /* 5A */ MODRM(0x059D),
        /* 5B */ MODRM(0x059E),
        /* 5C */ MODRM(0x06A4),
        /* 5D */ MODRM(0x05C6),
        /* 5E */ MODRM(0x05AA),
        /* 5F */ MODRM(0x05C0),
        /* 60 */ MODRM(0x0690),
        /* 61 */ MODRM(0x0693),
        /* 62 */ MODRM(0x0691),
        /* 63 */ MODRM(0x0612),
        /* 64 */ MODRM(0x062B),
        /* 65 */ MODRM(0x062E),
        /* 66 */ MODRM(0x062C),
        /* 67 */ MODRM(0x0614),
        /* 68 */ MODRM(0x068C),
        /* 69 */ MODRM(0x068F),
        /* 6A */ MODRM(0x068D),
        /* 6B */ MODRM(0x0611),
        /* 6C */ MODRM(0x0692),
        /* 6D */ MODRM(0x068E),
        /* 6E */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0014),
        /* 6F */ MODRM(0x05D7),
        /* 70 */ MODRM(0x066B),
        /* 71 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0017),
        /* 72 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0018),
        /* 73 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0019),
        /* 74 */ MODRM(0x0625),
        /* 75 */ MODRM(0x0628),
        /* 76 */ MODRM(0x0626),
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ MODRM(0x05B4),
        /* 7D */ MODRM(0x05B6),
        /* 7E */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0015),
        /* 7F */ MODRM(0x05D8),
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ MODRM(0x0594),
        /* C3 */ INVALID,
        /* C4 */ MODRM(0x0647),
        /* C5 */ MODRM(0x063B),
        /* C6 */ MODRM(0x069D),
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ MODRM(0x0582),
        /* D1 */ MODRM(0x0681),
        /* D2 */ MODRM(0x067D),
        /* D3 */ MODRM(0x067F),
        /* D4 */ MODRM(0x0617),
        /* D5 */ MODRM(0x0667),
        /* D6 */ MODRM(0x05EB),
        /* D7 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0004),
        /* D8 */ MODRM(0x0688),
        /* D9 */ MODRM(0x0689),
        /* DA */ MODRM(0x0653),
        /* DB */ MODRM(0x061E),
        /* DC */ MODRM(0x061A),
        /* DD */ MODRM(0x061B),
        /* DE */ MODRM(0x064D),
        /* DF */ MODRM(0x061F),
        /* E0 */ MODRM(0x0620),
        /* E1 */ MODRM(0x067B),
        /* E2 */ MODRM(0x0678),
        /* E3 */ MODRM(0x0621),
        /* E4 */ MODRM(0x0664),
        /* E5 */ MODRM(0x0665),
        /* E6 */ MODRM(0x05A6),
        /* E7 */ MODRM(0x05E6),
        /* E8 */ MODRM(0x0686),
        /* E9 */ MODRM(0x0687),
        /* EA */ MODRM(0x0652),
        /* EB */ MODRM(0x0668),
        /* EC */ MODRM(0x0618),
        /* ED */ MODRM(0x0619),
        /* EE */ MODRM(0x064C),
        /* EF */ MODRM(0x0694),
        /* F0 */ INVALID,
        /* F1 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0005),
        /* F2 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0006),
        /* F3 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0007),
        /* F4 */ INVALID,
        /* F5 */ MODRM(0x0649),
        /* F6 */ MODRM(0x0669),
        /* F7 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000D),
        /* F8 */ MODRM(0x0683),
        /* F9 */ MODRM(0x068A),
        /* FA */ MODRM(0x0684),
        /* FB */ MODRM(0x0685),
        /* FC */ MODRM(0x0615),
        /* FD */ MODRM(0x061C),
        /* FE */ MODRM(0x0616),
        /* FF */ INVALID,
    },
    {
        /* 00 */ MODRM(0x066A),
        /* 01 */ MODRM(0x063E),
        /* 02 */ MODRM(0x063C),
        /* 03 */ MODRM(0x063D),
        /* 04 */ MODRM(0x0648),
        /* 05 */ MODRM(0x0642),
        /* 06 */ MODRM(0x0640),
        /* 07 */ MODRM(0x0641),
        /* 08 */ MODRM(0x066E),
        /* 09 */ MODRM(0x0670),
        /* 0A */ MODRM(0x066F),
        /* 0B */ MODRM(0x0663),
        /* 0C */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0000),
        /* 0D */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0001),
        /* 0E */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0002),
        /* 0F */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0003),
        /* 10 */ INVALID,
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ INVALID,
        /* 15 */ INVALID,
        /* 16 */ INVALID,
        /* 17 */ MODRM(0x068B),
        /* 18 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0004),
        /* 19 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0005),
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ MODRM(0x060E),
        /* 1D */ MODRM(0x0610),
        /* 1E */ MODRM(0x060F),
        /* 1F */ INVALID,
        /* 20 */ MODRM(0x0659),
        /* 21 */ MODRM(0x0657),
        /* 22 */ MODRM(0x0658),
        /* 23 */ MODRM(0x065A),
        /* 24 */ MODRM(0x065B),
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ MODRM(0x0662),
        /* 29 */ MODRM(0x0627),
        /* 2A */ MODRM(0x05E7),
        /* 2B */ MODRM(0x0613),
        /* 2C */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0006),
        /* 2D */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0007),
        /* 2E */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0008),
        /* 2F */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0009),
        /* 30 */ MODRM(0x065E),
        /* 31 */ MODRM(0x065C),
        /* 32 */ MODRM(0x065D),
        /* 33 */ MODRM(0x0660),
        /* 34 */ MODRM(0x0661),
        /* 35 */ MODRM(0x065F),
        /* 36 */ INVALID,
        /* 37 */ MODRM(0x062D),
        /* 38 */ MODRM(0x0650),
        /* 39 */ MODRM(0x0651),
        /* 3A */ MODRM(0x0655),
        /* 3B */ MODRM(0x0654),
        /* 3C */ MODRM(0x064A),
        /* 3D */ MODRM(0x064B),
        /* 3E */ MODRM(0x064F),
        /* 3F */ MODRM(0x064E),
        /* 40 */ MODRM(0x0666),
        /* 41 */ MODRM(0x063F),
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ INVALID,
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ INVALID,
        /* 59 */ INVALID,
        /* 5A */ INVALID,
        /* 5B */ INVALID,
        /* 5C */ INVALID,
        /* 5D */ INVALID,
        /* 5E */ INVALID,
        /* 5F */ INVALID,
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ INVALID,
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ MODRM(0x0588),
        /* DC */ MODRM(0x0586),
        /* DD */ MODRM(0x0587),
        /* DE */ MODRM(0x0584),
        /* DF */ MODRM(0x0585),
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000A),
        /* 05 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000B),
        /* 06 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000C),
        /* 07 */ INVALID,
        /* 08 */ MODRM(0x0698),
        /* 09 */ MODRM(0x0697),
        /* 0A */ MODRM(0x069A),
        /* 0B */ MODRM(0x0699),
        /* 0C */ MODRM(0x058F),
        /* 0D */ MODRM(0x058E),
        /* 0E */ MODRM(0x0623),
        /* 0F */ MODRM(0x061D),
        /* 10 */ INVALID,
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000D),
        /* 15 */ MODRM(0x063A),
        /* 16 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0016),
        /* 17 */ MODRM(0x05B3),
        /* 18 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0011),
        /* 19 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0012),
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0013),
        /* 21 */ MODRM(0x05B9),
        /* 22 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0025),
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ INVALID,
        /* 2A */ INVALID,
        /* 2B */ INVALID,
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ MODRM(0x05AF),
        /* 41 */ MODRM(0x05AE),
        /* 42 */ MODRM(0x05FE),
        /* 43 */ INVALID,
        /* 44 */ MODRM(0x0624),
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0016),
        /* 4B */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0017),
        /* 4C */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0018),
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ INVALID,
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ INVALID,
        /* 59 */ INVALID,
        /* 5A */ INVALID,
        /* 5B */ INVALID,
        /* 5C */ INVALID,
        /* 5D */ INVALID,
        /* 5E */ INVALID,
        /* 5F */ INVALID,
        /* 60 */ MODRM(0x062A),
        /* 61 */ MODRM(0x0629),
        /* 62 */ MODRM(0x0630),
        /* 63 */ MODRM(0x062F),
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ INVALID,
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ MODRM(0x0589),
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ INVALID,
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ INVALID,
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000E),
        /* 11 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x000F),
        /* 12 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0010),
        /* 13 */ INVALID,
        /* 14 */ INVALID,
        /* 15 */ INVALID,
        /* 16 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0011),
        /* 17 */ INVALID,
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ INVALID,
        /* 2A */ MODRM(0x05A3),
        /* 2B */ INVALID,
        /* 2C */ MODRM(0x05A9),
        /* 2D */ MODRM(0x05A5),
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ INVALID,
        /* 41 */ INVALID,
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ MODRM(0x06A2),
        /* 52 */ MODRM(0x069C),
        /* 53 */ MODRM(0x0696),
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ MODRM(0x0581),
        /* 59 */ MODRM(0x0608),
        /* 5A */ MODRM(0x05A4),
        /* 5B */ MODRM(0x05A7),
        /* 5C */ MODRM(0x06A7),
        /* 5D */ MODRM(0x05C9),
        /* 5E */ MODRM(0x05AD),
        /* 5F */ MODRM(0x05C3),
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ MODRM(0x05D9),
        /* 70 */ MODRM(0x066C),
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ MODRM(0x05ED),
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ MODRM(0x0597),
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ INVALID,
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ MODRM(0x059A),
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ INVALID,
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ INVALID,
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0012),
        /* 11 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0013),
        /* 12 */ NODE(VXOpcodeTreeNodeType::MODRM_MOD, 0x0014),
        /* 13 */ INVALID,
        /* 14 */ INVALID,
        /* 15 */ INVALID,
        /* 16 */ INVALID,
        /* 17 */ INVALID,
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ INVALID,
        /* 2A */ MODRM(0x05A2),
        /* 2B */ INVALID,
        /* 2C */ MODRM(0x05A8),
        /* 2D */ MODRM(0x05A0),
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ INVALID,
        /* 41 */ INVALID,
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ MODRM(0x06A1),
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ MODRM(0x0580),
        /* 59 */ MODRM(0x0607),
        /* 5A */ MODRM(0x05A1),
        /* 5B */ INVALID,
        /* 5C */ MODRM(0x06A6),
        /* 5D */ MODRM(0x05C8),
        /* 5E */ MODRM(0x05AC),
        /* 5F */ MODRM(0x05C2),
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ MODRM(0x066D),
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ MODRM(0x05B5),
        /* 7D */ MODRM(0x05B7),
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ INVALID,
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ INVALID,
        /* 8F */ INVALID,
        /* 90 */ INVALID,
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ INVALID,
        /* 95 */ INVALID,
        /* 96 */ INVALID,
        /* 97 */ INVALID,
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ INVALID,
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ INVALID,
        /* 9F */ INVALID,
        /* A0 */ INVALID,
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ INVALID,
        /* A5 */ INVALID,
        /* A6 */ INVALID,
        /* A7 */ INVALID,
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ INVALID,
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ INVALID,
        /* AF */ INVALID,
        /* B0 */ INVALID,
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ INVALID,
        /* B5 */ INVALID,
        /* B6 */ INVALID,
        /* B7 */ INVALID,
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ INVALID,
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ INVALID,
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ MODRM(0x0596),
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ MODRM(0x0583),
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ INVALID,
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ MODRM(0x059C),
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ MODRM(0x05BA),
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeModrmMod[][2] = 
{
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0001),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0002),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0034),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0035),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0039),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003A),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0008),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0009),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000A),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000B),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000D),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x000E),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x018F),
    },
    {
        /* 00 */ MODRM(0x05E3),
        /* 01 */ MODRM(0x05DA),
    },
    {
        /* 00 */ MODRM(0x05DE),
        /* 01 */ MODRM(0x05DF),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0016),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05E1),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05DB),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x05BB),
    },
    {
        /* 00 */ MODRM(0x05F8),
        /* 01 */ MODRM(0x05F6),
    },
    {
        /* 00 */ MODRM(0x05F9),
        /* 01 */ MODRM(0x05F7),
    },
    {
        /* 00 */ MODRM(0x05F5),
        /* 01 */ MODRM(0x05F4),
    },
    {
        /* 00 */ MODRM(0x05F2),
        /* 01 */ MODRM(0x05F3),
    },
    {
        /* 00 */ MODRM(0x05EE),
        /* 01 */ MODRM(0x05EF),
    },
    {
        /* 00 */ MODRM(0x05F1),
        /* 01 */ MODRM(0x05F0),
    },
    {
        /* 00 */ MODRM(0x05D6),
        /* 01 */ MODRM(0x05D5),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0020),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0000),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0021),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0001),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0022),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0002),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0023),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0003),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0024),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0004),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0025),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0005),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0026),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0006),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_REG, 0x0027),
        /* 01 */ NODE(VXOpcodeTreeNodeType::X87, 0x0007),
    },
};

static const VXOpcodeTreeNode optreeModrmReg[][8] = 
{
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0000),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0001),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0002),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0003),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0004),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0005),
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0006),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0007),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0008),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0009),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000A),
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000B),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000C),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0000),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0001),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0002),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0003),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001D),
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001E),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0004),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0029),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002A),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002B),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002C),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002D),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002E),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x002F),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0030),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003C),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003D),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003E),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x003F),
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DA),
        /* 03 */ INVALID,
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DB),
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DC),
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DD),
        /* 03 */ INVALID,
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DE),
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00DF),
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E0),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E1),
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E2),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x00E3),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0005),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0006),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0007),
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0008),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0009),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000A),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000B),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000C),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000D),
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0123),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0124),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0125),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0126),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0127),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0128),
        /* 06 */ INVALID,
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0129),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000E),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x000F),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MODRM_RM, 0x0010),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014C),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014D),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014E),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x014F),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015C),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015D),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015E),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x015F),
        /* 07 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x000F),
        /* 01 */ MODRM(0x0399),
        /* 02 */ MODRM(0x0005),
        /* 03 */ MODRM(0x050E),
        /* 04 */ MODRM(0x0028),
        /* 05 */ MODRM(0x055A),
        /* 06 */ MODRM(0x06CA),
        /* 07 */ MODRM(0x0071),
    },
    {
        /* 00 */ MODRM(0x0013),
        /* 01 */ MODRM(0x039B),
        /* 02 */ MODRM(0x0009),
        /* 03 */ MODRM(0x050F),
        /* 04 */ MODRM(0x0029),
        /* 05 */ MODRM(0x055C),
        /* 06 */ MODRM(0x06CF),
        /* 07 */ MODRM(0x006A),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0015),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0016),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0017),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0018),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0019),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MODE, 0x001A),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MODE, 0x001B),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MODE, 0x001C),
    },
    {
        /* 00 */ MODRM(0x0012),
        /* 01 */ MODRM(0x039C),
        /* 02 */ MODRM(0x0008),
        /* 03 */ MODRM(0x0509),
        /* 04 */ MODRM(0x002B),
        /* 05 */ MODRM(0x055D),
        /* 06 */ MODRM(0x06CD),
        /* 07 */ MODRM(0x006B),
    },
    {
        /* 00 */ MODRM(0x044A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x04EE),
        /* 01 */ MODRM(0x04F6),
        /* 02 */ MODRM(0x04D7),
        /* 03 */ MODRM(0x04E1),
        /* 04 */ MODRM(0x053A),
        /* 05 */ MODRM(0x053F),
        /* 06 */ MODRM(0x0534),
        /* 07 */ MODRM(0x0503),
    },
    {
        /* 00 */ MODRM(0x04F0),
        /* 01 */ MODRM(0x04F7),
        /* 02 */ MODRM(0x04D8),
        /* 03 */ MODRM(0x04DF),
        /* 04 */ MODRM(0x052F),
        /* 05 */ MODRM(0x053E),
        /* 06 */ MODRM(0x0533),
        /* 07 */ MODRM(0x0506),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x06A3),
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ 0x0682,
        /* 03 */ INVALID,
        /* 04 */ 0x067A,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0001),
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ 0x067C,
        /* 03 */ INVALID,
        /* 04 */ 0x0679,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0002),
        /* 07 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ 0x0680,
        /* 03 */ 0x067E,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0003),
        /* 07 */ 0x0673,
    },
    {
        /* 00 */ MODRM(0x0324),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0325),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x04ED),
        /* 01 */ MODRM(0x04F5),
        /* 02 */ MODRM(0x04D9),
        /* 03 */ MODRM(0x04E0),
        /* 04 */ MODRM(0x0537),
        /* 05 */ MODRM(0x0542),
        /* 06 */ MODRM(0x0536),
        /* 07 */ MODRM(0x0505),
    },
    {
        /* 00 */ MODRM(0x04EF),
        /* 01 */ MODRM(0x04F8),
        /* 02 */ MODRM(0x04D6),
        /* 03 */ MODRM(0x04DC),
        /* 04 */ MODRM(0x0531),
        /* 05 */ MODRM(0x0541),
        /* 06 */ MODRM(0x0538),
        /* 07 */ MODRM(0x0504),
    },
    {
        /* 00 */ MODRM(0x04F2),
        /* 01 */ MODRM(0x04F3),
        /* 02 */ MODRM(0x04D4),
        /* 03 */ MODRM(0x04DE),
        /* 04 */ MODRM(0x0532),
        /* 05 */ MODRM(0x053D),
        /* 06 */ MODRM(0x0535),
        /* 07 */ MODRM(0x0507),
    },
    {
        /* 00 */ MODRM(0x04F1),
        /* 01 */ MODRM(0x04F4),
        /* 02 */ MODRM(0x04D5),
        /* 03 */ MODRM(0x04DD),
        /* 04 */ MODRM(0x0539),
        /* 05 */ MODRM(0x0540),
        /* 06 */ MODRM(0x0530),
        /* 07 */ MODRM(0x0502),
    },
    {
        /* 00 */ MODRM(0x00BB),
        /* 01 */ MODRM(0x01CC),
        /* 02 */ MODRM(0x0119),
        /* 03 */ MODRM(0x013D),
        /* 04 */ MODRM(0x022C),
        /* 05 */ MODRM(0x0245),
        /* 06 */ MODRM(0x0166),
        /* 07 */ MODRM(0x0171),
    },
    {
        /* 00 */ MODRM(0x01BE),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x01F5),
        /* 03 */ MODRM(0x0205),
        /* 04 */ MODRM(0x01C3),
        /* 05 */ MODRM(0x01C2),
        /* 06 */ MODRM(0x01E8),
        /* 07 */ MODRM(0x01E7),
    },
    {
        /* 00 */ MODRM(0x019B),
        /* 01 */ MODRM(0x01A8),
        /* 02 */ MODRM(0x019C),
        /* 03 */ MODRM(0x019F),
        /* 04 */ MODRM(0x01B3),
        /* 05 */ MODRM(0x01B5),
        /* 06 */ MODRM(0x01A0),
        /* 07 */ MODRM(0x01A2),
    },
    {
        /* 00 */ MODRM(0x01A5),
        /* 01 */ MODRM(0x01B1),
        /* 02 */ MODRM(0x01AB),
        /* 03 */ MODRM(0x01AC),
        /* 04 */ INVALID,
        /* 05 */ MODRM(0x01BD),
        /* 06 */ INVALID,
        /* 07 */ MODRM(0x01FF),
    },
    {
        /* 00 */ MODRM(0x00BA),
        /* 01 */ MODRM(0x01D5),
        /* 02 */ MODRM(0x0118),
        /* 03 */ MODRM(0x013E),
        /* 04 */ MODRM(0x022B),
        /* 05 */ MODRM(0x024B),
        /* 06 */ MODRM(0x0158),
        /* 07 */ MODRM(0x017A),
    },
    {
        /* 00 */ MODRM(0x01BC),
        /* 01 */ MODRM(0x01B0),
        /* 02 */ MODRM(0x01FC),
        /* 03 */ MODRM(0x0206),
        /* 04 */ MODRM(0x01F0),
        /* 05 */ INVALID,
        /* 06 */ MODRM(0x01E6),
        /* 07 */ MODRM(0x01EA),
    },
    {
        /* 00 */ MODRM(0x019A),
        /* 01 */ MODRM(0x01A7),
        /* 02 */ MODRM(0x019D),
        /* 03 */ MODRM(0x019E),
        /* 04 */ MODRM(0x01B2),
        /* 05 */ MODRM(0x01B4),
        /* 06 */ MODRM(0x01A1),
        /* 07 */ MODRM(0x01A3),
    },
    {
        /* 00 */ MODRM(0x01A6),
        /* 01 */ MODRM(0x01AF),
        /* 02 */ MODRM(0x01AA),
        /* 03 */ MODRM(0x01AE),
        /* 04 */ MODRM(0x00D2),
        /* 05 */ MODRM(0x01A4),
        /* 06 */ MODRM(0x00D3),
        /* 07 */ MODRM(0x01AD),
    },
    {
        /* 00 */ MODRM(0x0570),
        /* 01 */ MODRM(0x0575),
        /* 02 */ MODRM(0x0398),
        /* 03 */ MODRM(0x038F),
        /* 04 */ MODRM(0x0387),
        /* 05 */ MODRM(0x029F),
        /* 06 */ MODRM(0x00AC),
        /* 07 */ MODRM(0x029C),
    },
    {
        /* 00 */ MODRM(0x0571),
        /* 01 */ MODRM(0x056F),
        /* 02 */ MODRM(0x0397),
        /* 03 */ MODRM(0x038E),
        /* 04 */ MODRM(0x0388),
        /* 05 */ MODRM(0x029E),
        /* 06 */ MODRM(0x00AB),
        /* 07 */ MODRM(0x029D),
    },
    {
        /* 00 */ MODRM(0x02AA),
        /* 01 */ MODRM(0x00A5),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02AB),
        /* 01 */ MODRM(0x00A4),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODE, 0x002C),
        /* 03 */ MODRM(0x004D),
        /* 04 */ MODRM(0x02D6),
        /* 05 */ MODRM(0x02D5),
        /* 06 */ MODRM(0x04C9),
        /* 07 */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeModrmRm[][8] = 
{
    {
        /* 00 */ INVALID,
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000D),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000E),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x000F),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0010),
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0011),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0012),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0013),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0014),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0015),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0016),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0017),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0018),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0019),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001A),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001B),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001C),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x001F),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0020),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0114),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0115),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0116),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0117),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0118),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0119),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x011C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012A),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012B),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012C),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012D),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012E),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x012F),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0130),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0131),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0132),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0133),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0134),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0135),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0136),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0137),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0138),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0139),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013A),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013B),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013C),
        /* 03 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013D),
        /* 04 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013E),
        /* 05 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x013F),
        /* 06 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0140),
        /* 07 */ NODE(VXOpcodeTreeNodeType::MANDATORY, 0x0141),
    },
};

static const VXOpcodeTreeNode optreeMandatory[][4] = 
{
    {
        /* 00 */ MODRM(0x0549),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0559),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02FF),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x030C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05B0),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05B1),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x052E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0547),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02FC),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02FE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x054B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0300),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02BC),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0000),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0001),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0002),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0003),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x031F,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x038D,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C8,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06D8,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0004),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0005),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0006),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0007),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0008),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0009),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x054A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0301),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0568,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02EC),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x030A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0569,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0058,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x056E,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02B9,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06B5,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0579,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0463),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0462),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0461),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0464),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0465),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0460),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x045E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x045F),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0189,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0383),
        /* 01 */ MODRM(0x0372),
        /* 02 */ MODRM(0x037B),
        /* 03 */ MODRM(0x0381),
    },
    {
        /* 00 */ MODRM(0x0382),
        /* 01 */ MODRM(0x0374),
        /* 02 */ MODRM(0x037A),
        /* 03 */ MODRM(0x0380),
    },
    {
        /* 00 */ MODRM(0x035F),
        /* 01 */ MODRM(0x034F),
        /* 02 */ MODRM(0x0377),
        /* 03 */ MODRM(0x035C),
    },
    {
        /* 00 */ MODRM(0x0356),
        /* 01 */ MODRM(0x0350),
        /* 02 */ MODRM(0x0378),
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x035E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x035D),
    },
    {
        /* 00 */ MODRM(0x057D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x057C),
    },
    {
        /* 00 */ MODRM(0x057B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x057A),
    },
    {
        /* 00 */ MODRM(0x0359),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0375),
        /* 03 */ MODRM(0x0357),
    },
    {
        /* 00 */ MODRM(0x035B),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0376),
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x035A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0358),
    },
    {
        /* 00 */ MODRM(0x0466),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0467),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0468),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0469),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0395),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0396),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0393),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0390),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0391),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0392),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0394),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x033A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0335),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0337),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0339),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0343),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0342),
    },
    {
        /* 00 */ MODRM(0x0344),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0341),
    },
    {
        /* 00 */ MODRM(0x008D),
        /* 01 */ MODRM(0x0093),
        /* 02 */ MODRM(0x0094),
        /* 03 */ MODRM(0x008C),
    },
    {
        /* 00 */ MODRM(0x0366),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0365),
    },
    {
        /* 00 */ MODRM(0x009A),
        /* 01 */ MODRM(0x009B),
        /* 02 */ MODRM(0x009C),
        /* 03 */ MODRM(0x0098),
    },
    {
        /* 00 */ MODRM(0x0090),
        /* 01 */ MODRM(0x0091),
        /* 02 */ MODRM(0x0096),
        /* 03 */ MODRM(0x008A),
    },
    {
        /* 00 */ MODRM(0x0578),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0577),
    },
    {
        /* 00 */ MODRM(0x0082),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0081),
    },
    {
        /* 00 */ 0x06B6,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04E5,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04E2,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04E3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0003),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0004),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0296,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x046C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x046D),
    },
    {
        /* 00 */ MODRM(0x0408),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0407),
    },
    {
        /* 00 */ MODRM(0x0404),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0403),
    },
    {
        /* 00 */ MODRM(0x0405),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0406),
    },
    {
        /* 00 */ MODRM(0x0418),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0419),
    },
    {
        /* 00 */ MODRM(0x040E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x040F),
    },
    {
        /* 00 */ MODRM(0x040B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x040A),
    },
    {
        /* 00 */ MODRM(0x040D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x040C),
    },
    {
        /* 00 */ MODRM(0x0473),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0472),
    },
    {
        /* 00 */ MODRM(0x0476),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0477),
    },
    {
        /* 00 */ MODRM(0x0475),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0474),
    },
    {
        /* 00 */ MODRM(0x043C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x043B),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D4),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0037),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0036),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04AB),
    },
    {
        /* 00 */ MODRM(0x03AD),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03AC),
    },
    {
        /* 00 */ MODRM(0x03B0),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B1),
    },
    {
        /* 00 */ MODRM(0x03AE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03AF),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0430),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x042E),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x042F),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0432),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0433),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0431),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x043A),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03DB),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0363),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B6),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0436),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0434),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0435),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0438),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0439),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0437),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E4),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0424),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0425),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x042B),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x042A),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x041C),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x041D),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0423),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0422),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0442),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0409),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0005),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0006),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0023),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0021),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0022),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x001F),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0020),
    },
    {
        /* 00 */ MODRM(0x0346),
        /* 01 */ MODRM(0x0086),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0345),
        /* 01 */ MODRM(0x0085),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04FA),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04F9),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04FC),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04FB),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0035),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0034),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D5),
    },
    {
        /* 00 */ MODRM(0x03CA),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C9),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E9),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03EF),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0000),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x00B5),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0412),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x02B3),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0001),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x00B2),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x00B1),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0386),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D6),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03DF),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03DE),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E8),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E7),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0024),
    },
    {
        /* 00 */ MODRM(0x0066),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0062),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0069),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0065),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0068),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0064),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0067),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0063),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0060),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005F),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0061),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x005E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0361),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0360),
    },
    {
        /* 00 */ MODRM(0x054D),
        /* 01 */ MODRM(0x054E),
        /* 02 */ MODRM(0x054F),
        /* 03 */ MODRM(0x054C),
    },
    {
        /* 00 */ MODRM(0x04FE),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x04FF),
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x04DA),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x04DB),
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0032),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0031),
    },
    {
        /* 00 */ MODRM(0x0030),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x002F),
    },
    {
        /* 00 */ MODRM(0x03A4),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03A3),
    },
    {
        /* 00 */ MODRM(0x06D5),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x06D4),
    },
    {
        /* 00 */ MODRM(0x001A),
        /* 01 */ MODRM(0x001B),
        /* 02 */ MODRM(0x001C),
        /* 03 */ MODRM(0x0019),
    },
    {
        /* 00 */ MODRM(0x038A),
        /* 01 */ MODRM(0x038B),
        /* 02 */ MODRM(0x038C),
        /* 03 */ MODRM(0x0389),
    },
    {
        /* 00 */ MODRM(0x008F),
        /* 01 */ MODRM(0x0092),
        /* 02 */ MODRM(0x0095),
        /* 03 */ MODRM(0x008B),
    },
    {
        /* 00 */ MODRM(0x0088),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0099),
        /* 03 */ MODRM(0x008E),
    },
    {
        /* 00 */ MODRM(0x0565),
        /* 01 */ MODRM(0x0566),
        /* 02 */ MODRM(0x0567),
        /* 03 */ MODRM(0x0564),
    },
    {
        /* 00 */ MODRM(0x031C),
        /* 01 */ MODRM(0x031D),
        /* 02 */ MODRM(0x031E),
        /* 03 */ MODRM(0x031B),
    },
    {
        /* 00 */ MODRM(0x00AE),
        /* 01 */ MODRM(0x00AF),
        /* 02 */ MODRM(0x00B0),
        /* 03 */ MODRM(0x00AD),
    },
    {
        /* 00 */ MODRM(0x0310),
        /* 01 */ MODRM(0x0311),
        /* 02 */ MODRM(0x0312),
        /* 03 */ MODRM(0x030F),
    },
    {
        /* 00 */ MODRM(0x04B3),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B4),
    },
    {
        /* 00 */ MODRM(0x04B8),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B9),
    },
    {
        /* 00 */ MODRM(0x04B6),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B5),
    },
    {
        /* 00 */ MODRM(0x03B4),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B5),
    },
    {
        /* 00 */ MODRM(0x03E1),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E0),
    },
    {
        /* 00 */ MODRM(0x03E6),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E5),
    },
    {
        /* 00 */ MODRM(0x03E3),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03E2),
    },
    {
        /* 00 */ MODRM(0x03B8),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B7),
    },
    {
        /* 00 */ MODRM(0x04AC),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04AD),
    },
    {
        /* 00 */ MODRM(0x04B2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B1),
    },
    {
        /* 00 */ MODRM(0x04AF),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04AE),
    },
    {
        /* 00 */ MODRM(0x03B2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B3),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B7),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04B0),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0002),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0003),
    },
    {
        /* 00 */ MODRM(0x036A),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0355),
        /* 03 */ MODRM(0x0353),
    },
    {
        /* 00 */ MODRM(0x0471),
        /* 01 */ MODRM(0x0470),
        /* 02 */ MODRM(0x046F),
        /* 03 */ MODRM(0x046E),
    },
    {
        /* 00 */ MODRM(0x0497),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0496),
    },
    {
        /* 00 */ MODRM(0x048A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0489),
    },
    {
        /* 00 */ MODRM(0x0481),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0482),
    },
    {
        /* 00 */ MODRM(0x048F),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x048D),
    },
    {
        /* 00 */ MODRM(0x0486),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0487),
    },
    {
        /* 00 */ MODRM(0x047B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0478),
    },
    {
        /* 00 */ MODRM(0x0493),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0492),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0491),
    },
    {
        /* 00 */ MODRM(0x0480),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x047E),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x047C),
    },
    {
        /* 00 */ MODRM(0x03D8),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D7),
    },
    {
        /* 00 */ MODRM(0x03DD),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03DC),
    },
    {
        /* 00 */ MODRM(0x03DA),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D9),
    },
    {
        /* 00 */ 0x00B3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0013),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0014),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0298),
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0297),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x029B),
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x029A),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0004),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0368),
        /* 03 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0005),
    },
    {
        /* 00 */ MODRM(0x036B),
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0354),
        /* 03 */ MODRM(0x0352),
    },
    {
        /* 00 */ 0x02E3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02DA,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02C7,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02C5,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02E9,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02E0,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02C9,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02C3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02E7,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02DE,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02E4,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02DD,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02D2,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02D0,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02D3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02CD,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0522),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0518),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0517),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0525),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0521),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0519),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0516),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0524),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0520),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0523),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051F),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x051A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04C6,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0453,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0083,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0044),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x053B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x053C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0320,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06D9,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06DA,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06DB,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C6,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C5,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C4,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x06C7,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04C7,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x044E,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x04FD,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x004A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0544),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0543),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0292),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0291),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02EE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0554),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06D7),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06D6),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0055),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02FA,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F9,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F5,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F4,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F3,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F8,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F7,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x02F6,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0313,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0318,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0319,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x031A,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0317,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0314,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0315,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0316,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x052B,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x052A,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x052D,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x052C,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0527,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0526,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0529,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0528,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02A2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x007D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x007C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x030B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0048),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02FB),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x02FD),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0385),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0384),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ MODRM(0x0457),
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0043),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0049),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0047),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0045),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0046),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0039),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x003A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x037D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x037E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06B8),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06B7),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0075),
        /* 01 */ MODRM(0x0077),
        /* 02 */ MODRM(0x007A),
        /* 03 */ MODRM(0x0074),
    },
    {
        /* 00 */ MODRM(0x0364),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0417),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0416),
    },
    {
        /* 00 */ MODRM(0x03EE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03ED),
    },
    {
        /* 00 */ MODRM(0x0546),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0545),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::OPERAND_SIZE, 0x0006),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0015),
        /* 01 */ INVALID,
        /* 02 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0016),
        /* 03 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0017),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0018),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x04E4),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x003F,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x003D,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0040,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x003C,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x003E,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x003B,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0042,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ 0x0041,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x001E),
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x001D),
    },
    {
        /* 00 */ MODRM(0x0498),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0499),
    },
    {
        /* 00 */ MODRM(0x048E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0490),
    },
    {
        /* 00 */ MODRM(0x0494),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0495),
    },
    {
        /* 00 */ MODRM(0x03BE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03BD),
    },
    {
        /* 00 */ MODRM(0x0443),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0444),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0351),
        /* 02 */ MODRM(0x0370),
        /* 03 */ MODRM(0x0369),
    },
    {
        /* 00 */ MODRM(0x042D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x042C),
    },
    {
        /* 00 */ MODRM(0x04A5),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04A4),
    },
    {
        /* 00 */ MODRM(0x04A7),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04A6),
    },
    {
        /* 00 */ MODRM(0x0428),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0429),
    },
    {
        /* 00 */ MODRM(0x03CB),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03CC),
    },
    {
        /* 00 */ MODRM(0x03C3),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C4),
    },
    {
        /* 00 */ MODRM(0x03C6),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C5),
    },
    {
        /* 00 */ MODRM(0x0420),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0421),
    },
    {
        /* 00 */ MODRM(0x03CE),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03CD),
    },
    {
        /* 00 */ MODRM(0x03CF),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D0),
    },
    {
        /* 00 */ MODRM(0x048B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x048C),
    },
    {
        /* 00 */ MODRM(0x0488),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0485),
    },
    {
        /* 00 */ MODRM(0x03D2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03D3),
    },
    {
        /* 00 */ MODRM(0x043F),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x043E),
    },
    {
        /* 00 */ MODRM(0x0440),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0441),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0089),
        /* 02 */ MODRM(0x0087),
        /* 03 */ MODRM(0x0097),
    },
    {
        /* 00 */ MODRM(0x0367),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0362),
    },
    {
        /* 00 */ MODRM(0x04A0),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04A1),
    },
    {
        /* 00 */ MODRM(0x04A3),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04A2),
    },
    {
        /* 00 */ MODRM(0x0426),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0427),
    },
    {
        /* 00 */ MODRM(0x045C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x045D),
    },
    {
        /* 00 */ MODRM(0x03BF),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C0),
    },
    {
        /* 00 */ MODRM(0x03C2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C1),
    },
    {
        /* 00 */ MODRM(0x041E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x041F),
    },
    {
        /* 00 */ MODRM(0x04D2),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04D3),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x02ED),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0484),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0483),
    },
    {
        /* 00 */ MODRM(0x047A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0479),
    },
    {
        /* 00 */ MODRM(0x047D),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x047F),
    },
    {
        /* 00 */ MODRM(0x0445),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x0446),
    },
    {
        /* 00 */ MODRM(0x041B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x041A),
    },
    {
        /* 00 */ MODRM(0x046B),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x046A),
    },
    {
        /* 00 */ MODRM(0x030E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x030D),
    },
    {
        /* 00 */ MODRM(0x049A),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x049B),
    },
    {
        /* 00 */ MODRM(0x04A9),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x04A8),
    },
    {
        /* 00 */ MODRM(0x049C),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x049D),
    },
    {
        /* 00 */ MODRM(0x049E),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x049F),
    },
    {
        /* 00 */ MODRM(0x03BA),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03B9),
    },
    {
        /* 00 */ MODRM(0x03C8),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03C7),
    },
    {
        /* 00 */ MODRM(0x03BB),
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ MODRM(0x03BC),
    },
};

static const VXOpcodeTreeNode optreeX87[][64] = 
{
    {
        /* 00 */ 0x00BC,
        /* 01 */ 0x00BF,
        /* 02 */ 0x00C2,
        /* 03 */ 0x00C1,
        /* 04 */ 0x00C0,
        /* 05 */ 0x00C5,
        /* 06 */ 0x00C3,
        /* 07 */ 0x00C4,
        /* 08 */ 0x01CD,
        /* 09 */ 0x01CA,
        /* 0A */ 0x01CB,
        /* 0B */ 0x01D0,
        /* 0C */ 0x01D1,
        /* 0D */ 0x01CE,
        /* 0E */ 0x01CF,
        /* 0F */ 0x01DB,
        /* 10 */ 0x011A,
        /* 11 */ 0x011C,
        /* 12 */ 0x011B,
        /* 13 */ 0x0117,
        /* 14 */ 0x0116,
        /* 15 */ 0x011D,
        /* 16 */ 0x011F,
        /* 17 */ 0x011E,
        /* 18 */ 0x013A,
        /* 19 */ 0x0141,
        /* 1A */ 0x013C,
        /* 1B */ 0x0138,
        /* 1C */ 0x013B,
        /* 1D */ 0x0140,
        /* 1E */ 0x013F,
        /* 1F */ 0x0139,
        /* 20 */ 0x0224,
        /* 21 */ 0x0223,
        /* 22 */ 0x0222,
        /* 23 */ 0x0225,
        /* 24 */ 0x0232,
        /* 25 */ 0x022D,
        /* 26 */ 0x0228,
        /* 27 */ 0x0229,
        /* 28 */ 0x0242,
        /* 29 */ 0x0241,
        /* 2A */ 0x0240,
        /* 2B */ 0x0243,
        /* 2C */ 0x0246,
        /* 2D */ 0x024C,
        /* 2E */ 0x024D,
        /* 2F */ 0x024A,
        /* 30 */ 0x0161,
        /* 31 */ 0x0162,
        /* 32 */ 0x0155,
        /* 33 */ 0x015A,
        /* 34 */ 0x0159,
        /* 35 */ 0x0156,
        /* 36 */ 0x0157,
        /* 37 */ 0x0163,
        /* 38 */ 0x0172,
        /* 39 */ 0x016F,
        /* 3A */ 0x0170,
        /* 3B */ 0x0173,
        /* 3C */ 0x0176,
        /* 3D */ 0x0177,
        /* 3E */ 0x0174,
        /* 3F */ 0x0175,
    },
    {
        /* 00 */ 0x01C0,
        /* 01 */ 0x01BF,
        /* 02 */ 0x01BB,
        /* 03 */ 0x01B7,
        /* 04 */ 0x01B6,
        /* 05 */ 0x01B8,
        /* 06 */ 0x01BA,
        /* 07 */ 0x01B9,
        /* 08 */ 0x027E,
        /* 09 */ 0x027D,
        /* 0A */ 0x0280,
        /* 0B */ 0x027F,
        /* 0C */ 0x027A,
        /* 0D */ 0x0279,
        /* 0E */ 0x027C,
        /* 0F */ 0x027B,
        /* 10 */ 0x01E5,
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ INVALID,
        /* 15 */ INVALID,
        /* 16 */ INVALID,
        /* 17 */ INVALID,
        /* 18 */ 0x020F,
        /* 19 */ 0x020E,
        /* 1A */ 0x0211,
        /* 1B */ 0x0210,
        /* 1C */ 0x020B,
        /* 1D */ 0x020A,
        /* 1E */ 0x020D,
        /* 1F */ 0x020C,
        /* 20 */ 0x00D4,
        /* 21 */ 0x00B7,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ 0x0256,
        /* 25 */ 0x0278,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ 0x01C1,
        /* 29 */ 0x01C5,
        /* 2A */ 0x01C4,
        /* 2B */ 0x01C8,
        /* 2C */ 0x01C6,
        /* 2D */ 0x01C7,
        /* 2E */ 0x01C9,
        /* 2F */ INVALID,
        /* 30 */ 0x00B6,
        /* 31 */ 0x0294,
        /* 32 */ 0x01EE,
        /* 33 */ 0x01EB,
        /* 34 */ 0x0293,
        /* 35 */ 0x01ED,
        /* 36 */ 0x0154,
        /* 37 */ 0x01A9,
        /* 38 */ 0x01EC,
        /* 39 */ 0x0295,
        /* 3A */ 0x01F4,
        /* 3B */ 0x01F3,
        /* 3C */ 0x01EF,
        /* 3D */ 0x01F1,
        /* 3E */ 0x01F2,
        /* 3F */ 0x0153,
    },
    {
        /* 00 */ 0x00D9,
        /* 01 */ 0x00DA,
        /* 02 */ 0x00DB,
        /* 03 */ 0x00D6,
        /* 04 */ 0x00D7,
        /* 05 */ 0x00D8,
        /* 06 */ 0x00DD,
        /* 07 */ 0x00DC,
        /* 08 */ 0x00E6,
        /* 09 */ 0x00E7,
        /* 0A */ 0x00E8,
        /* 0B */ 0x00EC,
        /* 0C */ 0x00ED,
        /* 0D */ 0x00EB,
        /* 0E */ 0x00E9,
        /* 0F */ 0x00EA,
        /* 10 */ 0x00E4,
        /* 11 */ 0x00E5,
        /* 12 */ 0x00E2,
        /* 13 */ 0x00E3,
        /* 14 */ 0x00DF,
        /* 15 */ 0x00DE,
        /* 16 */ 0x00E0,
        /* 17 */ 0x00E1,
        /* 18 */ 0x0113,
        /* 19 */ 0x0114,
        /* 1A */ 0x0115,
        /* 1B */ 0x010F,
        /* 1C */ 0x010E,
        /* 1D */ 0x0110,
        /* 1E */ 0x0111,
        /* 1F */ 0x0112,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ 0x0277,
        /* 2A */ INVALID,
        /* 2B */ INVALID,
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
    },
    {
        /* 00 */ 0x00F0,
        /* 01 */ 0x00F1,
        /* 02 */ 0x00EE,
        /* 03 */ 0x00EF,
        /* 04 */ 0x00F4,
        /* 05 */ 0x00F5,
        /* 06 */ 0x00F2,
        /* 07 */ 0x00F3,
        /* 08 */ 0x0103,
        /* 09 */ 0x0102,
        /* 0A */ 0x0105,
        /* 0B */ 0x0104,
        /* 0C */ 0x00FF,
        /* 0D */ 0x00FE,
        /* 0E */ 0x0101,
        /* 0F */ 0x0100,
        /* 10 */ 0x00F8,
        /* 11 */ 0x00F9,
        /* 12 */ 0x00F6,
        /* 13 */ 0x00F7,
        /* 14 */ 0x00FC,
        /* 15 */ 0x00FD,
        /* 16 */ 0x00FA,
        /* 17 */ 0x00FB,
        /* 18 */ 0x010B,
        /* 19 */ 0x010A,
        /* 1A */ 0x010D,
        /* 1B */ 0x010C,
        /* 1C */ 0x0107,
        /* 1D */ 0x0106,
        /* 1E */ 0x0109,
        /* 1F */ 0x0108,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ 0x00D5,
        /* 23 */ 0x01E4,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ 0x0265,
        /* 29 */ 0x0266,
        /* 2A */ 0x025F,
        /* 2B */ 0x0260,
        /* 2C */ 0x0263,
        /* 2D */ 0x0264,
        /* 2E */ 0x0261,
        /* 2F */ 0x0262,
        /* 30 */ 0x0129,
        /* 31 */ 0x0128,
        /* 32 */ 0x012B,
        /* 33 */ 0x012A,
        /* 34 */ 0x012F,
        /* 35 */ 0x012E,
        /* 36 */ 0x012D,
        /* 37 */ 0x012C,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
    },
    {
        /* 00 */ 0x00B9,
        /* 01 */ 0x00B8,
        /* 02 */ 0x00C6,
        /* 03 */ 0x00C9,
        /* 04 */ 0x00C8,
        /* 05 */ 0x00C7,
        /* 06 */ 0x00BE,
        /* 07 */ 0x00BD,
        /* 08 */ 0x01D6,
        /* 09 */ 0x01D3,
        /* 0A */ 0x01D4,
        /* 0B */ 0x01D9,
        /* 0C */ 0x01DA,
        /* 0D */ 0x01D7,
        /* 0E */ 0x01D8,
        /* 0F */ 0x01D2,
        /* 10 */ 0x0125,
        /* 11 */ 0x0124,
        /* 12 */ 0x0127,
        /* 13 */ 0x0126,
        /* 14 */ 0x0121,
        /* 15 */ 0x0120,
        /* 16 */ 0x0123,
        /* 17 */ 0x0122,
        /* 18 */ 0x0148,
        /* 19 */ 0x0142,
        /* 1A */ 0x0145,
        /* 1B */ 0x0144,
        /* 1C */ 0x0143,
        /* 1D */ 0x0147,
        /* 1E */ 0x0146,
        /* 1F */ 0x0149,
        /* 20 */ 0x0247,
        /* 21 */ 0x0248,
        /* 22 */ 0x0249,
        /* 23 */ 0x023F,
        /* 24 */ 0x023C,
        /* 25 */ 0x023E,
        /* 26 */ 0x023D,
        /* 27 */ 0x0244,
        /* 28 */ 0x022A,
        /* 29 */ 0x022F,
        /* 2A */ 0x0226,
        /* 2B */ 0x0227,
        /* 2C */ 0x0231,
        /* 2D */ 0x0233,
        /* 2E */ 0x022E,
        /* 2F */ 0x0230,
        /* 30 */ 0x017B,
        /* 31 */ 0x0178,
        /* 32 */ 0x0179,
        /* 33 */ 0x017C,
        /* 34 */ 0x017F,
        /* 35 */ 0x0180,
        /* 36 */ 0x017D,
        /* 37 */ 0x017E,
        /* 38 */ 0x015E,
        /* 39 */ 0x015F,
        /* 3A */ 0x0160,
        /* 3B */ 0x015B,
        /* 3C */ 0x015C,
        /* 3D */ 0x015D,
        /* 3E */ 0x0164,
        /* 3F */ 0x0165,
    },
    {
        /* 00 */ 0x0191,
        /* 01 */ 0x018E,
        /* 02 */ 0x018F,
        /* 03 */ 0x0190,
        /* 04 */ 0x018A,
        /* 05 */ 0x018B,
        /* 06 */ 0x018D,
        /* 07 */ 0x018C,
        /* 08 */ 0x0287,
        /* 09 */ 0x0284,
        /* 0A */ 0x0282,
        /* 0B */ 0x0281,
        /* 0C */ 0x0288,
        /* 0D */ 0x0283,
        /* 0E */ 0x0285,
        /* 0F */ 0x0286,
        /* 10 */ 0x01FB,
        /* 11 */ 0x01FE,
        /* 12 */ 0x01FD,
        /* 13 */ 0x01FA,
        /* 14 */ 0x01F7,
        /* 15 */ 0x01F6,
        /* 16 */ 0x01F9,
        /* 17 */ 0x01F8,
        /* 18 */ 0x0207,
        /* 19 */ 0x0209,
        /* 1A */ 0x0208,
        /* 1B */ 0x0201,
        /* 1C */ 0x0200,
        /* 1D */ 0x0202,
        /* 1E */ 0x0204,
        /* 1F */ 0x0203,
        /* 20 */ 0x025E,
        /* 21 */ 0x025B,
        /* 22 */ 0x025C,
        /* 23 */ 0x025D,
        /* 24 */ 0x0258,
        /* 25 */ 0x0257,
        /* 26 */ 0x025A,
        /* 27 */ 0x0259,
        /* 28 */ 0x0275,
        /* 29 */ 0x0276,
        /* 2A */ 0x0273,
        /* 2B */ 0x0274,
        /* 2C */ 0x0270,
        /* 2D */ 0x026F,
        /* 2E */ 0x0272,
        /* 2F */ 0x0271,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
    },
    {
        /* 00 */ 0x00CC,
        /* 01 */ 0x00CD,
        /* 02 */ 0x00CA,
        /* 03 */ 0x00CB,
        /* 04 */ 0x00D0,
        /* 05 */ 0x00D1,
        /* 06 */ 0x00CE,
        /* 07 */ 0x00CF,
        /* 08 */ 0x01E1,
        /* 09 */ 0x01E0,
        /* 0A */ 0x01E3,
        /* 0B */ 0x01E2,
        /* 0C */ 0x01DD,
        /* 0D */ 0x01DC,
        /* 0E */ 0x01DF,
        /* 0F */ 0x01DE,
        /* 10 */ 0x014F,
        /* 11 */ 0x014E,
        /* 12 */ 0x0151,
        /* 13 */ 0x0150,
        /* 14 */ 0x014B,
        /* 15 */ 0x014A,
        /* 16 */ 0x014D,
        /* 17 */ 0x014C,
        /* 18 */ INVALID,
        /* 19 */ 0x0152,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ INVALID,
        /* 1D */ INVALID,
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ 0x0252,
        /* 21 */ 0x0253,
        /* 22 */ 0x0254,
        /* 23 */ 0x0251,
        /* 24 */ 0x024E,
        /* 25 */ 0x024F,
        /* 26 */ 0x0250,
        /* 27 */ 0x0255,
        /* 28 */ 0x0238,
        /* 29 */ 0x023B,
        /* 2A */ 0x023A,
        /* 2B */ 0x0234,
        /* 2C */ 0x0237,
        /* 2D */ 0x0236,
        /* 2E */ 0x0239,
        /* 2F */ 0x0235,
        /* 30 */ 0x0186,
        /* 31 */ 0x0185,
        /* 32 */ 0x0188,
        /* 33 */ 0x0187,
        /* 34 */ 0x0182,
        /* 35 */ 0x0181,
        /* 36 */ 0x0184,
        /* 37 */ 0x0183,
        /* 38 */ 0x016C,
        /* 39 */ 0x016B,
        /* 3A */ 0x016E,
        /* 3B */ 0x016D,
        /* 3C */ 0x0168,
        /* 3D */ 0x0167,
        /* 3E */ 0x016A,
        /* 3F */ 0x0169,
    },
    {
        /* 00 */ 0x0195,
        /* 01 */ 0x0196,
        /* 02 */ 0x0197,
        /* 03 */ 0x0192,
        /* 04 */ 0x0193,
        /* 05 */ 0x0194,
        /* 06 */ 0x0199,
        /* 07 */ 0x0198,
        /* 08 */ 0x028B,
        /* 09 */ 0x028A,
        /* 0A */ 0x028C,
        /* 0B */ 0x028E,
        /* 0C */ 0x028D,
        /* 0D */ 0x0289,
        /* 0E */ 0x0290,
        /* 0F */ 0x028F,
        /* 10 */ 0x0217,
        /* 11 */ 0x0216,
        /* 12 */ 0x0219,
        /* 13 */ 0x0218,
        /* 14 */ 0x0213,
        /* 15 */ 0x0212,
        /* 16 */ 0x0215,
        /* 17 */ 0x0214,
        /* 18 */ 0x021C,
        /* 19 */ 0x021D,
        /* 1A */ 0x021A,
        /* 1B */ 0x021B,
        /* 1C */ 0x0220,
        /* 1D */ 0x0221,
        /* 1E */ 0x021E,
        /* 1F */ 0x021F,
        /* 20 */ 0x01E9,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ 0x026D,
        /* 29 */ 0x026E,
        /* 2A */ 0x0269,
        /* 2B */ 0x0268,
        /* 2C */ 0x0267,
        /* 2D */ 0x026C,
        /* 2E */ 0x026B,
        /* 2F */ 0x026A,
        /* 30 */ 0x0136,
        /* 31 */ 0x0137,
        /* 32 */ 0x0133,
        /* 33 */ 0x0134,
        /* 34 */ 0x0135,
        /* 35 */ 0x0130,
        /* 36 */ 0x0131,
        /* 37 */ 0x0132,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeAddressSize[][3] = 
{
    {
        /* 00 */ 0x02CB,
        /* 01 */ 0x02CC,
        /* 02 */ 0x02E6,
    },
};

static const VXOpcodeTreeNode optreeOperandSize[][3] = 
{
    {
        /* 00 */ MODRM(0x03EB),
        /* 01 */ MODRM(0x03EA),
        /* 02 */ MODRM(0x03EC),
    },
    {
        /* 00 */ MODRM(0x0414),
        /* 01 */ MODRM(0x0413),
        /* 02 */ MODRM(0x0415),
    },
    {
        /* 00 */ MODRM(0x0347),
        /* 01 */ MODRM(0x034C),
        /* 02 */ MODRM(0x036C),
    },
    {
        /* 00 */ MODRM(0x034D),
        /* 01 */ MODRM(0x034E),
        /* 02 */ MODRM(0x036F),
    },
    {
        /* 00 */ MODRM(0x034B),
        /* 01 */ MODRM(0x0348),
        /* 02 */ MODRM(0x036D),
    },
    {
        /* 00 */ MODRM(0x0349),
        /* 01 */ MODRM(0x034A),
        /* 02 */ MODRM(0x036E),
    },
    {
        /* 00 */ MODRM(0x007F),
        /* 01 */ MODRM(0x0080),
        /* 02 */ MODRM(0x007E),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x000F),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0010),
        /* 02 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0011),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0012),
        /* 02 */ INVALID,
    },
    {
        /* 00 */ 0x02B4,
        /* 01 */ 0x02B2,
        /* 02 */ INVALID,
    },
    {
        /* 00 */ 0x03AB,
        /* 01 */ 0x03AA,
        /* 02 */ INVALID,
    },
    {
        /* 00 */ 0x0050,
        /* 01 */ 0x009E,
        /* 02 */ 0x0052,
    },
    {
        /* 00 */ 0x009D,
        /* 01 */ 0x0051,
        /* 02 */ 0x0084,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x001E),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODE, 0x001F),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0020),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0021),
        /* 01 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0022),
        /* 02 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0023),
    },
    {
        /* 00 */ 0x037C,
        /* 01 */ 0x0373,
        /* 02 */ 0x0379,
    },
    {
        /* 00 */ 0x007B,
        /* 01 */ 0x0078,
        /* 02 */ 0x0079,
    },
    {
        /* 00 */ 0x0558,
        /* 01 */ 0x0556,
        /* 02 */ 0x0557,
    },
    {
        /* 00 */ 0x0306,
        /* 01 */ 0x0304,
        /* 02 */ 0x0305,
    },
    {
        /* 00 */ 0x0515,
        /* 01 */ 0x0513,
        /* 02 */ 0x0514,
    },
    {
        /* 00 */ MODRM(0x05D1),
        /* 01 */ MODRM(0x05D3),
        /* 02 */ MODRM(0x05EC),
    },
    {
        /* 00 */ MODRM(0x05D4),
        /* 01 */ MODRM(0x05D2),
        /* 02 */ MODRM(0x05EA),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000E),
        /* 01 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x000F),
        /* 02 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0010),
    },
    {
        /* 00 */ 0x02C2,
        /* 01 */ 0x02C0,
        /* 02 */ 0x02C1,
    },
};

static const VXOpcodeTreeNode optreeMode[][2] = 
{
    {
        /* 00 */ 0x04BB,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x044F,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04BE,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x056A,
        /* 01 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000D),
    },
    {
        /* 00 */ 0x056C,
        /* 01 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000E),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x000F),
        /* 01 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0010),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0011),
        /* 01 */ NODE(VXOpcodeTreeNodeType::VENDOR, 0x0012),
    },
    {
        /* 00 */ 0x04BD,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0450,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04BA,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x044D,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x009F,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x00A0,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0001,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0004,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04CB,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04CC,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0455,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0456,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0038),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0033),
        /* 01 */ MODRM(0x037F),
    },
    {
        /* 00 */ MODRM(0x0011),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x039D),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0007),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0508),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x002A),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x055E),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06CE),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0072),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x004F,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04D1,
        /* 01 */ 0x04D0,
    },
    {
        /* 00 */ 0x04CD,
        /* 01 */ 0x04CF,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x04CE,
    },
    {
        /* 00 */ 0x045B,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0458,
        /* 01 */ 0x045A,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x0459,
    },
    {
        /* 00 */ MODRM(0x02F2),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0014),
        /* 01 */ NODE(VXOpcodeTreeNodeType::VEXW, 0x0015),
    },
    {
        /* 00 */ MODRM(0x02EF),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x02B8,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0003,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0002,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0501,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x02D9,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x004B),
        /* 01 */ MODRM(0x004C),
    },
};

static const VXOpcodeTreeNode optreeVendor[][2] = 
{
    {
        /* 00 */ INVALID,
        /* 01 */ 0x05C4,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x05CA,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x0602,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x060A,
    },
    {
        /* 00 */ 0x0603,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x05CC,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x05CB,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0604,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0552,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0056,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0548,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x02BD,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x04E6,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x056B,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ 0x056D,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x02BA),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x02BB),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x02BF),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x02BE),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0601),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0609),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x05FF),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x060B),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x05C5),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0600),
    },
};

static const VXOpcodeTreeNode optree3dnow[][256] = 
{
    {
        /* 00 */ INVALID,
        /* 01 */ INVALID,
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ INVALID,
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ INVALID,
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ MODRM(0x0411),
        /* 0D */ MODRM(0x0410),
        /* 0E */ INVALID,
        /* 0F */ INVALID,
        /* 10 */ INVALID,
        /* 11 */ INVALID,
        /* 12 */ INVALID,
        /* 13 */ INVALID,
        /* 14 */ INVALID,
        /* 15 */ INVALID,
        /* 16 */ INVALID,
        /* 17 */ INVALID,
        /* 18 */ INVALID,
        /* 19 */ INVALID,
        /* 1A */ INVALID,
        /* 1B */ INVALID,
        /* 1C */ MODRM(0x03F1),
        /* 1D */ MODRM(0x03F0),
        /* 1E */ INVALID,
        /* 1F */ INVALID,
        /* 20 */ INVALID,
        /* 21 */ INVALID,
        /* 22 */ INVALID,
        /* 23 */ INVALID,
        /* 24 */ INVALID,
        /* 25 */ INVALID,
        /* 26 */ INVALID,
        /* 27 */ INVALID,
        /* 28 */ INVALID,
        /* 29 */ INVALID,
        /* 2A */ INVALID,
        /* 2B */ INVALID,
        /* 2C */ INVALID,
        /* 2D */ INVALID,
        /* 2E */ INVALID,
        /* 2F */ INVALID,
        /* 30 */ INVALID,
        /* 31 */ INVALID,
        /* 32 */ INVALID,
        /* 33 */ INVALID,
        /* 34 */ INVALID,
        /* 35 */ INVALID,
        /* 36 */ INVALID,
        /* 37 */ INVALID,
        /* 38 */ INVALID,
        /* 39 */ INVALID,
        /* 3A */ INVALID,
        /* 3B */ INVALID,
        /* 3C */ INVALID,
        /* 3D */ INVALID,
        /* 3E */ INVALID,
        /* 3F */ INVALID,
        /* 40 */ INVALID,
        /* 41 */ INVALID,
        /* 42 */ INVALID,
        /* 43 */ INVALID,
        /* 44 */ INVALID,
        /* 45 */ INVALID,
        /* 46 */ INVALID,
        /* 47 */ INVALID,
        /* 48 */ INVALID,
        /* 49 */ INVALID,
        /* 4A */ INVALID,
        /* 4B */ INVALID,
        /* 4C */ INVALID,
        /* 4D */ INVALID,
        /* 4E */ INVALID,
        /* 4F */ INVALID,
        /* 50 */ INVALID,
        /* 51 */ INVALID,
        /* 52 */ INVALID,
        /* 53 */ INVALID,
        /* 54 */ INVALID,
        /* 55 */ INVALID,
        /* 56 */ INVALID,
        /* 57 */ INVALID,
        /* 58 */ INVALID,
        /* 59 */ INVALID,
        /* 5A */ INVALID,
        /* 5B */ INVALID,
        /* 5C */ INVALID,
        /* 5D */ INVALID,
        /* 5E */ INVALID,
        /* 5F */ INVALID,
        /* 60 */ INVALID,
        /* 61 */ INVALID,
        /* 62 */ INVALID,
        /* 63 */ INVALID,
        /* 64 */ INVALID,
        /* 65 */ INVALID,
        /* 66 */ INVALID,
        /* 67 */ INVALID,
        /* 68 */ INVALID,
        /* 69 */ INVALID,
        /* 6A */ INVALID,
        /* 6B */ INVALID,
        /* 6C */ INVALID,
        /* 6D */ INVALID,
        /* 6E */ INVALID,
        /* 6F */ INVALID,
        /* 70 */ INVALID,
        /* 71 */ INVALID,
        /* 72 */ INVALID,
        /* 73 */ INVALID,
        /* 74 */ INVALID,
        /* 75 */ INVALID,
        /* 76 */ INVALID,
        /* 77 */ INVALID,
        /* 78 */ INVALID,
        /* 79 */ INVALID,
        /* 7A */ INVALID,
        /* 7B */ INVALID,
        /* 7C */ INVALID,
        /* 7D */ INVALID,
        /* 7E */ INVALID,
        /* 7F */ INVALID,
        /* 80 */ INVALID,
        /* 81 */ INVALID,
        /* 82 */ INVALID,
        /* 83 */ INVALID,
        /* 84 */ INVALID,
        /* 85 */ INVALID,
        /* 86 */ INVALID,
        /* 87 */ INVALID,
        /* 88 */ INVALID,
        /* 89 */ INVALID,
        /* 8A */ MODRM(0x03FA),
        /* 8B */ INVALID,
        /* 8C */ INVALID,
        /* 8D */ INVALID,
        /* 8E */ MODRM(0x03FB),
        /* 8F */ INVALID,
        /* 90 */ MODRM(0x03F5),
        /* 91 */ INVALID,
        /* 92 */ INVALID,
        /* 93 */ INVALID,
        /* 94 */ MODRM(0x03F8),
        /* 95 */ INVALID,
        /* 96 */ MODRM(0x03FC),
        /* 97 */ MODRM(0x0400),
        /* 98 */ INVALID,
        /* 99 */ INVALID,
        /* 9A */ MODRM(0x0401),
        /* 9B */ INVALID,
        /* 9C */ INVALID,
        /* 9D */ INVALID,
        /* 9E */ MODRM(0x03F3),
        /* 9F */ INVALID,
        /* A0 */ MODRM(0x03F6),
        /* A1 */ INVALID,
        /* A2 */ INVALID,
        /* A3 */ INVALID,
        /* A4 */ MODRM(0x03F7),
        /* A5 */ INVALID,
        /* A6 */ MODRM(0x03FD),
        /* A7 */ MODRM(0x03FF),
        /* A8 */ INVALID,
        /* A9 */ INVALID,
        /* AA */ MODRM(0x0402),
        /* AB */ INVALID,
        /* AC */ INVALID,
        /* AD */ INVALID,
        /* AE */ MODRM(0x03F2),
        /* AF */ INVALID,
        /* B0 */ MODRM(0x03F4),
        /* B1 */ INVALID,
        /* B2 */ INVALID,
        /* B3 */ INVALID,
        /* B4 */ MODRM(0x03F9),
        /* B5 */ INVALID,
        /* B6 */ MODRM(0x03FE),
        /* B7 */ MODRM(0x043D),
        /* B8 */ INVALID,
        /* B9 */ INVALID,
        /* BA */ INVALID,
        /* BB */ MODRM(0x04AA),
        /* BC */ INVALID,
        /* BD */ INVALID,
        /* BE */ INVALID,
        /* BF */ MODRM(0x03D1),
        /* C0 */ INVALID,
        /* C1 */ INVALID,
        /* C2 */ INVALID,
        /* C3 */ INVALID,
        /* C4 */ INVALID,
        /* C5 */ INVALID,
        /* C6 */ INVALID,
        /* C7 */ INVALID,
        /* C8 */ INVALID,
        /* C9 */ INVALID,
        /* CA */ INVALID,
        /* CB */ INVALID,
        /* CC */ INVALID,
        /* CD */ INVALID,
        /* CE */ INVALID,
        /* CF */ INVALID,
        /* D0 */ INVALID,
        /* D1 */ INVALID,
        /* D2 */ INVALID,
        /* D3 */ INVALID,
        /* D4 */ INVALID,
        /* D5 */ INVALID,
        /* D6 */ INVALID,
        /* D7 */ INVALID,
        /* D8 */ INVALID,
        /* D9 */ INVALID,
        /* DA */ INVALID,
        /* DB */ INVALID,
        /* DC */ INVALID,
        /* DD */ INVALID,
        /* DE */ INVALID,
        /* DF */ INVALID,
        /* E0 */ INVALID,
        /* E1 */ INVALID,
        /* E2 */ INVALID,
        /* E3 */ INVALID,
        /* E4 */ INVALID,
        /* E5 */ INVALID,
        /* E6 */ INVALID,
        /* E7 */ INVALID,
        /* E8 */ INVALID,
        /* E9 */ INVALID,
        /* EA */ INVALID,
        /* EB */ INVALID,
        /* EC */ INVALID,
        /* ED */ INVALID,
        /* EE */ INVALID,
        /* EF */ INVALID,
        /* F0 */ INVALID,
        /* F1 */ INVALID,
        /* F2 */ INVALID,
        /* F3 */ INVALID,
        /* F4 */ INVALID,
        /* F5 */ INVALID,
        /* F6 */ INVALID,
        /* F7 */ INVALID,
        /* F8 */ INVALID,
        /* F9 */ INVALID,
        /* FA */ INVALID,
        /* FB */ INVALID,
        /* FC */ INVALID,
        /* FD */ INVALID,
        /* FE */ INVALID,
        /* FF */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeVex[][16] = 
{
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0024),
        /* 01 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0004),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0005),
        /* 06 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0006),
        /* 07 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0007),
        /* 08 */ INVALID,
        /* 09 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0008),
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0009),
        /* 0E */ INVALID,
        /* 0F */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::MODE, 0x0026),
        /* 01 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0004),
        /* 02 */ INVALID,
        /* 03 */ INVALID,
        /* 04 */ INVALID,
        /* 05 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0005),
        /* 06 */ INVALID,
        /* 07 */ INVALID,
        /* 08 */ INVALID,
        /* 09 */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0008),
        /* 0A */ INVALID,
        /* 0B */ INVALID,
        /* 0C */ INVALID,
        /* 0D */ NODE(VXOpcodeTreeNodeType::TABLE, 0x0009),
        /* 0E */ INVALID,
        /* 0F */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeVexW[][2] = 
{
    {
        /* 00 */ MODRM(0x0635),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0633),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06A9),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x06A8),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0593),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0008),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05BF),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05BC),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05BE),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x05BD),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0634),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0632),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x0009),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0636),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0637),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0638),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0639),
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000A),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000B),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000C),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000D),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000E),
        /* 01 */ NODE(VXOpcodeTreeNodeType::VEXL, 0x000F),
    },
    {
        /* 00 */ MODRM(0x0591),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0590),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0622),
        /* 01 */ INVALID,
    },
};

static const VXOpcodeTreeNode optreeVexL[][2] = 
{
    {
        /* 00 */ 0x06B3,
        /* 01 */ 0x06B2,
    },
    {
        /* 00 */ 0x0677,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0672,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ 0x0675,
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0656),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0676),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0671),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0674),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0592),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x0631),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x05B8),
    },
    {
        /* 00 */ INVALID,
        /* 01 */ MODRM(0x05B2),
    },
    {
        /* 00 */ MODRM(0x0643),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0645),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0644),
        /* 01 */ INVALID,
    },
    {
        /* 00 */ MODRM(0x0646),
        /* 01 */ INVALID,
    },
};

#undef INVALID
#undef NODE
#undef MODRM

#define OPI_NONE    { VXDefinedOperandType::NONE,   VXDefinedOperandSize::NA  }
#define OPI_AL      { VXDefinedOperandType::AL,     VXDefinedOperandSize::B   }
#define OPI_AX      { VXDefinedOperandType::AX,     VXDefinedOperandSize::W   }
#define OPI_Av      { VXDefinedOperandType::A,      VXDefinedOperandSize::V   }
#define OPI_C       { VXDefinedOperandType::C,      VXDefinedOperandSize::NA  }
#define OPI_CL      { VXDefinedOperandType::CL,     VXDefinedOperandSize::B   }
#define OPI_CS      { VXDefinedOperandType::CS,     VXDefinedOperandSize::NA  }
#define OPI_CX      { VXDefinedOperandType::CX,     VXDefinedOperandSize::W   }
#define OPI_D       { VXDefinedOperandType::D,      VXDefinedOperandSize::NA  }
#define OPI_DL      { VXDefinedOperandType::DL,     VXDefinedOperandSize::B   }
#define OPI_DS      { VXDefinedOperandType::DS,     VXDefinedOperandSize::NA  }
#define OPI_DX      { VXDefinedOperandType::DX,     VXDefinedOperandSize::W   }
#define OPI_E       { VXDefinedOperandType::E,      VXDefinedOperandSize::NA  }
#define OPI_ES      { VXDefinedOperandType::ES,     VXDefinedOperandSize::NA  }
#define OPI_Eb      { VXDefinedOperandType::E,      VXDefinedOperandSize::B   }
#define OPI_Ed      { VXDefinedOperandType::E,      VXDefinedOperandSize::D   }
#define OPI_Eq      { VXDefinedOperandType::E,      VXDefinedOperandSize::Q   }
#define OPI_Ev      { VXDefinedOperandType::E,      VXDefinedOperandSize::V   }
#define OPI_Ew      { VXDefinedOperandType::E,      VXDefinedOperandSize::W   }
#define OPI_Ey      { VXDefinedOperandType::E,      VXDefinedOperandSize::Y   }
#define OPI_Ez      { VXDefinedOperandType::E,      VXDefinedOperandSize::Z   }
#define OPI_FS      { VXDefinedOperandType::FS,     VXDefinedOperandSize::NA  }
#define OPI_Fv      { VXDefinedOperandType::F,      VXDefinedOperandSize::V   }
#define OPI_G       { VXDefinedOperandType::G,      VXDefinedOperandSize::NA  }
#define OPI_GS      { VXDefinedOperandType::GS,     VXDefinedOperandSize::NA  }
#define OPI_Gb      { VXDefinedOperandType::G,      VXDefinedOperandSize::B   }
#define OPI_Gd      { VXDefinedOperandType::G,      VXDefinedOperandSize::D   }
#define OPI_Gq      { VXDefinedOperandType::G,      VXDefinedOperandSize::Q   }
#define OPI_Gv      { VXDefinedOperandType::G,      VXDefinedOperandSize::V   }
#define OPI_Gw      { VXDefinedOperandType::G,      VXDefinedOperandSize::W   }
#define OPI_Gy      { VXDefinedOperandType::G,      VXDefinedOperandSize::Y   }
#define OPI_Gz      { VXDefinedOperandType::G,      VXDefinedOperandSize::Z   }
#define OPI_H       { VXDefinedOperandType::H,      VXDefinedOperandSize::X   }
#define OPI_Hqq     { VXDefinedOperandType::H,      VXDefinedOperandSize::QQ  }
#define OPI_Hx      { VXDefinedOperandType::H,      VXDefinedOperandSize::X   }
#define OPI_I1      { VXDefinedOperandType::I1,     VXDefinedOperandSize::NA  }
#define OPI_Ib      { VXDefinedOperandType::I,      VXDefinedOperandSize::B   }
#define OPI_Iv      { VXDefinedOperandType::I,      VXDefinedOperandSize::V   }
#define OPI_Iw      { VXDefinedOperandType::I,      VXDefinedOperandSize::W   }
#define OPI_Iz      { VXDefinedOperandType::I,      VXDefinedOperandSize::Z   }
#define OPI_Jb      { VXDefinedOperandType::J,      VXDefinedOperandSize::B   }
#define OPI_Jv      { VXDefinedOperandType::J,      VXDefinedOperandSize::V   }
#define OPI_Jz      { VXDefinedOperandType::J,      VXDefinedOperandSize::Z   }
#define OPI_L       { VXDefinedOperandType::L,      VXDefinedOperandSize::O   }
#define OPI_Lx      { VXDefinedOperandType::L,      VXDefinedOperandSize::X   }
#define OPI_M       { VXDefinedOperandType::M,      VXDefinedOperandSize::NA  }
#define OPI_Mb      { VXDefinedOperandType::M,      VXDefinedOperandSize::B   }
#define OPI_MbRd    { VXDefinedOperandType::MR,     VXDefinedOperandSize::BD  }
#define OPI_MbRv    { VXDefinedOperandType::MR,     VXDefinedOperandSize::BV  }
#define OPI_Md      { VXDefinedOperandType::M,      VXDefinedOperandSize::D   }
#define OPI_MdRy    { VXDefinedOperandType::MR,     VXDefinedOperandSize::DY  }
#define OPI_MdU     { VXDefinedOperandType::MU,     VXDefinedOperandSize::DO  }
#define OPI_Mdq     { VXDefinedOperandType::M,      VXDefinedOperandSize::DQ  }
#define OPI_Mo      { VXDefinedOperandType::M,      VXDefinedOperandSize::O   }
#define OPI_Mq      { VXDefinedOperandType::M,      VXDefinedOperandSize::Q   }
#define OPI_MqU     { VXDefinedOperandType::MU,     VXDefinedOperandSize::QO  }
#define OPI_Ms      { VXDefinedOperandType::M,      VXDefinedOperandSize::W   }
#define OPI_Mt      { VXDefinedOperandType::M,      VXDefinedOperandSize::T   }
#define OPI_Mv      { VXDefinedOperandType::M,      VXDefinedOperandSize::V   }
#define OPI_Mw      { VXDefinedOperandType::M,      VXDefinedOperandSize::W   }
#define OPI_MwRd    { VXDefinedOperandType::MR,     VXDefinedOperandSize::WD  }
#define OPI_MwRv    { VXDefinedOperandType::MR,     VXDefinedOperandSize::WV  }
#define OPI_MwRy    { VXDefinedOperandType::MR,     VXDefinedOperandSize::WY  }
#define OPI_MwU     { VXDefinedOperandType::MU,     VXDefinedOperandSize::WO  }
#define OPI_N       { VXDefinedOperandType::N,      VXDefinedOperandSize::Q   }
#define OPI_Ob      { VXDefinedOperandType::O,      VXDefinedOperandSize::B   }
#define OPI_Ov      { VXDefinedOperandType::O,      VXDefinedOperandSize::V   }
#define OPI_Ow      { VXDefinedOperandType::O,      VXDefinedOperandSize::W   }
#define OPI_P       { VXDefinedOperandType::P,      VXDefinedOperandSize::Q   }
#define OPI_Q       { VXDefinedOperandType::Q,      VXDefinedOperandSize::Q   }
#define OPI_R       { VXDefinedOperandType::R,      VXDefinedOperandSize::RDQ }
#define OPI_R0b     { VXDefinedOperandType::R0,     VXDefinedOperandSize::B   }
#define OPI_R0v     { VXDefinedOperandType::R0,     VXDefinedOperandSize::V   }
#define OPI_R0w     { VXDefinedOperandType::R0,     VXDefinedOperandSize::W   }
#define OPI_R0y     { VXDefinedOperandType::R0,     VXDefinedOperandSize::Y   }
#define OPI_R0z     { VXDefinedOperandType::R0,     VXDefinedOperandSize::Z   }
#define OPI_R1b     { VXDefinedOperandType::R1,     VXDefinedOperandSize::B   }
#define OPI_R1v     { VXDefinedOperandType::R1,     VXDefinedOperandSize::V   }
#define OPI_R1w     { VXDefinedOperandType::R1,     VXDefinedOperandSize::W   }
#define OPI_R1y     { VXDefinedOperandType::R1,     VXDefinedOperandSize::Y   }
#define OPI_R1z     { VXDefinedOperandType::R1,     VXDefinedOperandSize::Z   }
#define OPI_R2b     { VXDefinedOperandType::R2,     VXDefinedOperandSize::B   }
#define OPI_R2v     { VXDefinedOperandType::R2,     VXDefinedOperandSize::V   }
#define OPI_R2w     { VXDefinedOperandType::R2,     VXDefinedOperandSize::W   }
#define OPI_R2y     { VXDefinedOperandType::R2,     VXDefinedOperandSize::Y   }
#define OPI_R2z     { VXDefinedOperandType::R2,     VXDefinedOperandSize::Z   }
#define OPI_R3b     { VXDefinedOperandType::R3,     VXDefinedOperandSize::B   }
#define OPI_R3v     { VXDefinedOperandType::R3,     VXDefinedOperandSize::V   }
#define OPI_R3w     { VXDefinedOperandType::R3,     VXDefinedOperandSize::W   }
#define OPI_R3y     { VXDefinedOperandType::R3,     VXDefinedOperandSize::Y   }
#define OPI_R3z     { VXDefinedOperandType::R3,     VXDefinedOperandSize::Z   }
#define OPI_R4b     { VXDefinedOperandType::R4,     VXDefinedOperandSize::B   }
#define OPI_R4v     { VXDefinedOperandType::R4,     VXDefinedOperandSize::V   }
#define OPI_R4w     { VXDefinedOperandType::R4,     VXDefinedOperandSize::W   }
#define OPI_R4y     { VXDefinedOperandType::R4,     VXDefinedOperandSize::Y   }
#define OPI_R4z     { VXDefinedOperandType::R4,     VXDefinedOperandSize::Z   }
#define OPI_R5b     { VXDefinedOperandType::R5,     VXDefinedOperandSize::B   }
#define OPI_R5v     { VXDefinedOperandType::R5,     VXDefinedOperandSize::V   }
#define OPI_R5w     { VXDefinedOperandType::R5,     VXDefinedOperandSize::W   }
#define OPI_R5y     { VXDefinedOperandType::R5,     VXDefinedOperandSize::Y   }
#define OPI_R5z     { VXDefinedOperandType::R5,     VXDefinedOperandSize::Z   }
#define OPI_R6b     { VXDefinedOperandType::R6,     VXDefinedOperandSize::B   }
#define OPI_R6v     { VXDefinedOperandType::R6,     VXDefinedOperandSize::V   }
#define OPI_R6w     { VXDefinedOperandType::R6,     VXDefinedOperandSize::W   }
#define OPI_R6y     { VXDefinedOperandType::R6,     VXDefinedOperandSize::Y   }
#define OPI_R6z     { VXDefinedOperandType::R6,     VXDefinedOperandSize::Z   }
#define OPI_R7b     { VXDefinedOperandType::R7,     VXDefinedOperandSize::B   }
#define OPI_R7v     { VXDefinedOperandType::R7,     VXDefinedOperandSize::V   }
#define OPI_R7w     { VXDefinedOperandType::R7,     VXDefinedOperandSize::W   }
#define OPI_R7y     { VXDefinedOperandType::R7,     VXDefinedOperandSize::Y   }
#define OPI_R7z     { VXDefinedOperandType::R7,     VXDefinedOperandSize::Z   }
#define OPI_S       { VXDefinedOperandType::S,      VXDefinedOperandSize::W   }
#define OPI_SS      { VXDefinedOperandType::SS,     VXDefinedOperandSize::NA  }
#define OPI_ST0     { VXDefinedOperandType::ST0,    VXDefinedOperandSize::NA  }
#define OPI_ST1     { VXDefinedOperandType::ST1,    VXDefinedOperandSize::NA  }
#define OPI_ST2     { VXDefinedOperandType::ST2,    VXDefinedOperandSize::NA  }
#define OPI_ST3     { VXDefinedOperandType::ST3,    VXDefinedOperandSize::NA  }
#define OPI_ST4     { VXDefinedOperandType::ST4,    VXDefinedOperandSize::NA  }
#define OPI_ST5     { VXDefinedOperandType::ST5,    VXDefinedOperandSize::NA  }
#define OPI_ST6     { VXDefinedOperandType::ST6,    VXDefinedOperandSize::NA  }
#define OPI_ST7     { VXDefinedOperandType::ST7,    VXDefinedOperandSize::NA  }
#define OPI_U       { VXDefinedOperandType::U,      VXDefinedOperandSize::O   }
#define OPI_Ux      { VXDefinedOperandType::U,      VXDefinedOperandSize::X   }
#define OPI_V       { VXDefinedOperandType::V,      VXDefinedOperandSize::DQ  }
#define OPI_Vdq     { VXDefinedOperandType::V,      VXDefinedOperandSize::DQ  }
#define OPI_Vqq     { VXDefinedOperandType::V,      VXDefinedOperandSize::QQ  }
#define OPI_Vsd     { VXDefinedOperandType::V,      VXDefinedOperandSize::Q   }
#define OPI_Vx      { VXDefinedOperandType::V,      VXDefinedOperandSize::X   }
#define OPI_W       { VXDefinedOperandType::W,      VXDefinedOperandSize::DQ  }
#define OPI_Wdq     { VXDefinedOperandType::W,      VXDefinedOperandSize::DQ  }
#define OPI_Wqq     { VXDefinedOperandType::W,      VXDefinedOperandSize::QQ  }
#define OPI_Wsd     { VXDefinedOperandType::W,      VXDefinedOperandSize::Q   }
#define OPI_Wx      { VXDefinedOperandType::W,      VXDefinedOperandSize::X   }
#define OPI_eAX     { VXDefinedOperandType::EAX,    VXDefinedOperandSize::Z   }
#define OPI_eCX     { VXDefinedOperandType::ECX,    VXDefinedOperandSize::Z   }
#define OPI_eDX     { VXDefinedOperandType::EDX,    VXDefinedOperandSize::Z   }
#define OPI_rAX     { VXDefinedOperandType::RAX,    VXDefinedOperandSize::V   }
#define OPI_rCX     { VXDefinedOperandType::RCX,    VXDefinedOperandSize::V   }
#define OPI_rDX     { VXDefinedOperandType::RDX,    VXDefinedOperandSize::V   }

static const VXInstructionDefinition instrDefinitions[] =
{
    /* 000 */ { VXInstructionMnemonic::INVALID,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 001 */ { VXInstructionMnemonic::AAA,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 002 */ { VXInstructionMnemonic::AAD,              { OPI_Ib,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 003 */ { VXInstructionMnemonic::AAM,              { OPI_Ib,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 004 */ { VXInstructionMnemonic::AAS,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 005 */ { VXInstructionMnemonic::ADC,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 006 */ { VXInstructionMnemonic::ADC,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 007 */ { VXInstructionMnemonic::ADC,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 008 */ { VXInstructionMnemonic::ADC,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 009 */ { VXInstructionMnemonic::ADC,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 00A */ { VXInstructionMnemonic::ADC,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 00B */ { VXInstructionMnemonic::ADC,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 00C */ { VXInstructionMnemonic::ADC,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 00D */ { VXInstructionMnemonic::ADC,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 00E */ { VXInstructionMnemonic::ADC,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 00F */ { VXInstructionMnemonic::ADD,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 010 */ { VXInstructionMnemonic::ADD,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 011 */ { VXInstructionMnemonic::ADD,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 012 */ { VXInstructionMnemonic::ADD,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 013 */ { VXInstructionMnemonic::ADD,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 014 */ { VXInstructionMnemonic::ADD,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 015 */ { VXInstructionMnemonic::ADD,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 016 */ { VXInstructionMnemonic::ADD,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 017 */ { VXInstructionMnemonic::ADD,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 018 */ { VXInstructionMnemonic::ADD,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 019 */ { VXInstructionMnemonic::ADDPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01A */ { VXInstructionMnemonic::ADDPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01B */ { VXInstructionMnemonic::ADDSD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01C */ { VXInstructionMnemonic::ADDSS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01D */ { VXInstructionMnemonic::ADDSUBPD,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01E */ { VXInstructionMnemonic::ADDSUBPS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 01F */ { VXInstructionMnemonic::AESDEC,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 020 */ { VXInstructionMnemonic::AESDECLAST,       { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 021 */ { VXInstructionMnemonic::AESENC,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 022 */ { VXInstructionMnemonic::AESENCLAST,       { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 023 */ { VXInstructionMnemonic::AESIMC,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 024 */ { VXInstructionMnemonic::AESKEYGENASSIST,  { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 025 */ { VXInstructionMnemonic::AND,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 026 */ { VXInstructionMnemonic::AND,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 027 */ { VXInstructionMnemonic::AND,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 028 */ { VXInstructionMnemonic::AND,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 029 */ { VXInstructionMnemonic::AND,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 02A */ { VXInstructionMnemonic::AND,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 02B */ { VXInstructionMnemonic::AND,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 02C */ { VXInstructionMnemonic::AND,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 02D */ { VXInstructionMnemonic::AND,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 02E */ { VXInstructionMnemonic::AND,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 02F */ { VXInstructionMnemonic::ANDNPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 030 */ { VXInstructionMnemonic::ANDNPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 031 */ { VXInstructionMnemonic::ANDPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 032 */ { VXInstructionMnemonic::ANDPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 033 */ { VXInstructionMnemonic::ARPL,             { OPI_Ew,   OPI_Gw,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE },
    /* 034 */ { VXInstructionMnemonic::BLENDPD,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 035 */ { VXInstructionMnemonic::BLENDPS,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 036 */ { VXInstructionMnemonic::BLENDVPD,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 037 */ { VXInstructionMnemonic::BLENDVPS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 038 */ { VXInstructionMnemonic::BOUND,            { OPI_Gv,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 039 */ { VXInstructionMnemonic::BSF,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 03A */ { VXInstructionMnemonic::BSR,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 03B */ { VXInstructionMnemonic::BSWAP,            { OPI_R5y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 03C */ { VXInstructionMnemonic::BSWAP,            { OPI_R3y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 03D */ { VXInstructionMnemonic::BSWAP,            { OPI_R1y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 03E */ { VXInstructionMnemonic::BSWAP,            { OPI_R4y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 03F */ { VXInstructionMnemonic::BSWAP,            { OPI_R0y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 040 */ { VXInstructionMnemonic::BSWAP,            { OPI_R2y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 041 */ { VXInstructionMnemonic::BSWAP,            { OPI_R7y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 042 */ { VXInstructionMnemonic::BSWAP,            { OPI_R6y,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 043 */ { VXInstructionMnemonic::BT,               { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 044 */ { VXInstructionMnemonic::BT,               { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 045 */ { VXInstructionMnemonic::BTC,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 046 */ { VXInstructionMnemonic::BTC,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 047 */ { VXInstructionMnemonic::BTR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 048 */ { VXInstructionMnemonic::BTR,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 049 */ { VXInstructionMnemonic::BTS,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 04A */ { VXInstructionMnemonic::BTS,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 04B */ { VXInstructionMnemonic::CALL,             { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 04C */ { VXInstructionMnemonic::CALL,             { OPI_Eq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 04D */ { VXInstructionMnemonic::CALL,             { OPI_Fv,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 04E */ { VXInstructionMnemonic::CALL,             { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 04F */ { VXInstructionMnemonic::CALL,             { OPI_Av,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 050 */ { VXInstructionMnemonic::CBW,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 051 */ { VXInstructionMnemonic::CDQ,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 052 */ { VXInstructionMnemonic::CDQE,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 053 */ { VXInstructionMnemonic::CLC,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 054 */ { VXInstructionMnemonic::CLD,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 055 */ { VXInstructionMnemonic::CLFLUSH,          { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 056 */ { VXInstructionMnemonic::CLGI,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 057 */ { VXInstructionMnemonic::CLI,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 058 */ { VXInstructionMnemonic::CLTS,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 059 */ { VXInstructionMnemonic::CMC,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 05A */ { VXInstructionMnemonic::CMOVA,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 05B */ { VXInstructionMnemonic::CMOVAE,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 05C */ { VXInstructionMnemonic::CMOVB,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 05D */ { VXInstructionMnemonic::CMOVBE,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 05E */ { VXInstructionMnemonic::CMOVG,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 05F */ { VXInstructionMnemonic::CMOVGE,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 060 */ { VXInstructionMnemonic::CMOVL,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 061 */ { VXInstructionMnemonic::CMOVLE,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 062 */ { VXInstructionMnemonic::CMOVNO,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 063 */ { VXInstructionMnemonic::CMOVNP,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 064 */ { VXInstructionMnemonic::CMOVNS,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 065 */ { VXInstructionMnemonic::CMOVNZ,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 066 */ { VXInstructionMnemonic::CMOVO,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 067 */ { VXInstructionMnemonic::CMOVP,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 068 */ { VXInstructionMnemonic::CMOVS,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 069 */ { VXInstructionMnemonic::CMOVZ,            { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 06A */ { VXInstructionMnemonic::CMP,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 06B */ { VXInstructionMnemonic::CMP,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 06C */ { VXInstructionMnemonic::CMP,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 06D */ { VXInstructionMnemonic::CMP,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 06E */ { VXInstructionMnemonic::CMP,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 06F */ { VXInstructionMnemonic::CMP,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 070 */ { VXInstructionMnemonic::CMP,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 071 */ { VXInstructionMnemonic::CMP,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 072 */ { VXInstructionMnemonic::CMP,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 073 */ { VXInstructionMnemonic::CMP,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 074 */ { VXInstructionMnemonic::CMPPD,            { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 075 */ { VXInstructionMnemonic::CMPPS,            { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 076 */ { VXInstructionMnemonic::CMPSB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 077 */ { VXInstructionMnemonic::CMPSD,            { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 078 */ { VXInstructionMnemonic::CMPSD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 079 */ { VXInstructionMnemonic::CMPSQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 07A */ { VXInstructionMnemonic::CMPSS,            { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 07B */ { VXInstructionMnemonic::CMPSW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 07C */ { VXInstructionMnemonic::CMPXCHG,          { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 07D */ { VXInstructionMnemonic::CMPXCHG,          { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 07E */ { VXInstructionMnemonic::CMPXCHG16B,       { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 07F */ { VXInstructionMnemonic::CMPXCHG8B,        { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 080 */ { VXInstructionMnemonic::CMPXCHG8B,        { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 081 */ { VXInstructionMnemonic::COMISD,           { OPI_Vsd,  OPI_Wsd,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 082 */ { VXInstructionMnemonic::COMISS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 083 */ { VXInstructionMnemonic::CPUID,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 084 */ { VXInstructionMnemonic::CQO,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 085 */ { VXInstructionMnemonic::CRC32,            { OPI_Gy,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 086 */ { VXInstructionMnemonic::CRC32,            { OPI_Gy,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 087 */ { VXInstructionMnemonic::CVTDQ2PD,         { OPI_V,    OPI_Wdq,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 088 */ { VXInstructionMnemonic::CVTDQ2PS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 089 */ { VXInstructionMnemonic::CVTPD2DQ,         { OPI_Vdq,  OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08A */ { VXInstructionMnemonic::CVTPD2PI,         { OPI_P,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08B */ { VXInstructionMnemonic::CVTPD2PS,         { OPI_Vdq,  OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08C */ { VXInstructionMnemonic::CVTPI2PD,         { OPI_V,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08D */ { VXInstructionMnemonic::CVTPI2PS,         { OPI_V,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08E */ { VXInstructionMnemonic::CVTPS2DQ,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 08F */ { VXInstructionMnemonic::CVTPS2PD,         { OPI_V,    OPI_Wdq,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 090 */ { VXInstructionMnemonic::CVTPS2PI,         { OPI_P,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 091 */ { VXInstructionMnemonic::CVTSD2SI,         { OPI_Gy,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 092 */ { VXInstructionMnemonic::CVTSD2SS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 093 */ { VXInstructionMnemonic::CVTSI2SD,         { OPI_V,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 094 */ { VXInstructionMnemonic::CVTSI2SS,         { OPI_V,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 095 */ { VXInstructionMnemonic::CVTSS2SD,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 096 */ { VXInstructionMnemonic::CVTSS2SI,         { OPI_Gy,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 097 */ { VXInstructionMnemonic::CVTTPD2DQ,        { OPI_Vdq,  OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 098 */ { VXInstructionMnemonic::CVTTPD2PI,        { OPI_P,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 099 */ { VXInstructionMnemonic::CVTTPS2DQ,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 09A */ { VXInstructionMnemonic::CVTTPS2PI,        { OPI_P,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 09B */ { VXInstructionMnemonic::CVTTSD2SI,        { OPI_Gy,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 09C */ { VXInstructionMnemonic::CVTTSS2SI,        { OPI_Gy,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 09D */ { VXInstructionMnemonic::CWD,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 09E */ { VXInstructionMnemonic::CWDE,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 09F */ { VXInstructionMnemonic::DAA,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 0A0 */ { VXInstructionMnemonic::DAS,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 0A1 */ { VXInstructionMnemonic::DEC,              { OPI_R6z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A2 */ { VXInstructionMnemonic::DEC,              { OPI_R5z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A3 */ { VXInstructionMnemonic::DEC,              { OPI_R7z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A4 */ { VXInstructionMnemonic::DEC,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0A5 */ { VXInstructionMnemonic::DEC,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0A6 */ { VXInstructionMnemonic::DEC,              { OPI_R1z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A7 */ { VXInstructionMnemonic::DEC,              { OPI_R0z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A8 */ { VXInstructionMnemonic::DEC,              { OPI_R2z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0A9 */ { VXInstructionMnemonic::DEC,              { OPI_R4z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0AA */ { VXInstructionMnemonic::DEC,              { OPI_R3z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 0AB */ { VXInstructionMnemonic::DIV,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0AC */ { VXInstructionMnemonic::DIV,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0AD */ { VXInstructionMnemonic::DIVPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0AE */ { VXInstructionMnemonic::DIVPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0AF */ { VXInstructionMnemonic::DIVSD,            { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0B0 */ { VXInstructionMnemonic::DIVSS,            { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0B1 */ { VXInstructionMnemonic::DPPD,             { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0B2 */ { VXInstructionMnemonic::DPPS,             { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0B3 */ { VXInstructionMnemonic::EMMS,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 0B4 */ { VXInstructionMnemonic::ENTER,            { OPI_Iw,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_DEFAULT_64 },
    /* 0B5 */ { VXInstructionMnemonic::EXTRACTPS,        { OPI_MdRy, OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0B6 */ { VXInstructionMnemonic::F2XM1,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 0B7 */ { VXInstructionMnemonic::FABS,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 0B8 */ { VXInstructionMnemonic::FADD,             { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0B9 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0BA */ { VXInstructionMnemonic::FADD,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0BB */ { VXInstructionMnemonic::FADD,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0BC */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0BD */ { VXInstructionMnemonic::FADD,             { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0BE */ { VXInstructionMnemonic::FADD,             { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0BF */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C0 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C1 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C2 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C3 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C4 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C5 */ { VXInstructionMnemonic::FADD,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C6 */ { VXInstructionMnemonic::FADD,             { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C7 */ { VXInstructionMnemonic::FADD,             { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C8 */ { VXInstructionMnemonic::FADD,             { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0C9 */ { VXInstructionMnemonic::FADD,             { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CA */ { VXInstructionMnemonic::FADDP,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CB */ { VXInstructionMnemonic::FADDP,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CC */ { VXInstructionMnemonic::FADDP,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CD */ { VXInstructionMnemonic::FADDP,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CE */ { VXInstructionMnemonic::FADDP,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0CF */ { VXInstructionMnemonic::FADDP,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D0 */ { VXInstructionMnemonic::FADDP,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D1 */ { VXInstructionMnemonic::FADDP,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D2 */ { VXInstructionMnemonic::FBLD,             { OPI_Mt,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0D3 */ { VXInstructionMnemonic::FBSTP,            { OPI_Mt,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 0D4 */ { VXInstructionMnemonic::FCHS,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 0D5 */ { VXInstructionMnemonic::FCLEX,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 0D6 */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D7 */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D8 */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0D9 */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DA */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DB */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DC */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DD */ { VXInstructionMnemonic::FCMOVB,           { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DE */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0DF */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E0 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E1 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E2 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E3 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E4 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E5 */ { VXInstructionMnemonic::FCMOVBE,          { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E6 */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E7 */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E8 */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0E9 */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0EA */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0EB */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0EC */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0ED */ { VXInstructionMnemonic::FCMOVE,           { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0EE */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0EF */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F0 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F1 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F2 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F3 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F4 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F5 */ { VXInstructionMnemonic::FCMOVNB,          { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F6 */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F7 */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F8 */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 0F9 */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FA */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FB */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FC */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FD */ { VXInstructionMnemonic::FCMOVNBE,         { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FE */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 0FF */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 100 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 101 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 102 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 103 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 104 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 105 */ { VXInstructionMnemonic::FCMOVNE,          { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 106 */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 107 */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 108 */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 109 */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 10A */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 10B */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 10C */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 10D */ { VXInstructionMnemonic::FCMOVNU,          { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 10E */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 10F */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 110 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 111 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 112 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 113 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 114 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 115 */ { VXInstructionMnemonic::FCMOVU,           { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 116 */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 117 */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 118 */ { VXInstructionMnemonic::FCOM,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 119 */ { VXInstructionMnemonic::FCOM,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 11A */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 11B */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 11C */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 11D */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 11E */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 11F */ { VXInstructionMnemonic::FCOM,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 120 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 121 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 122 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 123 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 124 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 125 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 126 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 127 */ { VXInstructionMnemonic::FCOM2,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 128 */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 129 */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 12A */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 12B */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 12C */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 12D */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 12E */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 12F */ { VXInstructionMnemonic::FCOMI,            { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 130 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 131 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 132 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 133 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 134 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 135 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 136 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 137 */ { VXInstructionMnemonic::FCOMIP,           { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 138 */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 139 */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 13A */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 13B */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 13C */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 13D */ { VXInstructionMnemonic::FCOMP,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 13E */ { VXInstructionMnemonic::FCOMP,            { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 13F */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 140 */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 141 */ { VXInstructionMnemonic::FCOMP,            { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 142 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 143 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 144 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 145 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 146 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 147 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 148 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 149 */ { VXInstructionMnemonic::FCOMP3,           { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14A */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14B */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14C */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14D */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14E */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 14F */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 150 */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 151 */ { VXInstructionMnemonic::FCOMP5,           { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 152 */ { VXInstructionMnemonic::FCOMPP,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 153 */ { VXInstructionMnemonic::FCOS,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 154 */ { VXInstructionMnemonic::FDECSTP,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 155 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 156 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 157 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 158 */ { VXInstructionMnemonic::FDIV,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 159 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 15A */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 15B */ { VXInstructionMnemonic::FDIV,             { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 15C */ { VXInstructionMnemonic::FDIV,             { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 15D */ { VXInstructionMnemonic::FDIV,             { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 15E */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 15F */ { VXInstructionMnemonic::FDIV,             { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 160 */ { VXInstructionMnemonic::FDIV,             { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 161 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 162 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 163 */ { VXInstructionMnemonic::FDIV,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 164 */ { VXInstructionMnemonic::FDIV,             { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 165 */ { VXInstructionMnemonic::FDIV,             { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 166 */ { VXInstructionMnemonic::FDIV,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 167 */ { VXInstructionMnemonic::FDIVP,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 168 */ { VXInstructionMnemonic::FDIVP,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 169 */ { VXInstructionMnemonic::FDIVP,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16A */ { VXInstructionMnemonic::FDIVP,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16B */ { VXInstructionMnemonic::FDIVP,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16C */ { VXInstructionMnemonic::FDIVP,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16D */ { VXInstructionMnemonic::FDIVP,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16E */ { VXInstructionMnemonic::FDIVP,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 16F */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 170 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 171 */ { VXInstructionMnemonic::FDIVR,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 172 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 173 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 174 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 175 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 176 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 177 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 178 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 179 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 17A */ { VXInstructionMnemonic::FDIVR,            { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 17B */ { VXInstructionMnemonic::FDIVR,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 17C */ { VXInstructionMnemonic::FDIVR,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 17D */ { VXInstructionMnemonic::FDIVR,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 17E */ { VXInstructionMnemonic::FDIVR,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 17F */ { VXInstructionMnemonic::FDIVR,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 180 */ { VXInstructionMnemonic::FDIVR,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 181 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 182 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 183 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 184 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 185 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 186 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 187 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 188 */ { VXInstructionMnemonic::FDIVRP,           { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 189 */ { VXInstructionMnemonic::FEMMS,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18A */ { VXInstructionMnemonic::FFREE,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18B */ { VXInstructionMnemonic::FFREE,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18C */ { VXInstructionMnemonic::FFREE,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18D */ { VXInstructionMnemonic::FFREE,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18E */ { VXInstructionMnemonic::FFREE,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 18F */ { VXInstructionMnemonic::FFREE,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 190 */ { VXInstructionMnemonic::FFREE,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 191 */ { VXInstructionMnemonic::FFREE,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 192 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 193 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 194 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 195 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 196 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 197 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 198 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 199 */ { VXInstructionMnemonic::FFREEP,           { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 19A */ { VXInstructionMnemonic::FIADD,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 19B */ { VXInstructionMnemonic::FIADD,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 19C */ { VXInstructionMnemonic::FICOM,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 19D */ { VXInstructionMnemonic::FICOM,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 19E */ { VXInstructionMnemonic::FICOMP,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 19F */ { VXInstructionMnemonic::FICOMP,           { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A0 */ { VXInstructionMnemonic::FIDIV,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A1 */ { VXInstructionMnemonic::FIDIV,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A2 */ { VXInstructionMnemonic::FIDIVR,           { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A3 */ { VXInstructionMnemonic::FIDIVR,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A4 */ { VXInstructionMnemonic::FILD,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A5 */ { VXInstructionMnemonic::FILD,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A6 */ { VXInstructionMnemonic::FILD,             { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A7 */ { VXInstructionMnemonic::FIMUL,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A8 */ { VXInstructionMnemonic::FIMUL,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1A9 */ { VXInstructionMnemonic::FINCSTP,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1AA */ { VXInstructionMnemonic::FIST,             { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1AB */ { VXInstructionMnemonic::FIST,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1AC */ { VXInstructionMnemonic::FISTP,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1AD */ { VXInstructionMnemonic::FISTP,            { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1AE */ { VXInstructionMnemonic::FISTP,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1AF */ { VXInstructionMnemonic::FISTTP,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B0 */ { VXInstructionMnemonic::FISTTP,           { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B1 */ { VXInstructionMnemonic::FISTTP,           { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B2 */ { VXInstructionMnemonic::FISUB,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B3 */ { VXInstructionMnemonic::FISUB,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B4 */ { VXInstructionMnemonic::FISUBR,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B5 */ { VXInstructionMnemonic::FISUBR,           { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1B6 */ { VXInstructionMnemonic::FLD,              { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1B7 */ { VXInstructionMnemonic::FLD,              { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1B8 */ { VXInstructionMnemonic::FLD,              { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1B9 */ { VXInstructionMnemonic::FLD,              { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1BA */ { VXInstructionMnemonic::FLD,              { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1BB */ { VXInstructionMnemonic::FLD,              { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1BC */ { VXInstructionMnemonic::FLD,              { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1BD */ { VXInstructionMnemonic::FLD,              { OPI_Mt,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1BE */ { VXInstructionMnemonic::FLD,              { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1BF */ { VXInstructionMnemonic::FLD,              { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C0 */ { VXInstructionMnemonic::FLD,              { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C1 */ { VXInstructionMnemonic::FLD1,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C2 */ { VXInstructionMnemonic::FLDCW,            { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1C3 */ { VXInstructionMnemonic::FLDENV,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1C4 */ { VXInstructionMnemonic::FLDL2E,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C5 */ { VXInstructionMnemonic::FLDL2T,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C6 */ { VXInstructionMnemonic::FLDLG2,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C7 */ { VXInstructionMnemonic::FLDLN2,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C8 */ { VXInstructionMnemonic::FLDPI,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1C9 */ { VXInstructionMnemonic::FLDZ,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1CA */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 1CB */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 1CC */ { VXInstructionMnemonic::FMUL,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1CD */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1CE */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 1CF */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D0 */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D1 */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D2 */ { VXInstructionMnemonic::FMUL,             { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D3 */ { VXInstructionMnemonic::FMUL,             { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D4 */ { VXInstructionMnemonic::FMUL,             { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D5 */ { VXInstructionMnemonic::FMUL,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1D6 */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D7 */ { VXInstructionMnemonic::FMUL,             { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D8 */ { VXInstructionMnemonic::FMUL,             { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1D9 */ { VXInstructionMnemonic::FMUL,             { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DA */ { VXInstructionMnemonic::FMUL,             { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DB */ { VXInstructionMnemonic::FMUL,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DC */ { VXInstructionMnemonic::FMULP,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DD */ { VXInstructionMnemonic::FMULP,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DE */ { VXInstructionMnemonic::FMULP,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1DF */ { VXInstructionMnemonic::FMULP,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1E0 */ { VXInstructionMnemonic::FMULP,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1E1 */ { VXInstructionMnemonic::FMULP,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1E2 */ { VXInstructionMnemonic::FMULP,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1E3 */ { VXInstructionMnemonic::FMULP,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 1E4 */ { VXInstructionMnemonic::FNINIT,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1E5 */ { VXInstructionMnemonic::FNOP,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1E6 */ { VXInstructionMnemonic::FNSAVE,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1E7 */ { VXInstructionMnemonic::FNSTCW,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1E8 */ { VXInstructionMnemonic::FNSTENV,          { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1E9 */ { VXInstructionMnemonic::FNSTSW,           { OPI_AX,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1EA */ { VXInstructionMnemonic::FNSTSW,           { OPI_Mw,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1EB */ { VXInstructionMnemonic::FPATAN,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1EC */ { VXInstructionMnemonic::FPREM,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1ED */ { VXInstructionMnemonic::FPREM1,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1EE */ { VXInstructionMnemonic::FPTAN,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1EF */ { VXInstructionMnemonic::FRNDINT,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F0 */ { VXInstructionMnemonic::FRSTOR,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1F1 */ { VXInstructionMnemonic::FSCALE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F2 */ { VXInstructionMnemonic::FSIN,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F3 */ { VXInstructionMnemonic::FSINCOS,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F4 */ { VXInstructionMnemonic::FSQRT,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F5 */ { VXInstructionMnemonic::FST,              { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1F6 */ { VXInstructionMnemonic::FST,              { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F7 */ { VXInstructionMnemonic::FST,              { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F8 */ { VXInstructionMnemonic::FST,              { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1F9 */ { VXInstructionMnemonic::FST,              { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1FA */ { VXInstructionMnemonic::FST,              { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1FB */ { VXInstructionMnemonic::FST,              { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1FC */ { VXInstructionMnemonic::FST,              { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 1FD */ { VXInstructionMnemonic::FST,              { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1FE */ { VXInstructionMnemonic::FST,              { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 1FF */ { VXInstructionMnemonic::FSTP,             { OPI_Mt,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 200 */ { VXInstructionMnemonic::FSTP,             { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 201 */ { VXInstructionMnemonic::FSTP,             { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 202 */ { VXInstructionMnemonic::FSTP,             { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 203 */ { VXInstructionMnemonic::FSTP,             { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 204 */ { VXInstructionMnemonic::FSTP,             { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 205 */ { VXInstructionMnemonic::FSTP,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 206 */ { VXInstructionMnemonic::FSTP,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 207 */ { VXInstructionMnemonic::FSTP,             { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 208 */ { VXInstructionMnemonic::FSTP,             { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 209 */ { VXInstructionMnemonic::FSTP,             { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20A */ { VXInstructionMnemonic::FSTP1,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20B */ { VXInstructionMnemonic::FSTP1,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20C */ { VXInstructionMnemonic::FSTP1,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20D */ { VXInstructionMnemonic::FSTP1,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20E */ { VXInstructionMnemonic::FSTP1,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 20F */ { VXInstructionMnemonic::FSTP1,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 210 */ { VXInstructionMnemonic::FSTP1,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 211 */ { VXInstructionMnemonic::FSTP1,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 212 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 213 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 214 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 215 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 216 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 217 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 218 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 219 */ { VXInstructionMnemonic::FSTP8,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21A */ { VXInstructionMnemonic::FSTP9,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21B */ { VXInstructionMnemonic::FSTP9,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21C */ { VXInstructionMnemonic::FSTP9,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21D */ { VXInstructionMnemonic::FSTP9,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21E */ { VXInstructionMnemonic::FSTP9,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 21F */ { VXInstructionMnemonic::FSTP9,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 220 */ { VXInstructionMnemonic::FSTP9,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 221 */ { VXInstructionMnemonic::FSTP9,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 222 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 223 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 224 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 225 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 226 */ { VXInstructionMnemonic::FSUB,             { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 227 */ { VXInstructionMnemonic::FSUB,             { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 228 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 229 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 22A */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 22B */ { VXInstructionMnemonic::FSUB,             { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 22C */ { VXInstructionMnemonic::FSUB,             { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 22D */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 22E */ { VXInstructionMnemonic::FSUB,             { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 22F */ { VXInstructionMnemonic::FSUB,             { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 230 */ { VXInstructionMnemonic::FSUB,             { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 231 */ { VXInstructionMnemonic::FSUB,             { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 232 */ { VXInstructionMnemonic::FSUB,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 233 */ { VXInstructionMnemonic::FSUB,             { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 234 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 235 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 236 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 237 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 238 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 239 */ { VXInstructionMnemonic::FSUBP,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23A */ { VXInstructionMnemonic::FSUBP,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23B */ { VXInstructionMnemonic::FSUBP,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23C */ { VXInstructionMnemonic::FSUBR,            { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23D */ { VXInstructionMnemonic::FSUBR,            { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23E */ { VXInstructionMnemonic::FSUBR,            { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 23F */ { VXInstructionMnemonic::FSUBR,            { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 240 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 241 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 242 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 243 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 244 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 245 */ { VXInstructionMnemonic::FSUBR,            { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 246 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 247 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 248 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 249 */ { VXInstructionMnemonic::FSUBR,            { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 24A */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 24B */ { VXInstructionMnemonic::FSUBR,            { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 24C */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 24D */ { VXInstructionMnemonic::FSUBR,            { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 24E */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST4,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 24F */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST5,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 250 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST6,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 251 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST3,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 252 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 253 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST1,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 254 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST2,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 255 */ { VXInstructionMnemonic::FSUBRP,           { OPI_ST7,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 256 */ { VXInstructionMnemonic::FTST,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 257 */ { VXInstructionMnemonic::FUCOM,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 258 */ { VXInstructionMnemonic::FUCOM,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 259 */ { VXInstructionMnemonic::FUCOM,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25A */ { VXInstructionMnemonic::FUCOM,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25B */ { VXInstructionMnemonic::FUCOM,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25C */ { VXInstructionMnemonic::FUCOM,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25D */ { VXInstructionMnemonic::FUCOM,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25E */ { VXInstructionMnemonic::FUCOM,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 25F */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 260 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 261 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 262 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 263 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 264 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 265 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 266 */ { VXInstructionMnemonic::FUCOMI,           { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 267 */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 268 */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 269 */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 26A */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 26B */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 26C */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 26D */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 26E */ { VXInstructionMnemonic::FUCOMIP,          { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 26F */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 270 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 271 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 272 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 273 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 274 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 275 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 276 */ { VXInstructionMnemonic::FUCOMP,           { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 277 */ { VXInstructionMnemonic::FUCOMPP,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 278 */ { VXInstructionMnemonic::FXAM,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 279 */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST5,  OPI_NONE, OPI_NONE }, 0 },
    /* 27A */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST4,  OPI_NONE, OPI_NONE }, 0 },
    /* 27B */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST7,  OPI_NONE, OPI_NONE }, 0 },
    /* 27C */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST6,  OPI_NONE, OPI_NONE }, 0 },
    /* 27D */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST1,  OPI_NONE, OPI_NONE }, 0 },
    /* 27E */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST0,  OPI_NONE, OPI_NONE }, 0 },
    /* 27F */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST3,  OPI_NONE, OPI_NONE }, 0 },
    /* 280 */ { VXInstructionMnemonic::FXCH,             { OPI_ST0,  OPI_ST2,  OPI_NONE, OPI_NONE }, 0 },
    /* 281 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 282 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 283 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 284 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 285 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 286 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 287 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 288 */ { VXInstructionMnemonic::FXCH4,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 289 */ { VXInstructionMnemonic::FXCH7,            { OPI_ST5,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28A */ { VXInstructionMnemonic::FXCH7,            { OPI_ST1,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28B */ { VXInstructionMnemonic::FXCH7,            { OPI_ST0,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28C */ { VXInstructionMnemonic::FXCH7,            { OPI_ST2,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28D */ { VXInstructionMnemonic::FXCH7,            { OPI_ST4,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28E */ { VXInstructionMnemonic::FXCH7,            { OPI_ST3,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 28F */ { VXInstructionMnemonic::FXCH7,            { OPI_ST7,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 290 */ { VXInstructionMnemonic::FXCH7,            { OPI_ST6,  OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 291 */ { VXInstructionMnemonic::FXRSTOR,          { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 292 */ { VXInstructionMnemonic::FXSAVE,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 293 */ { VXInstructionMnemonic::FXTRACT,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 294 */ { VXInstructionMnemonic::FYL2X,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 295 */ { VXInstructionMnemonic::FYL2XP1,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 296 */ { VXInstructionMnemonic::GETSEC,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 297 */ { VXInstructionMnemonic::HADDPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 298 */ { VXInstructionMnemonic::HADDPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 299 */ { VXInstructionMnemonic::HLT,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 29A */ { VXInstructionMnemonic::HSUBPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 29B */ { VXInstructionMnemonic::HSUBPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 29C */ { VXInstructionMnemonic::IDIV,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 29D */ { VXInstructionMnemonic::IDIV,             { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 29E */ { VXInstructionMnemonic::IMUL,             { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 29F */ { VXInstructionMnemonic::IMUL,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2A0 */ { VXInstructionMnemonic::IMUL,             { OPI_Gv,   OPI_Ev,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2A1 */ { VXInstructionMnemonic::IMUL,             { OPI_Gv,   OPI_Ev,   OPI_Iz,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2A2 */ { VXInstructionMnemonic::IMUL,             { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2A3 */ { VXInstructionMnemonic::IN,               { OPI_eAX,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2A4 */ { VXInstructionMnemonic::IN,               { OPI_AL,   OPI_DX,   OPI_NONE, OPI_NONE }, 0 },
    /* 2A5 */ { VXInstructionMnemonic::IN,               { OPI_eAX,  OPI_DX,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2A6 */ { VXInstructionMnemonic::IN,               { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 2A7 */ { VXInstructionMnemonic::INC,              { OPI_R0z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2A8 */ { VXInstructionMnemonic::INC,              { OPI_R7z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2A9 */ { VXInstructionMnemonic::INC,              { OPI_R6z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2AA */ { VXInstructionMnemonic::INC,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2AB */ { VXInstructionMnemonic::INC,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2AC */ { VXInstructionMnemonic::INC,              { OPI_R5z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2AD */ { VXInstructionMnemonic::INC,              { OPI_R2z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2AE */ { VXInstructionMnemonic::INC,              { OPI_R1z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2AF */ { VXInstructionMnemonic::INC,              { OPI_R4z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2B0 */ { VXInstructionMnemonic::INC,              { OPI_R3z,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2B1 */ { VXInstructionMnemonic::INSB,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 2B2 */ { VXInstructionMnemonic::INSD,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 2B3 */ { VXInstructionMnemonic::INSERTPS,         { OPI_V,    OPI_Md,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2B4 */ { VXInstructionMnemonic::INSW,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 2B5 */ { VXInstructionMnemonic::INT,              { OPI_Ib,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2B6 */ { VXInstructionMnemonic::INT1,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2B7 */ { VXInstructionMnemonic::INT3,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2B8 */ { VXInstructionMnemonic::INTO,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 2B9 */ { VXInstructionMnemonic::INVD,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2BA */ { VXInstructionMnemonic::INVEPT,           { OPI_Gd,   OPI_Mo,   OPI_NONE, OPI_NONE }, 0 },
    /* 2BB */ { VXInstructionMnemonic::INVEPT,           { OPI_Gq,   OPI_Mo,   OPI_NONE, OPI_NONE }, 0 },
    /* 2BC */ { VXInstructionMnemonic::INVLPG,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2BD */ { VXInstructionMnemonic::INVLPGA,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2BE */ { VXInstructionMnemonic::INVVPID,          { OPI_Gq,   OPI_Mo,   OPI_NONE, OPI_NONE }, 0 },
    /* 2BF */ { VXInstructionMnemonic::INVVPID,          { OPI_Gd,   OPI_Mo,   OPI_NONE, OPI_NONE }, 0 },
    /* 2C0 */ { VXInstructionMnemonic::IRETD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 2C1 */ { VXInstructionMnemonic::IRETQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 2C2 */ { VXInstructionMnemonic::IRETW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 2C3 */ { VXInstructionMnemonic::JA,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2C4 */ { VXInstructionMnemonic::JA,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2C5 */ { VXInstructionMnemonic::JAE,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2C6 */ { VXInstructionMnemonic::JAE,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2C7 */ { VXInstructionMnemonic::JB,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2C8 */ { VXInstructionMnemonic::JB,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2C9 */ { VXInstructionMnemonic::JBE,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2CA */ { VXInstructionMnemonic::JBE,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2CB */ { VXInstructionMnemonic::JCXZ,             { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE },
    /* 2CC */ { VXInstructionMnemonic::JECXZ,            { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE },
    /* 2CD */ { VXInstructionMnemonic::JG,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2CE */ { VXInstructionMnemonic::JG,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2CF */ { VXInstructionMnemonic::JGE,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2D0 */ { VXInstructionMnemonic::JGE,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2D1 */ { VXInstructionMnemonic::JL,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2D2 */ { VXInstructionMnemonic::JL,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2D3 */ { VXInstructionMnemonic::JLE,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2D4 */ { VXInstructionMnemonic::JLE,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2D5 */ { VXInstructionMnemonic::JMP,              { OPI_Fv,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2D6 */ { VXInstructionMnemonic::JMP,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 2D7 */ { VXInstructionMnemonic::JMP,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2D8 */ { VXInstructionMnemonic::JMP,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_DEFAULT_64 },
    /* 2D9 */ { VXInstructionMnemonic::JMP,              { OPI_Av,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2DA */ { VXInstructionMnemonic::JNO,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2DB */ { VXInstructionMnemonic::JNO,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2DC */ { VXInstructionMnemonic::JNP,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2DD */ { VXInstructionMnemonic::JNP,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2DE */ { VXInstructionMnemonic::JNS,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2DF */ { VXInstructionMnemonic::JNS,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2E0 */ { VXInstructionMnemonic::JNZ,              { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2E1 */ { VXInstructionMnemonic::JNZ,              { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2E2 */ { VXInstructionMnemonic::JO,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2E3 */ { VXInstructionMnemonic::JO,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2E4 */ { VXInstructionMnemonic::JP,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2E5 */ { VXInstructionMnemonic::JP,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2E6 */ { VXInstructionMnemonic::JRCXZ,            { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE },
    /* 2E7 */ { VXInstructionMnemonic::JS,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2E8 */ { VXInstructionMnemonic::JS,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2E9 */ { VXInstructionMnemonic::JZ,               { OPI_Jz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 2EA */ { VXInstructionMnemonic::JZ,               { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2EB */ { VXInstructionMnemonic::LAHF,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2EC */ { VXInstructionMnemonic::LAR,              { OPI_Gv,   OPI_Ew,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2ED */ { VXInstructionMnemonic::LDDQU,            { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2EE */ { VXInstructionMnemonic::LDMXCSR,          { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2EF */ { VXInstructionMnemonic::LDS,              { OPI_Gv,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2F0 */ { VXInstructionMnemonic::LEA,              { OPI_Gv,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2F1 */ { VXInstructionMnemonic::LEAVE,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F2 */ { VXInstructionMnemonic::LES,              { OPI_Gv,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 2F3 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F4 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F5 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F6 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F7 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F8 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2F9 */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2FA */ { VXInstructionMnemonic::LFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 2FB */ { VXInstructionMnemonic::LFS,              { OPI_Gz,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2FC */ { VXInstructionMnemonic::LGDT,             { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2FD */ { VXInstructionMnemonic::LGS,              { OPI_Gz,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2FE */ { VXInstructionMnemonic::LIDT,             { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 2FF */ { VXInstructionMnemonic::LLDT,             { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 300 */ { VXInstructionMnemonic::LMSW,             { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 301 */ { VXInstructionMnemonic::LMSW,             { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 302 */ { VXInstructionMnemonic::LOCK,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 303 */ { VXInstructionMnemonic::LODSB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 304 */ { VXInstructionMnemonic::LODSD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 305 */ { VXInstructionMnemonic::LODSQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 306 */ { VXInstructionMnemonic::LODSW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 307 */ { VXInstructionMnemonic::LOOP,             { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 308 */ { VXInstructionMnemonic::LOOPE,            { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 309 */ { VXInstructionMnemonic::LOOPNE,           { OPI_Jb,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 30A */ { VXInstructionMnemonic::LSL,              { OPI_Gv,   OPI_Ew,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 30B */ { VXInstructionMnemonic::LSS,              { OPI_Gv,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 30C */ { VXInstructionMnemonic::LTR,              { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 30D */ { VXInstructionMnemonic::MASKMOVDQU,       { OPI_V,    OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 30E */ { VXInstructionMnemonic::MASKMOVQ,         { OPI_P,    OPI_N,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 30F */ { VXInstructionMnemonic::MAXPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 310 */ { VXInstructionMnemonic::MAXPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 311 */ { VXInstructionMnemonic::MAXSD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 312 */ { VXInstructionMnemonic::MAXSS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 313 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 314 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 315 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 316 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 317 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 318 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 319 */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 31A */ { VXInstructionMnemonic::MFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 31B */ { VXInstructionMnemonic::MINPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 31C */ { VXInstructionMnemonic::MINPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 31D */ { VXInstructionMnemonic::MINSD,            { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 31E */ { VXInstructionMnemonic::MINSS,            { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 31F */ { VXInstructionMnemonic::MONITOR,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 320 */ { VXInstructionMnemonic::MONTMUL,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 321 */ { VXInstructionMnemonic::MOV,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 322 */ { VXInstructionMnemonic::MOV,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 323 */ { VXInstructionMnemonic::MOV,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 324 */ { VXInstructionMnemonic::MOV,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 325 */ { VXInstructionMnemonic::MOV,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 326 */ { VXInstructionMnemonic::MOV,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 327 */ { VXInstructionMnemonic::MOV,              { OPI_R2b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 328 */ { VXInstructionMnemonic::MOV,              { OPI_R1b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 329 */ { VXInstructionMnemonic::MOV,              { OPI_R0b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 32A */ { VXInstructionMnemonic::MOV,              { OPI_R5b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 32B */ { VXInstructionMnemonic::MOV,              { OPI_R4b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 32C */ { VXInstructionMnemonic::MOV,              { OPI_R3b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 32D */ { VXInstructionMnemonic::MOV,              { OPI_AL,   OPI_Ob,   OPI_NONE, OPI_NONE }, 0 },
    /* 32E */ { VXInstructionMnemonic::MOV,              { OPI_S,    OPI_MwRv, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 32F */ { VXInstructionMnemonic::MOV,              { OPI_MwRv, OPI_S,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 330 */ { VXInstructionMnemonic::MOV,              { OPI_Ov,   OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 331 */ { VXInstructionMnemonic::MOV,              { OPI_Ob,   OPI_AL,   OPI_NONE, OPI_NONE }, 0 },
    /* 332 */ { VXInstructionMnemonic::MOV,              { OPI_rAX,  OPI_Ov,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 333 */ { VXInstructionMnemonic::MOV,              { OPI_R6b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 334 */ { VXInstructionMnemonic::MOV,              { OPI_R3v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 335 */ { VXInstructionMnemonic::MOV,              { OPI_R,    OPI_D,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 336 */ { VXInstructionMnemonic::MOV,              { OPI_R4v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 337 */ { VXInstructionMnemonic::MOV,              { OPI_C,    OPI_R,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 338 */ { VXInstructionMnemonic::MOV,              { OPI_R2v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 339 */ { VXInstructionMnemonic::MOV,              { OPI_D,    OPI_R,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 33A */ { VXInstructionMnemonic::MOV,              { OPI_R,    OPI_C,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 33B */ { VXInstructionMnemonic::MOV,              { OPI_R1v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 33C */ { VXInstructionMnemonic::MOV,              { OPI_R0v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 33D */ { VXInstructionMnemonic::MOV,              { OPI_R7b,  OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 33E */ { VXInstructionMnemonic::MOV,              { OPI_R5v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 33F */ { VXInstructionMnemonic::MOV,              { OPI_R7v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 340 */ { VXInstructionMnemonic::MOV,              { OPI_R6v,  OPI_Iv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 341 */ { VXInstructionMnemonic::MOVAPD,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 342 */ { VXInstructionMnemonic::MOVAPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 343 */ { VXInstructionMnemonic::MOVAPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 344 */ { VXInstructionMnemonic::MOVAPS,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 345 */ { VXInstructionMnemonic::MOVBE,            { OPI_Mv,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 346 */ { VXInstructionMnemonic::MOVBE,            { OPI_Gv,   OPI_Mv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 347 */ { VXInstructionMnemonic::MOVD,             { OPI_P,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 348 */ { VXInstructionMnemonic::MOVD,             { OPI_Ey,   OPI_P,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 349 */ { VXInstructionMnemonic::MOVD,             { OPI_Ey,   OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34A */ { VXInstructionMnemonic::MOVD,             { OPI_Ey,   OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34B */ { VXInstructionMnemonic::MOVD,             { OPI_Ey,   OPI_P,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34C */ { VXInstructionMnemonic::MOVD,             { OPI_P,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34D */ { VXInstructionMnemonic::MOVD,             { OPI_V,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34E */ { VXInstructionMnemonic::MOVD,             { OPI_V,    OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 34F */ { VXInstructionMnemonic::MOVDDUP,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 350 */ { VXInstructionMnemonic::MOVDDUP,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 351 */ { VXInstructionMnemonic::MOVDQ2Q,          { OPI_P,    OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXB },
    /* 352 */ { VXInstructionMnemonic::MOVDQA,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 353 */ { VXInstructionMnemonic::MOVDQA,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 354 */ { VXInstructionMnemonic::MOVDQU,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 355 */ { VXInstructionMnemonic::MOVDQU,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 356 */ { VXInstructionMnemonic::MOVHLPS,          { OPI_V,    OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 357 */ { VXInstructionMnemonic::MOVHPD,           { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 358 */ { VXInstructionMnemonic::MOVHPD,           { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 359 */ { VXInstructionMnemonic::MOVHPS,           { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35A */ { VXInstructionMnemonic::MOVHPS,           { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35B */ { VXInstructionMnemonic::MOVLHPS,          { OPI_V,    OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35C */ { VXInstructionMnemonic::MOVLPD,           { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35D */ { VXInstructionMnemonic::MOVLPD,           { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35E */ { VXInstructionMnemonic::MOVLPS,           { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 35F */ { VXInstructionMnemonic::MOVLPS,           { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 360 */ { VXInstructionMnemonic::MOVMSKPD,         { OPI_Gd,   OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 361 */ { VXInstructionMnemonic::MOVMSKPS,         { OPI_Gd,   OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 362 */ { VXInstructionMnemonic::MOVNTDQ,          { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 363 */ { VXInstructionMnemonic::MOVNTDQA,         { OPI_V,    OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 364 */ { VXInstructionMnemonic::MOVNTI,           { OPI_M,    OPI_Gy,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 365 */ { VXInstructionMnemonic::MOVNTPD,          { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 366 */ { VXInstructionMnemonic::MOVNTPS,          { OPI_M,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 367 */ { VXInstructionMnemonic::MOVNTQ,           { OPI_M,    OPI_P,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 368 */ { VXInstructionMnemonic::MOVQ,             { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 369 */ { VXInstructionMnemonic::MOVQ,             { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36A */ { VXInstructionMnemonic::MOVQ,             { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36B */ { VXInstructionMnemonic::MOVQ,             { OPI_Q,    OPI_P,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36C */ { VXInstructionMnemonic::MOVQ,             { OPI_P,    OPI_Eq,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36D */ { VXInstructionMnemonic::MOVQ,             { OPI_Eq,   OPI_P,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36E */ { VXInstructionMnemonic::MOVQ,             { OPI_Eq,   OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 36F */ { VXInstructionMnemonic::MOVQ,             { OPI_V,    OPI_Eq,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 370 */ { VXInstructionMnemonic::MOVQ2DQ,          { OPI_V,    OPI_N,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR },
    /* 371 */ { VXInstructionMnemonic::MOVSB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 372 */ { VXInstructionMnemonic::MOVSD,            { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 373 */ { VXInstructionMnemonic::MOVSD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 374 */ { VXInstructionMnemonic::MOVSD,            { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 375 */ { VXInstructionMnemonic::MOVSHDUP,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 376 */ { VXInstructionMnemonic::MOVSHDUP,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 377 */ { VXInstructionMnemonic::MOVSLDUP,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 378 */ { VXInstructionMnemonic::MOVSLDUP,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 379 */ { VXInstructionMnemonic::MOVSQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 37A */ { VXInstructionMnemonic::MOVSS,            { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 37B */ { VXInstructionMnemonic::MOVSS,            { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 37C */ { VXInstructionMnemonic::MOVSW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 37D */ { VXInstructionMnemonic::MOVSX,            { OPI_Gv,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 37E */ { VXInstructionMnemonic::MOVSX,            { OPI_Gy,   OPI_Ew,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 37F */ { VXInstructionMnemonic::MOVSXD,           { OPI_Gq,   OPI_Ed,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 380 */ { VXInstructionMnemonic::MOVUPD,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 381 */ { VXInstructionMnemonic::MOVUPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 382 */ { VXInstructionMnemonic::MOVUPS,           { OPI_W,    OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 383 */ { VXInstructionMnemonic::MOVUPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 384 */ { VXInstructionMnemonic::MOVZX,            { OPI_Gy,   OPI_Ew,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 385 */ { VXInstructionMnemonic::MOVZX,            { OPI_Gv,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 386 */ { VXInstructionMnemonic::MPSADBW,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 387 */ { VXInstructionMnemonic::MUL,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 388 */ { VXInstructionMnemonic::MUL,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 389 */ { VXInstructionMnemonic::MULPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 38A */ { VXInstructionMnemonic::MULPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 38B */ { VXInstructionMnemonic::MULSD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 38C */ { VXInstructionMnemonic::MULSS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 38D */ { VXInstructionMnemonic::MWAIT,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 38E */ { VXInstructionMnemonic::NEG,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 38F */ { VXInstructionMnemonic::NEG,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 390 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 391 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 392 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 393 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 394 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 395 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 396 */ { VXInstructionMnemonic::NOP,              { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 397 */ { VXInstructionMnemonic::NOT,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 398 */ { VXInstructionMnemonic::NOT,              { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 399 */ { VXInstructionMnemonic::OR,               { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 39A */ { VXInstructionMnemonic::OR,               { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 39B */ { VXInstructionMnemonic::OR,               { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 39C */ { VXInstructionMnemonic::OR,               { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 39D */ { VXInstructionMnemonic::OR,               { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 39E */ { VXInstructionMnemonic::OR,               { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 39F */ { VXInstructionMnemonic::OR,               { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3A0 */ { VXInstructionMnemonic::OR,               { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3A1 */ { VXInstructionMnemonic::OR,               { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 3A2 */ { VXInstructionMnemonic::OR,               { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3A3 */ { VXInstructionMnemonic::ORPD,             { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3A4 */ { VXInstructionMnemonic::ORPS,             { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3A5 */ { VXInstructionMnemonic::OUT,              { OPI_Ib,   OPI_eAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 3A6 */ { VXInstructionMnemonic::OUT,              { OPI_Ib,   OPI_AL,   OPI_NONE, OPI_NONE }, 0 },
    /* 3A7 */ { VXInstructionMnemonic::OUT,              { OPI_DX,   OPI_AL,   OPI_NONE, OPI_NONE }, 0 },
    /* 3A8 */ { VXInstructionMnemonic::OUT,              { OPI_DX,   OPI_eAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 3A9 */ { VXInstructionMnemonic::OUTSB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 3AA */ { VXInstructionMnemonic::OUTSD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 3AB */ { VXInstructionMnemonic::OUTSW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 3AC */ { VXInstructionMnemonic::PABSB,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3AD */ { VXInstructionMnemonic::PABSB,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3AE */ { VXInstructionMnemonic::PABSD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3AF */ { VXInstructionMnemonic::PABSD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B0 */ { VXInstructionMnemonic::PABSW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B1 */ { VXInstructionMnemonic::PABSW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B2 */ { VXInstructionMnemonic::PACKSSDW,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B3 */ { VXInstructionMnemonic::PACKSSDW,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B4 */ { VXInstructionMnemonic::PACKSSWB,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B5 */ { VXInstructionMnemonic::PACKSSWB,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B6 */ { VXInstructionMnemonic::PACKUSDW,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B7 */ { VXInstructionMnemonic::PACKUSWB,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B8 */ { VXInstructionMnemonic::PACKUSWB,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3B9 */ { VXInstructionMnemonic::PADDB,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BA */ { VXInstructionMnemonic::PADDB,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BB */ { VXInstructionMnemonic::PADDD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BC */ { VXInstructionMnemonic::PADDD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BD */ { VXInstructionMnemonic::PADDQ,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BE */ { VXInstructionMnemonic::PADDQ,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3BF */ { VXInstructionMnemonic::PADDSB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C0 */ { VXInstructionMnemonic::PADDSB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C1 */ { VXInstructionMnemonic::PADDSW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C2 */ { VXInstructionMnemonic::PADDSW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C3 */ { VXInstructionMnemonic::PADDUSB,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C4 */ { VXInstructionMnemonic::PADDUSB,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C5 */ { VXInstructionMnemonic::PADDUSW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C6 */ { VXInstructionMnemonic::PADDUSW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C7 */ { VXInstructionMnemonic::PADDW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C8 */ { VXInstructionMnemonic::PADDW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3C9 */ { VXInstructionMnemonic::PALIGNR,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CA */ { VXInstructionMnemonic::PALIGNR,          { OPI_P,    OPI_Q,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CB */ { VXInstructionMnemonic::PAND,             { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CC */ { VXInstructionMnemonic::PAND,             { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CD */ { VXInstructionMnemonic::PANDN,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CE */ { VXInstructionMnemonic::PANDN,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3CF */ { VXInstructionMnemonic::PAVGB,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D0 */ { VXInstructionMnemonic::PAVGB,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D1 */ { VXInstructionMnemonic::PAVGUSB,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D2 */ { VXInstructionMnemonic::PAVGW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D3 */ { VXInstructionMnemonic::PAVGW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D4 */ { VXInstructionMnemonic::PBLENDVB,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D5 */ { VXInstructionMnemonic::PBLENDW,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D6 */ { VXInstructionMnemonic::PCLMULQDQ,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D7 */ { VXInstructionMnemonic::PCMPEQB,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D8 */ { VXInstructionMnemonic::PCMPEQB,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3D9 */ { VXInstructionMnemonic::PCMPEQD,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DA */ { VXInstructionMnemonic::PCMPEQD,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DB */ { VXInstructionMnemonic::PCMPEQQ,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DC */ { VXInstructionMnemonic::PCMPEQW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DD */ { VXInstructionMnemonic::PCMPEQW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DE */ { VXInstructionMnemonic::PCMPESTRI,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3DF */ { VXInstructionMnemonic::PCMPESTRM,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E0 */ { VXInstructionMnemonic::PCMPGTB,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E1 */ { VXInstructionMnemonic::PCMPGTB,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E2 */ { VXInstructionMnemonic::PCMPGTD,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E3 */ { VXInstructionMnemonic::PCMPGTD,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E4 */ { VXInstructionMnemonic::PCMPGTQ,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E5 */ { VXInstructionMnemonic::PCMPGTW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E6 */ { VXInstructionMnemonic::PCMPGTW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E7 */ { VXInstructionMnemonic::PCMPISTRI,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E8 */ { VXInstructionMnemonic::PCMPISTRM,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3E9 */ { VXInstructionMnemonic::PEXTRB,           { OPI_MbRv, OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 3EA */ { VXInstructionMnemonic::PEXTRD,           { OPI_Ed,   OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 3EB */ { VXInstructionMnemonic::PEXTRD,           { OPI_Ed,   OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 3EC */ { VXInstructionMnemonic::PEXTRQ,           { OPI_Eq,   OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 3ED */ { VXInstructionMnemonic::PEXTRW,           { OPI_Gd,   OPI_U,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 3EE */ { VXInstructionMnemonic::PEXTRW,           { OPI_Gd,   OPI_N,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3EF */ { VXInstructionMnemonic::PEXTRW,           { OPI_MwRd, OPI_V,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 3F0 */ { VXInstructionMnemonic::PF2ID,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F1 */ { VXInstructionMnemonic::PF2IW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F2 */ { VXInstructionMnemonic::PFACC,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F3 */ { VXInstructionMnemonic::PFADD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F4 */ { VXInstructionMnemonic::PFCMPEQ,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F5 */ { VXInstructionMnemonic::PFCMPGE,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F6 */ { VXInstructionMnemonic::PFCMPGT,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F7 */ { VXInstructionMnemonic::PFMAX,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F8 */ { VXInstructionMnemonic::PFMIN,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3F9 */ { VXInstructionMnemonic::PFMUL,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FA */ { VXInstructionMnemonic::PFNACC,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FB */ { VXInstructionMnemonic::PFPNACC,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FC */ { VXInstructionMnemonic::PFRCP,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FD */ { VXInstructionMnemonic::PFRCPIT1,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FE */ { VXInstructionMnemonic::PFRCPIT2,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 3FF */ { VXInstructionMnemonic::PFRSQIT1,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 400 */ { VXInstructionMnemonic::PFRSQRT,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 401 */ { VXInstructionMnemonic::PFSUB,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 402 */ { VXInstructionMnemonic::PFSUBR,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 403 */ { VXInstructionMnemonic::PHADDD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 404 */ { VXInstructionMnemonic::PHADDD,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 405 */ { VXInstructionMnemonic::PHADDSW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 406 */ { VXInstructionMnemonic::PHADDSW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 407 */ { VXInstructionMnemonic::PHADDW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 408 */ { VXInstructionMnemonic::PHADDW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 409 */ { VXInstructionMnemonic::PHMINPOSUW,       { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40A */ { VXInstructionMnemonic::PHSUBD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40B */ { VXInstructionMnemonic::PHSUBD,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40C */ { VXInstructionMnemonic::PHSUBSW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40D */ { VXInstructionMnemonic::PHSUBSW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40E */ { VXInstructionMnemonic::PHSUBW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 40F */ { VXInstructionMnemonic::PHSUBW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 410 */ { VXInstructionMnemonic::PI2FD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 411 */ { VXInstructionMnemonic::PI2FW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 412 */ { VXInstructionMnemonic::PINSRB,           { OPI_V,    OPI_MbRd, OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 413 */ { VXInstructionMnemonic::PINSRD,           { OPI_V,    OPI_Ed,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 414 */ { VXInstructionMnemonic::PINSRD,           { OPI_V,    OPI_Ed,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 415 */ { VXInstructionMnemonic::PINSRQ,           { OPI_V,    OPI_Eq,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 416 */ { VXInstructionMnemonic::PINSRW,           { OPI_V,    OPI_MwRy, OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 417 */ { VXInstructionMnemonic::PINSRW,           { OPI_P,    OPI_MwRy, OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 418 */ { VXInstructionMnemonic::PMADDUBSW,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 419 */ { VXInstructionMnemonic::PMADDUBSW,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41A */ { VXInstructionMnemonic::PMADDWD,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41B */ { VXInstructionMnemonic::PMADDWD,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41C */ { VXInstructionMnemonic::PMAXSB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41D */ { VXInstructionMnemonic::PMAXSD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41E */ { VXInstructionMnemonic::PMAXSW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 41F */ { VXInstructionMnemonic::PMAXSW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 420 */ { VXInstructionMnemonic::PMAXUB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 421 */ { VXInstructionMnemonic::PMAXUB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 422 */ { VXInstructionMnemonic::PMAXUD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 423 */ { VXInstructionMnemonic::PMAXUW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 424 */ { VXInstructionMnemonic::PMINSB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 425 */ { VXInstructionMnemonic::PMINSD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 426 */ { VXInstructionMnemonic::PMINSW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 427 */ { VXInstructionMnemonic::PMINSW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 428 */ { VXInstructionMnemonic::PMINUB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 429 */ { VXInstructionMnemonic::PMINUB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 42A */ { VXInstructionMnemonic::PMINUD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 42B */ { VXInstructionMnemonic::PMINUW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 42C */ { VXInstructionMnemonic::PMOVMSKB,         { OPI_Gd,   OPI_U,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 42D */ { VXInstructionMnemonic::PMOVMSKB,         { OPI_Gd,   OPI_N,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 42E */ { VXInstructionMnemonic::PMOVSXBD,         { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 42F */ { VXInstructionMnemonic::PMOVSXBQ,         { OPI_V,    OPI_MwU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 430 */ { VXInstructionMnemonic::PMOVSXBW,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 431 */ { VXInstructionMnemonic::PMOVSXDQ,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 432 */ { VXInstructionMnemonic::PMOVSXWD,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 433 */ { VXInstructionMnemonic::PMOVSXWQ,         { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 434 */ { VXInstructionMnemonic::PMOVZXBD,         { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 435 */ { VXInstructionMnemonic::PMOVZXBQ,         { OPI_V,    OPI_MwU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 436 */ { VXInstructionMnemonic::PMOVZXBW,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 437 */ { VXInstructionMnemonic::PMOVZXDQ,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 438 */ { VXInstructionMnemonic::PMOVZXWD,         { OPI_V,    OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 439 */ { VXInstructionMnemonic::PMOVZXWQ,         { OPI_V,    OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43A */ { VXInstructionMnemonic::PMULDQ,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43B */ { VXInstructionMnemonic::PMULHRSW,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43C */ { VXInstructionMnemonic::PMULHRSW,         { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43D */ { VXInstructionMnemonic::PMULHRW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43E */ { VXInstructionMnemonic::PMULHUW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 43F */ { VXInstructionMnemonic::PMULHUW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 440 */ { VXInstructionMnemonic::PMULHW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 441 */ { VXInstructionMnemonic::PMULHW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 442 */ { VXInstructionMnemonic::PMULLD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 443 */ { VXInstructionMnemonic::PMULLW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 444 */ { VXInstructionMnemonic::PMULLW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 445 */ { VXInstructionMnemonic::PMULUDQ,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 446 */ { VXInstructionMnemonic::PMULUDQ,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 447 */ { VXInstructionMnemonic::POP,              { OPI_R5v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 448 */ { VXInstructionMnemonic::POP,              { OPI_R4v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 449 */ { VXInstructionMnemonic::POP,              { OPI_R6v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 44A */ { VXInstructionMnemonic::POP,              { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 44B */ { VXInstructionMnemonic::POP,              { OPI_R7v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 44C */ { VXInstructionMnemonic::POP,              { OPI_R3v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 44D */ { VXInstructionMnemonic::POP,              { OPI_DS,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 44E */ { VXInstructionMnemonic::POP,              { OPI_GS,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 44F */ { VXInstructionMnemonic::POP,              { OPI_ES,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 450 */ { VXInstructionMnemonic::POP,              { OPI_SS,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 451 */ { VXInstructionMnemonic::POP,              { OPI_R1v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 452 */ { VXInstructionMnemonic::POP,              { OPI_R2v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 453 */ { VXInstructionMnemonic::POP,              { OPI_FS,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 454 */ { VXInstructionMnemonic::POP,              { OPI_R0v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 455 */ { VXInstructionMnemonic::POPA,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_INVALID_64 },
    /* 456 */ { VXInstructionMnemonic::POPAD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_INVALID_64 },
    /* 457 */ { VXInstructionMnemonic::POPCNT,           { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 458 */ { VXInstructionMnemonic::POPFD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 459 */ { VXInstructionMnemonic::POPFQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 45A */ { VXInstructionMnemonic::POPFQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 45B */ { VXInstructionMnemonic::POPFW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 45C */ { VXInstructionMnemonic::POR,              { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 45D */ { VXInstructionMnemonic::POR,              { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 45E */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 45F */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 460 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 461 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 462 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 463 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 464 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 465 */ { VXInstructionMnemonic::PREFETCH,         { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 466 */ { VXInstructionMnemonic::PREFETCHNTA,      { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 467 */ { VXInstructionMnemonic::PREFETCHT0,       { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 468 */ { VXInstructionMnemonic::PREFETCHT1,       { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 469 */ { VXInstructionMnemonic::PREFETCHT2,       { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46A */ { VXInstructionMnemonic::PSADBW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46B */ { VXInstructionMnemonic::PSADBW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46C */ { VXInstructionMnemonic::PSHUFB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46D */ { VXInstructionMnemonic::PSHUFB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46E */ { VXInstructionMnemonic::PSHUFD,           { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 46F */ { VXInstructionMnemonic::PSHUFHW,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 470 */ { VXInstructionMnemonic::PSHUFLW,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 471 */ { VXInstructionMnemonic::PSHUFW,           { OPI_P,    OPI_Q,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 472 */ { VXInstructionMnemonic::PSIGNB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 473 */ { VXInstructionMnemonic::PSIGNB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 474 */ { VXInstructionMnemonic::PSIGND,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 475 */ { VXInstructionMnemonic::PSIGND,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 476 */ { VXInstructionMnemonic::PSIGNW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 477 */ { VXInstructionMnemonic::PSIGNW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 478 */ { VXInstructionMnemonic::PSLLD,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 479 */ { VXInstructionMnemonic::PSLLD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 47A */ { VXInstructionMnemonic::PSLLD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 47B */ { VXInstructionMnemonic::PSLLD,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 47C */ { VXInstructionMnemonic::PSLLDQ,           { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 47D */ { VXInstructionMnemonic::PSLLQ,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 47E */ { VXInstructionMnemonic::PSLLQ,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 47F */ { VXInstructionMnemonic::PSLLQ,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 480 */ { VXInstructionMnemonic::PSLLQ,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 481 */ { VXInstructionMnemonic::PSLLW,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 482 */ { VXInstructionMnemonic::PSLLW,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 483 */ { VXInstructionMnemonic::PSLLW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 484 */ { VXInstructionMnemonic::PSLLW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 485 */ { VXInstructionMnemonic::PSRAD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 486 */ { VXInstructionMnemonic::PSRAD,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 487 */ { VXInstructionMnemonic::PSRAD,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 488 */ { VXInstructionMnemonic::PSRAD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 489 */ { VXInstructionMnemonic::PSRAW,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 48A */ { VXInstructionMnemonic::PSRAW,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 48B */ { VXInstructionMnemonic::PSRAW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 48C */ { VXInstructionMnemonic::PSRAW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 48D */ { VXInstructionMnemonic::PSRLD,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 48E */ { VXInstructionMnemonic::PSRLD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 48F */ { VXInstructionMnemonic::PSRLD,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 490 */ { VXInstructionMnemonic::PSRLD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 491 */ { VXInstructionMnemonic::PSRLDQ,           { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 492 */ { VXInstructionMnemonic::PSRLQ,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 493 */ { VXInstructionMnemonic::PSRLQ,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 494 */ { VXInstructionMnemonic::PSRLQ,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 495 */ { VXInstructionMnemonic::PSRLQ,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 496 */ { VXInstructionMnemonic::PSRLW,            { OPI_U,    OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 497 */ { VXInstructionMnemonic::PSRLW,            { OPI_N,    OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 498 */ { VXInstructionMnemonic::PSRLW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 499 */ { VXInstructionMnemonic::PSRLW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49A */ { VXInstructionMnemonic::PSUBB,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49B */ { VXInstructionMnemonic::PSUBB,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49C */ { VXInstructionMnemonic::PSUBD,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49D */ { VXInstructionMnemonic::PSUBD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49E */ { VXInstructionMnemonic::PSUBQ,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 49F */ { VXInstructionMnemonic::PSUBQ,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A0 */ { VXInstructionMnemonic::PSUBSB,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A1 */ { VXInstructionMnemonic::PSUBSB,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A2 */ { VXInstructionMnemonic::PSUBSW,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A3 */ { VXInstructionMnemonic::PSUBSW,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A4 */ { VXInstructionMnemonic::PSUBUSB,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A5 */ { VXInstructionMnemonic::PSUBUSB,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A6 */ { VXInstructionMnemonic::PSUBUSW,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A7 */ { VXInstructionMnemonic::PSUBUSW,          { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A8 */ { VXInstructionMnemonic::PSUBW,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4A9 */ { VXInstructionMnemonic::PSUBW,            { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AA */ { VXInstructionMnemonic::PSWAPD,           { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AB */ { VXInstructionMnemonic::PTEST,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AC */ { VXInstructionMnemonic::PUNPCKHBW,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AD */ { VXInstructionMnemonic::PUNPCKHBW,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AE */ { VXInstructionMnemonic::PUNPCKHDQ,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4AF */ { VXInstructionMnemonic::PUNPCKHDQ,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B0 */ { VXInstructionMnemonic::PUNPCKHQDQ,       { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B1 */ { VXInstructionMnemonic::PUNPCKHWD,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B2 */ { VXInstructionMnemonic::PUNPCKHWD,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B3 */ { VXInstructionMnemonic::PUNPCKLBW,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B4 */ { VXInstructionMnemonic::PUNPCKLBW,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B5 */ { VXInstructionMnemonic::PUNPCKLDQ,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B6 */ { VXInstructionMnemonic::PUNPCKLDQ,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B7 */ { VXInstructionMnemonic::PUNPCKLQDQ,       { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B8 */ { VXInstructionMnemonic::PUNPCKLWD,        { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4B9 */ { VXInstructionMnemonic::PUNPCKLWD,        { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4BA */ { VXInstructionMnemonic::PUSH,             { OPI_DS,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 4BB */ { VXInstructionMnemonic::PUSH,             { OPI_ES,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 4BC */ { VXInstructionMnemonic::PUSH,             { OPI_Ib,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 4BD */ { VXInstructionMnemonic::PUSH,             { OPI_SS,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 4BE */ { VXInstructionMnemonic::PUSH,             { OPI_CS,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 4BF */ { VXInstructionMnemonic::PUSH,             { OPI_R3v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C0 */ { VXInstructionMnemonic::PUSH,             { OPI_R4v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C1 */ { VXInstructionMnemonic::PUSH,             { OPI_R5v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C2 */ { VXInstructionMnemonic::PUSH,             { OPI_R6v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C3 */ { VXInstructionMnemonic::PUSH,             { OPI_R7v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C4 */ { VXInstructionMnemonic::PUSH,             { OPI_R2v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C5 */ { VXInstructionMnemonic::PUSH,             { OPI_R0v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4C6 */ { VXInstructionMnemonic::PUSH,             { OPI_FS,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4C7 */ { VXInstructionMnemonic::PUSH,             { OPI_GS,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4C8 */ { VXInstructionMnemonic::PUSH,             { OPI_Iz,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_DEFAULT_64 },
    /* 4C9 */ { VXInstructionMnemonic::PUSH,             { OPI_Ev,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4CA */ { VXInstructionMnemonic::PUSH,             { OPI_R1v,  OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 4CB */ { VXInstructionMnemonic::PUSHA,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_INVALID_64 },
    /* 4CC */ { VXInstructionMnemonic::PUSHAD,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_INVALID_64 },
    /* 4CD */ { VXInstructionMnemonic::PUSHFD,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 4CE */ { VXInstructionMnemonic::PUSHFQ,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_DEFAULT_64 },
    /* 4CF */ { VXInstructionMnemonic::PUSHFQ,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_DEFAULT_64 },
    /* 4D0 */ { VXInstructionMnemonic::PUSHFW,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_DEFAULT_64 },
    /* 4D1 */ { VXInstructionMnemonic::PUSHFW,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE },
    /* 4D2 */ { VXInstructionMnemonic::PXOR,             { OPI_P,    OPI_Q,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D3 */ { VXInstructionMnemonic::PXOR,             { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D4 */ { VXInstructionMnemonic::RCL,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D5 */ { VXInstructionMnemonic::RCL,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D6 */ { VXInstructionMnemonic::RCL,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D7 */ { VXInstructionMnemonic::RCL,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D8 */ { VXInstructionMnemonic::RCL,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4D9 */ { VXInstructionMnemonic::RCL,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DA */ { VXInstructionMnemonic::RCPPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DB */ { VXInstructionMnemonic::RCPSS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DC */ { VXInstructionMnemonic::RCR,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DD */ { VXInstructionMnemonic::RCR,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DE */ { VXInstructionMnemonic::RCR,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4DF */ { VXInstructionMnemonic::RCR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4E0 */ { VXInstructionMnemonic::RCR,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4E1 */ { VXInstructionMnemonic::RCR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4E2 */ { VXInstructionMnemonic::RDMSR,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E3 */ { VXInstructionMnemonic::RDPMC,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E4 */ { VXInstructionMnemonic::RDRAND,           { OPI_R,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4E5 */ { VXInstructionMnemonic::RDTSC,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E6 */ { VXInstructionMnemonic::RDTSCP,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E7 */ { VXInstructionMnemonic::REP,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E8 */ { VXInstructionMnemonic::REPNE,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4E9 */ { VXInstructionMnemonic::RETF,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4EA */ { VXInstructionMnemonic::RETF,             { OPI_Iw,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4EB */ { VXInstructionMnemonic::RETN,             { OPI_Iw,   OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4EC */ { VXInstructionMnemonic::RETN,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4ED */ { VXInstructionMnemonic::ROL,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4EE */ { VXInstructionMnemonic::ROL,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4EF */ { VXInstructionMnemonic::ROL,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F0 */ { VXInstructionMnemonic::ROL,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F1 */ { VXInstructionMnemonic::ROL,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F2 */ { VXInstructionMnemonic::ROL,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F3 */ { VXInstructionMnemonic::ROR,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F4 */ { VXInstructionMnemonic::ROR,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F5 */ { VXInstructionMnemonic::ROR,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F6 */ { VXInstructionMnemonic::ROR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F7 */ { VXInstructionMnemonic::ROR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F8 */ { VXInstructionMnemonic::ROR,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4F9 */ { VXInstructionMnemonic::ROUNDPD,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4FA */ { VXInstructionMnemonic::ROUNDPS,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4FB */ { VXInstructionMnemonic::ROUNDSD,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4FC */ { VXInstructionMnemonic::ROUNDSS,          { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4FD */ { VXInstructionMnemonic::RSM,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 4FE */ { VXInstructionMnemonic::RSQRTPS,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 4FF */ { VXInstructionMnemonic::RSQRTSS,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 500 */ { VXInstructionMnemonic::SAHF,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 501 */ { VXInstructionMnemonic::SALC,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_INVALID_64 },
    /* 502 */ { VXInstructionMnemonic::SAR,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 503 */ { VXInstructionMnemonic::SAR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 504 */ { VXInstructionMnemonic::SAR,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 505 */ { VXInstructionMnemonic::SAR,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 506 */ { VXInstructionMnemonic::SAR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 507 */ { VXInstructionMnemonic::SAR,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 508 */ { VXInstructionMnemonic::SBB,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 509 */ { VXInstructionMnemonic::SBB,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50A */ { VXInstructionMnemonic::SBB,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50B */ { VXInstructionMnemonic::SBB,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50C */ { VXInstructionMnemonic::SBB,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50D */ { VXInstructionMnemonic::SBB,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50E */ { VXInstructionMnemonic::SBB,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 50F */ { VXInstructionMnemonic::SBB,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 510 */ { VXInstructionMnemonic::SBB,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 511 */ { VXInstructionMnemonic::SBB,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 512 */ { VXInstructionMnemonic::SCASB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 513 */ { VXInstructionMnemonic::SCASD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 514 */ { VXInstructionMnemonic::SCASQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 515 */ { VXInstructionMnemonic::SCASW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 516 */ { VXInstructionMnemonic::SETA,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 517 */ { VXInstructionMnemonic::SETAE,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 518 */ { VXInstructionMnemonic::SETB,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 519 */ { VXInstructionMnemonic::SETBE,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51A */ { VXInstructionMnemonic::SETG,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51B */ { VXInstructionMnemonic::SETGE,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51C */ { VXInstructionMnemonic::SETL,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51D */ { VXInstructionMnemonic::SETLE,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51E */ { VXInstructionMnemonic::SETNO,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 51F */ { VXInstructionMnemonic::SETNP,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 520 */ { VXInstructionMnemonic::SETNS,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 521 */ { VXInstructionMnemonic::SETNZ,            { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 522 */ { VXInstructionMnemonic::SETO,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 523 */ { VXInstructionMnemonic::SETP,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 524 */ { VXInstructionMnemonic::SETS,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 525 */ { VXInstructionMnemonic::SETZ,             { OPI_Eb,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 526 */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 527 */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 528 */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 529 */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 52A */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 52B */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 52C */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 52D */ { VXInstructionMnemonic::SFENCE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 52E */ { VXInstructionMnemonic::SGDT,             { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 52F */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 530 */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 531 */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 532 */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 533 */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 534 */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 535 */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 536 */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 537 */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 538 */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 539 */ { VXInstructionMnemonic::SHL,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53A */ { VXInstructionMnemonic::SHL,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53B */ { VXInstructionMnemonic::SHLD,             { OPI_Ev,   OPI_Gv,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53C */ { VXInstructionMnemonic::SHLD,             { OPI_Ev,   OPI_Gv,   OPI_CL,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53D */ { VXInstructionMnemonic::SHR,              { OPI_Eb,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53E */ { VXInstructionMnemonic::SHR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 53F */ { VXInstructionMnemonic::SHR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 540 */ { VXInstructionMnemonic::SHR,              { OPI_Ev,   OPI_CL,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 541 */ { VXInstructionMnemonic::SHR,              { OPI_Ev,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 542 */ { VXInstructionMnemonic::SHR,              { OPI_Eb,   OPI_I1,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 543 */ { VXInstructionMnemonic::SHRD,             { OPI_Ev,   OPI_Gv,   OPI_CL,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 544 */ { VXInstructionMnemonic::SHRD,             { OPI_Ev,   OPI_Gv,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 545 */ { VXInstructionMnemonic::SHUFPD,           { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 546 */ { VXInstructionMnemonic::SHUFPS,           { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 547 */ { VXInstructionMnemonic::SIDT,             { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 548 */ { VXInstructionMnemonic::SKINIT,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 549 */ { VXInstructionMnemonic::SLDT,             { OPI_MwRv, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54A */ { VXInstructionMnemonic::SMSW,             { OPI_MwRv, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54B */ { VXInstructionMnemonic::SMSW,             { OPI_MwRv, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54C */ { VXInstructionMnemonic::SQRTPD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54D */ { VXInstructionMnemonic::SQRTPS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54E */ { VXInstructionMnemonic::SQRTSD,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 54F */ { VXInstructionMnemonic::SQRTSS,           { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 550 */ { VXInstructionMnemonic::STC,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 551 */ { VXInstructionMnemonic::STD,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 552 */ { VXInstructionMnemonic::STGI,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 553 */ { VXInstructionMnemonic::STI,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 554 */ { VXInstructionMnemonic::STMXCSR,          { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 555 */ { VXInstructionMnemonic::STOSB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 556 */ { VXInstructionMnemonic::STOSD,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 557 */ { VXInstructionMnemonic::STOSQ,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 558 */ { VXInstructionMnemonic::STOSW,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REP_PREFIX |IDF_ACCEPTS_SEGMENT_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 559 */ { VXInstructionMnemonic::STR,              { OPI_MwRv, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 55A */ { VXInstructionMnemonic::SUB,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 55B */ { VXInstructionMnemonic::SUB,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 55C */ { VXInstructionMnemonic::SUB,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 55D */ { VXInstructionMnemonic::SUB,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 55E */ { VXInstructionMnemonic::SUB,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 55F */ { VXInstructionMnemonic::SUB,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 560 */ { VXInstructionMnemonic::SUB,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 561 */ { VXInstructionMnemonic::SUB,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 562 */ { VXInstructionMnemonic::SUB,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 563 */ { VXInstructionMnemonic::SUB,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 564 */ { VXInstructionMnemonic::SUBPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 565 */ { VXInstructionMnemonic::SUBPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 566 */ { VXInstructionMnemonic::SUBSD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 567 */ { VXInstructionMnemonic::SUBSS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 568 */ { VXInstructionMnemonic::SWAPGS,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 569 */ { VXInstructionMnemonic::SYSCALL,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56A */ { VXInstructionMnemonic::SYSENTER,         { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56B */ { VXInstructionMnemonic::SYSENTER,         { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56C */ { VXInstructionMnemonic::SYSEXIT,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56D */ { VXInstructionMnemonic::SYSEXIT,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56E */ { VXInstructionMnemonic::SYSRET,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 56F */ { VXInstructionMnemonic::TEST,             { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 570 */ { VXInstructionMnemonic::TEST,             { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 571 */ { VXInstructionMnemonic::TEST,             { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 572 */ { VXInstructionMnemonic::TEST,             { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 573 */ { VXInstructionMnemonic::TEST,             { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 574 */ { VXInstructionMnemonic::TEST,             { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 575 */ { VXInstructionMnemonic::TEST,             { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 576 */ { VXInstructionMnemonic::TEST,             { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 577 */ { VXInstructionMnemonic::UCOMISD,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 578 */ { VXInstructionMnemonic::UCOMISS,          { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 579 */ { VXInstructionMnemonic::UD2,              { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 57A */ { VXInstructionMnemonic::UNPCKHPD,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 57B */ { VXInstructionMnemonic::UNPCKHPS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 57C */ { VXInstructionMnemonic::UNPCKLPD,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 57D */ { VXInstructionMnemonic::UNPCKLPS,         { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 57E */ { VXInstructionMnemonic::VADDPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 57F */ { VXInstructionMnemonic::VADDPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 580 */ { VXInstructionMnemonic::VADDSD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 581 */ { VXInstructionMnemonic::VADDSS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 582 */ { VXInstructionMnemonic::VADDSUBPD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 583 */ { VXInstructionMnemonic::VADDSUBPS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 584 */ { VXInstructionMnemonic::VAESDEC,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 585 */ { VXInstructionMnemonic::VAESDECLAST,      { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 586 */ { VXInstructionMnemonic::VAESENC,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 587 */ { VXInstructionMnemonic::VAESENCLAST,      { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 588 */ { VXInstructionMnemonic::VAESIMC,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 589 */ { VXInstructionMnemonic::VAESKEYGENASSIST, { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 58A */ { VXInstructionMnemonic::VANDNPD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 58B */ { VXInstructionMnemonic::VANDNPS,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 58C */ { VXInstructionMnemonic::VANDPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 58D */ { VXInstructionMnemonic::VANDPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 58E */ { VXInstructionMnemonic::VBLENDPD,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 58F */ { VXInstructionMnemonic::VBLENDPS,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 590 */ { VXInstructionMnemonic::VBLENDVPD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Lx },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 591 */ { VXInstructionMnemonic::VBLENDVPS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Lx },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 592 */ { VXInstructionMnemonic::VBROADCASTSD,     { OPI_Vqq,  OPI_Mq,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 593 */ { VXInstructionMnemonic::VBROADCASTSS,     { OPI_V,    OPI_Md,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 594 */ { VXInstructionMnemonic::VCMPPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 595 */ { VXInstructionMnemonic::VCMPPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 596 */ { VXInstructionMnemonic::VCMPSD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 597 */ { VXInstructionMnemonic::VCMPSS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 598 */ { VXInstructionMnemonic::VCOMISD,          { OPI_Vsd,  OPI_Wsd,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 599 */ { VXInstructionMnemonic::VCOMISS,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 59A */ { VXInstructionMnemonic::VCVTDQ2PD,        { OPI_Vx,   OPI_Wdq,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 59B */ { VXInstructionMnemonic::VCVTDQ2PS,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 59C */ { VXInstructionMnemonic::VCVTPD2DQ,        { OPI_Vdq,  OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 59D */ { VXInstructionMnemonic::VCVTPD2PS,        { OPI_Vdq,  OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 59E */ { VXInstructionMnemonic::VCVTPS2DQ,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 59F */ { VXInstructionMnemonic::VCVTPS2PD,        { OPI_Vx,   OPI_Wdq,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5A0 */ { VXInstructionMnemonic::VCVTSD2SI,        { OPI_Gy,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A1 */ { VXInstructionMnemonic::VCVTSD2SS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A2 */ { VXInstructionMnemonic::VCVTSI2SD,        { OPI_Vx,   OPI_Hx,   OPI_Ey,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A3 */ { VXInstructionMnemonic::VCVTSI2SS,        { OPI_Vx,   OPI_Hx,   OPI_Ey,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A4 */ { VXInstructionMnemonic::VCVTSS2SD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A5 */ { VXInstructionMnemonic::VCVTSS2SI,        { OPI_Gy,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A6 */ { VXInstructionMnemonic::VCVTTPD2DQ,       { OPI_Vdq,  OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5A7 */ { VXInstructionMnemonic::VCVTTPS2DQ,       { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5A8 */ { VXInstructionMnemonic::VCVTTSD2SI,       { OPI_Gy,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5A9 */ { VXInstructionMnemonic::VCVTTSS2SI,       { OPI_Gy,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5AA */ { VXInstructionMnemonic::VDIVPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5AB */ { VXInstructionMnemonic::VDIVPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5AC */ { VXInstructionMnemonic::VDIVSD,           { OPI_Vx,   OPI_Hx,   OPI_MqU,  OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5AD */ { VXInstructionMnemonic::VDIVSS,           { OPI_Vx,   OPI_Hx,   OPI_MdU,  OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5AE */ { VXInstructionMnemonic::VDPPD,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5AF */ { VXInstructionMnemonic::VDPPS,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B0 */ { VXInstructionMnemonic::VERR,             { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5B1 */ { VXInstructionMnemonic::VERW,             { OPI_Ew,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5B2 */ { VXInstructionMnemonic::VEXTRACTF128,     { OPI_Wdq,  OPI_Vqq,  OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B3 */ { VXInstructionMnemonic::VEXTRACTPS,       { OPI_MdRy, OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5B4 */ { VXInstructionMnemonic::VHADDPD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B5 */ { VXInstructionMnemonic::VHADDPS,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B6 */ { VXInstructionMnemonic::VHSUBPD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B7 */ { VXInstructionMnemonic::VHSUBPS,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B8 */ { VXInstructionMnemonic::VINSERTF128,      { OPI_Vqq,  OPI_Hqq,  OPI_Wdq,  OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5B9 */ { VXInstructionMnemonic::VINSERTPS,        { OPI_Vx,   OPI_Hx,   OPI_Md,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5BA */ { VXInstructionMnemonic::VLDDQU,           { OPI_Vx,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5BB */ { VXInstructionMnemonic::VMASKMOVDQU,      { OPI_Vx,   OPI_Ux,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5BC */ { VXInstructionMnemonic::VMASKMOVPD,       { OPI_V,    OPI_H,    OPI_M,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5BD */ { VXInstructionMnemonic::VMASKMOVPD,       { OPI_M,    OPI_H,    OPI_V,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5BE */ { VXInstructionMnemonic::VMASKMOVPS,       { OPI_M,    OPI_H,    OPI_V,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5BF */ { VXInstructionMnemonic::VMASKMOVPS,       { OPI_V,    OPI_H,    OPI_M,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5C0 */ { VXInstructionMnemonic::VMAXPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5C1 */ { VXInstructionMnemonic::VMAXPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5C2 */ { VXInstructionMnemonic::VMAXSD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5C3 */ { VXInstructionMnemonic::VMAXSS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5C4 */ { VXInstructionMnemonic::VMCALL,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 5C5 */ { VXInstructionMnemonic::VMCLEAR,          { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5C6 */ { VXInstructionMnemonic::VMINPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5C7 */ { VXInstructionMnemonic::VMINPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5C8 */ { VXInstructionMnemonic::VMINSD,           { OPI_Vx,   OPI_Hx,   OPI_MqU,  OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5C9 */ { VXInstructionMnemonic::VMINSS,           { OPI_Vx,   OPI_Hx,   OPI_MdU,  OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5CA */ { VXInstructionMnemonic::VMLAUNCH,         { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 5CB */ { VXInstructionMnemonic::VMLOAD,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 5CC */ { VXInstructionMnemonic::VMMCALL,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 5CD */ { VXInstructionMnemonic::VMOVAPD,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5CE */ { VXInstructionMnemonic::VMOVAPD,          { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5CF */ { VXInstructionMnemonic::VMOVAPS,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5D0 */ { VXInstructionMnemonic::VMOVAPS,          { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5D1 */ { VXInstructionMnemonic::VMOVD,            { OPI_Vx,   OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D2 */ { VXInstructionMnemonic::VMOVD,            { OPI_Ey,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D3 */ { VXInstructionMnemonic::VMOVD,            { OPI_Vx,   OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D4 */ { VXInstructionMnemonic::VMOVD,            { OPI_Ey,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D5 */ { VXInstructionMnemonic::VMOVDDUP,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D6 */ { VXInstructionMnemonic::VMOVDDUP,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5D7 */ { VXInstructionMnemonic::VMOVDQA,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5D8 */ { VXInstructionMnemonic::VMOVDQA,          { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5D9 */ { VXInstructionMnemonic::VMOVDQU,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5DA */ { VXInstructionMnemonic::VMOVHLPS,         { OPI_Vx,   OPI_Ux,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5DB */ { VXInstructionMnemonic::VMOVHPD,          { OPI_Vx,   OPI_Hx,   OPI_M,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5DC */ { VXInstructionMnemonic::VMOVHPD,          { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5DD */ { VXInstructionMnemonic::VMOVHPS,          { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5DE */ { VXInstructionMnemonic::VMOVHPS,          { OPI_Vx,   OPI_Hx,   OPI_M,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5DF */ { VXInstructionMnemonic::VMOVLHPS,         { OPI_Vx,   OPI_Hx,   OPI_Ux,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5E0 */ { VXInstructionMnemonic::VMOVLPD,          { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5E1 */ { VXInstructionMnemonic::VMOVLPD,          { OPI_Vx,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5E2 */ { VXInstructionMnemonic::VMOVLPS,          { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5E3 */ { VXInstructionMnemonic::VMOVLPS,          { OPI_Vx,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5E4 */ { VXInstructionMnemonic::VMOVMSKPD,        { OPI_Gd,   OPI_Ux,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5E5 */ { VXInstructionMnemonic::VMOVMSKPS,        { OPI_Gd,   OPI_Ux,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 5E6 */ { VXInstructionMnemonic::VMOVNTDQ,         { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5E7 */ { VXInstructionMnemonic::VMOVNTDQA,        { OPI_Vx,   OPI_M,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5E8 */ { VXInstructionMnemonic::VMOVNTPD,         { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5E9 */ { VXInstructionMnemonic::VMOVNTPS,         { OPI_M,    OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5EA */ { VXInstructionMnemonic::VMOVQ,            { OPI_Eq,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5EB */ { VXInstructionMnemonic::VMOVQ,            { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5EC */ { VXInstructionMnemonic::VMOVQ,            { OPI_Vx,   OPI_Eq,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5ED */ { VXInstructionMnemonic::VMOVQ,            { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5EE */ { VXInstructionMnemonic::VMOVSD,           { OPI_V,    OPI_Mq,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5EF */ { VXInstructionMnemonic::VMOVSD,           { OPI_V,    OPI_H,    OPI_U,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F0 */ { VXInstructionMnemonic::VMOVSD,           { OPI_U,    OPI_H,    OPI_V,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F1 */ { VXInstructionMnemonic::VMOVSD,           { OPI_Mq,   OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F2 */ { VXInstructionMnemonic::VMOVSHDUP,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5F3 */ { VXInstructionMnemonic::VMOVSHDUP,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5F4 */ { VXInstructionMnemonic::VMOVSLDUP,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5F5 */ { VXInstructionMnemonic::VMOVSLDUP,        { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5F6 */ { VXInstructionMnemonic::VMOVSS,           { OPI_V,    OPI_H,    OPI_U,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F7 */ { VXInstructionMnemonic::VMOVSS,           { OPI_U,    OPI_H,    OPI_V,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F8 */ { VXInstructionMnemonic::VMOVSS,           { OPI_V,    OPI_Md,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5F9 */ { VXInstructionMnemonic::VMOVSS,           { OPI_Md,   OPI_V,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 5FA */ { VXInstructionMnemonic::VMOVUPD,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5FB */ { VXInstructionMnemonic::VMOVUPD,          { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5FC */ { VXInstructionMnemonic::VMOVUPS,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5FD */ { VXInstructionMnemonic::VMOVUPS,          { OPI_Wx,   OPI_Vx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5FE */ { VXInstructionMnemonic::VMPSADBW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 5FF */ { VXInstructionMnemonic::VMPTRLD,          { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 600 */ { VXInstructionMnemonic::VMPTRST,          { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 601 */ { VXInstructionMnemonic::VMREAD,           { OPI_Ey,   OPI_Gy,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 602 */ { VXInstructionMnemonic::VMRESUME,         { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 603 */ { VXInstructionMnemonic::VMRUN,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 604 */ { VXInstructionMnemonic::VMSAVE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 605 */ { VXInstructionMnemonic::VMULPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 606 */ { VXInstructionMnemonic::VMULPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 607 */ { VXInstructionMnemonic::VMULSD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 608 */ { VXInstructionMnemonic::VMULSS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 609 */ { VXInstructionMnemonic::VMWRITE,          { OPI_Gy,   OPI_Ey,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 60A */ { VXInstructionMnemonic::VMXOFF,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 60B */ { VXInstructionMnemonic::VMXON,            { OPI_Mq,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 60C */ { VXInstructionMnemonic::VORPD,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 60D */ { VXInstructionMnemonic::VORPS,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 60E */ { VXInstructionMnemonic::VPABSB,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 60F */ { VXInstructionMnemonic::VPABSD,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 610 */ { VXInstructionMnemonic::VPABSW,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 611 */ { VXInstructionMnemonic::VPACKSSDW,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 612 */ { VXInstructionMnemonic::VPACKSSWB,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 613 */ { VXInstructionMnemonic::VPACKUSDW,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 614 */ { VXInstructionMnemonic::VPACKUSWB,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 615 */ { VXInstructionMnemonic::VPADDB,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 616 */ { VXInstructionMnemonic::VPADDD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 617 */ { VXInstructionMnemonic::VPADDQ,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 618 */ { VXInstructionMnemonic::VPADDSB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 619 */ { VXInstructionMnemonic::VPADDSW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 61A */ { VXInstructionMnemonic::VPADDUSB,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 61B */ { VXInstructionMnemonic::VPADDUSW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 61C */ { VXInstructionMnemonic::VPADDW,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 61D */ { VXInstructionMnemonic::VPALIGNR,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 61E */ { VXInstructionMnemonic::VPAND,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 61F */ { VXInstructionMnemonic::VPANDN,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 620 */ { VXInstructionMnemonic::VPAVGB,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 621 */ { VXInstructionMnemonic::VPAVGW,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 622 */ { VXInstructionMnemonic::VPBLENDVB,        { OPI_V,    OPI_H,    OPI_W,    OPI_L },    IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 623 */ { VXInstructionMnemonic::VPBLENDW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 624 */ { VXInstructionMnemonic::VPCLMULQDQ,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 625 */ { VXInstructionMnemonic::VPCMPEQB,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 626 */ { VXInstructionMnemonic::VPCMPEQD,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 627 */ { VXInstructionMnemonic::VPCMPEQQ,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 628 */ { VXInstructionMnemonic::VPCMPEQW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 629 */ { VXInstructionMnemonic::VPCMPESTRI,       { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62A */ { VXInstructionMnemonic::VPCMPESTRM,       { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62B */ { VXInstructionMnemonic::VPCMPGTB,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62C */ { VXInstructionMnemonic::VPCMPGTD,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62D */ { VXInstructionMnemonic::VPCMPGTQ,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62E */ { VXInstructionMnemonic::VPCMPGTW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 62F */ { VXInstructionMnemonic::VPCMPISTRI,       { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 630 */ { VXInstructionMnemonic::VPCMPISTRM,       { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 631 */ { VXInstructionMnemonic::VPERM2F128,       { OPI_Vqq,  OPI_Hqq,  OPI_Wqq,  OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 632 */ { VXInstructionMnemonic::VPERMILPD,        { OPI_V,    OPI_W,    OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 633 */ { VXInstructionMnemonic::VPERMILPD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 634 */ { VXInstructionMnemonic::VPERMILPS,        { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 635 */ { VXInstructionMnemonic::VPERMILPS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 636 */ { VXInstructionMnemonic::VPEXTRB,          { OPI_MbRv, OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 637 */ { VXInstructionMnemonic::VPEXTRD,          { OPI_Ed,   OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 638 */ { VXInstructionMnemonic::VPEXTRD,          { OPI_Ed,   OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 639 */ { VXInstructionMnemonic::VPEXTRQ,          { OPI_Eq,   OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 63A */ { VXInstructionMnemonic::VPEXTRW,          { OPI_MwRd, OPI_Vx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 63B */ { VXInstructionMnemonic::VPEXTRW,          { OPI_Gd,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXB },
    /* 63C */ { VXInstructionMnemonic::VPHADDD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 63D */ { VXInstructionMnemonic::VPHADDSW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 63E */ { VXInstructionMnemonic::VPHADDW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 63F */ { VXInstructionMnemonic::VPHMINPOSUW,      { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 640 */ { VXInstructionMnemonic::VPHSUBD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 641 */ { VXInstructionMnemonic::VPHSUBSW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 642 */ { VXInstructionMnemonic::VPHSUBW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 643 */ { VXInstructionMnemonic::VPINSRB,          { OPI_V,    OPI_H,    OPI_MbRd, OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 644 */ { VXInstructionMnemonic::VPINSRD,          { OPI_V,    OPI_H,    OPI_Ed,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 645 */ { VXInstructionMnemonic::VPINSRD,          { OPI_V,    OPI_H,    OPI_Ed,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 646 */ { VXInstructionMnemonic::VPINSRQ,          { OPI_V,    OPI_H,    OPI_Eq,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 647 */ { VXInstructionMnemonic::VPINSRW,          { OPI_Vx,   OPI_MwRy, OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_DEFAULT_64 },
    /* 648 */ { VXInstructionMnemonic::VPMADDUBSW,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 649 */ { VXInstructionMnemonic::VPMADDWD,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64A */ { VXInstructionMnemonic::VPMAXSB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64B */ { VXInstructionMnemonic::VPMAXSD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64C */ { VXInstructionMnemonic::VPMAXSW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64D */ { VXInstructionMnemonic::VPMAXUB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64E */ { VXInstructionMnemonic::VPMAXUD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 64F */ { VXInstructionMnemonic::VPMAXUW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 650 */ { VXInstructionMnemonic::VPMINSB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 651 */ { VXInstructionMnemonic::VPMINSD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 652 */ { VXInstructionMnemonic::VPMINSW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 653 */ { VXInstructionMnemonic::VPMINUB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 654 */ { VXInstructionMnemonic::VPMINUD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 655 */ { VXInstructionMnemonic::VPMINUW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 656 */ { VXInstructionMnemonic::VPMOVMSKB,        { OPI_Gd,   OPI_Ux,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 657 */ { VXInstructionMnemonic::VPMOVSXBD,        { OPI_Vx,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 658 */ { VXInstructionMnemonic::VPMOVSXBQ,        { OPI_Vx,   OPI_MwU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 659 */ { VXInstructionMnemonic::VPMOVSXBW,        { OPI_Vx,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65A */ { VXInstructionMnemonic::VPMOVSXWD,        { OPI_Vx,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65B */ { VXInstructionMnemonic::VPMOVSXWQ,        { OPI_Vx,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65C */ { VXInstructionMnemonic::VPMOVZXBD,        { OPI_Vx,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65D */ { VXInstructionMnemonic::VPMOVZXBQ,        { OPI_Vx,   OPI_MwU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65E */ { VXInstructionMnemonic::VPMOVZXBW,        { OPI_Vx,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 65F */ { VXInstructionMnemonic::VPMOVZXDQ,        { OPI_Vx,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 660 */ { VXInstructionMnemonic::VPMOVZXWD,        { OPI_Vx,   OPI_MqU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 661 */ { VXInstructionMnemonic::VPMOVZXWQ,        { OPI_Vx,   OPI_MdU,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 662 */ { VXInstructionMnemonic::VPMULDQ,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 663 */ { VXInstructionMnemonic::VPMULHRSW,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 664 */ { VXInstructionMnemonic::VPMULHUW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 665 */ { VXInstructionMnemonic::VPMULHW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 666 */ { VXInstructionMnemonic::VPMULLD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 667 */ { VXInstructionMnemonic::VPMULLW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 668 */ { VXInstructionMnemonic::VPOR,             { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 669 */ { VXInstructionMnemonic::VPSADBW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66A */ { VXInstructionMnemonic::VPSHUFB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66B */ { VXInstructionMnemonic::VPSHUFD,          { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66C */ { VXInstructionMnemonic::VPSHUFHW,         { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66D */ { VXInstructionMnemonic::VPSHUFLW,         { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66E */ { VXInstructionMnemonic::VPSIGNB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 66F */ { VXInstructionMnemonic::VPSIGND,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 670 */ { VXInstructionMnemonic::VPSIGNW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 671 */ { VXInstructionMnemonic::VPSLLD,           { OPI_V,    OPI_H,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 672 */ { VXInstructionMnemonic::VPSLLD,           { OPI_H,    OPI_V,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 673 */ { VXInstructionMnemonic::VPSLLDQ,          { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 674 */ { VXInstructionMnemonic::VPSLLQ,           { OPI_V,    OPI_H,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 675 */ { VXInstructionMnemonic::VPSLLQ,           { OPI_H,    OPI_V,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 676 */ { VXInstructionMnemonic::VPSLLW,           { OPI_V,    OPI_H,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 677 */ { VXInstructionMnemonic::VPSLLW,           { OPI_H,    OPI_V,    OPI_W,    OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 678 */ { VXInstructionMnemonic::VPSRAD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 679 */ { VXInstructionMnemonic::VPSRAD,           { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 67A */ { VXInstructionMnemonic::VPSRAW,           { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 67B */ { VXInstructionMnemonic::VPSRAW,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 67C */ { VXInstructionMnemonic::VPSRLD,           { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 67D */ { VXInstructionMnemonic::VPSRLD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 67E */ { VXInstructionMnemonic::VPSRLDQ,          { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 67F */ { VXInstructionMnemonic::VPSRLQ,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 680 */ { VXInstructionMnemonic::VPSRLQ,           { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 681 */ { VXInstructionMnemonic::VPSRLW,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 682 */ { VXInstructionMnemonic::VPSRLW,           { OPI_Hx,   OPI_Ux,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_REXB },
    /* 683 */ { VXInstructionMnemonic::VPSUBB,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 684 */ { VXInstructionMnemonic::VPSUBD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 685 */ { VXInstructionMnemonic::VPSUBQ,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 686 */ { VXInstructionMnemonic::VPSUBSB,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 687 */ { VXInstructionMnemonic::VPSUBSW,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 688 */ { VXInstructionMnemonic::VPSUBUSB,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 689 */ { VXInstructionMnemonic::VPSUBUSW,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 68A */ { VXInstructionMnemonic::VPSUBW,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 68B */ { VXInstructionMnemonic::VPTEST,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 68C */ { VXInstructionMnemonic::VPUNPCKHBW,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 68D */ { VXInstructionMnemonic::VPUNPCKHDQ,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 68E */ { VXInstructionMnemonic::VPUNPCKHQDQ,      { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 68F */ { VXInstructionMnemonic::VPUNPCKHWD,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 690 */ { VXInstructionMnemonic::VPUNPCKLBW,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 691 */ { VXInstructionMnemonic::VPUNPCKLDQ,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 692 */ { VXInstructionMnemonic::VPUNPCKLQDQ,      { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 693 */ { VXInstructionMnemonic::VPUNPCKLWD,       { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 694 */ { VXInstructionMnemonic::VPXOR,            { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 695 */ { VXInstructionMnemonic::VRCPPS,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 696 */ { VXInstructionMnemonic::VRCPSS,           { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 697 */ { VXInstructionMnemonic::VROUNDPD,         { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 698 */ { VXInstructionMnemonic::VROUNDPS,         { OPI_Vx,   OPI_Wx,   OPI_Ib,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 699 */ { VXInstructionMnemonic::VROUNDSD,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 69A */ { VXInstructionMnemonic::VROUNDSS,         { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 69B */ { VXInstructionMnemonic::VRSQRTPS,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 69C */ { VXInstructionMnemonic::VRSQRTSS,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 69D */ { VXInstructionMnemonic::VSHUFPD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 69E */ { VXInstructionMnemonic::VSHUFPS,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_Ib },   IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 69F */ { VXInstructionMnemonic::VSQRTPD,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A0 */ { VXInstructionMnemonic::VSQRTPS,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6A1 */ { VXInstructionMnemonic::VSQRTSD,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A2 */ { VXInstructionMnemonic::VSQRTSS,          { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A3 */ { VXInstructionMnemonic::VSTMXCSR,         { OPI_Md,   OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A4 */ { VXInstructionMnemonic::VSUBPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6A5 */ { VXInstructionMnemonic::VSUBPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6A6 */ { VXInstructionMnemonic::VSUBSD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A7 */ { VXInstructionMnemonic::VSUBSS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6A8 */ { VXInstructionMnemonic::VTESTPD,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6A9 */ { VXInstructionMnemonic::VTESTPS,          { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6AA */ { VXInstructionMnemonic::VUCOMISD,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6AB */ { VXInstructionMnemonic::VUCOMISS,         { OPI_Vx,   OPI_Wx,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6AC */ { VXInstructionMnemonic::VUNPCKHPD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6AD */ { VXInstructionMnemonic::VUNPCKHPS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6AE */ { VXInstructionMnemonic::VUNPCKLPD,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6AF */ { VXInstructionMnemonic::VUNPCKLPS,        { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6B0 */ { VXInstructionMnemonic::VXORPD,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_ACCEPTS_VEXL },
    /* 6B1 */ { VXInstructionMnemonic::VXORPS,           { OPI_Vx,   OPI_Hx,   OPI_Wx,   OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6B2 */ { VXInstructionMnemonic::VZEROALL,         { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6B3 */ { VXInstructionMnemonic::VZEROUPPER,       { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6B4 */ { VXInstructionMnemonic::WAIT,             { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6B5 */ { VXInstructionMnemonic::WBINVD,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6B6 */ { VXInstructionMnemonic::WRMSR,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6B7 */ { VXInstructionMnemonic::XADD,             { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6B8 */ { VXInstructionMnemonic::XADD,             { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6B9 */ { VXInstructionMnemonic::XCHG,             { OPI_R1v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6BA */ { VXInstructionMnemonic::XCHG,             { OPI_R2v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6BB */ { VXInstructionMnemonic::XCHG,             { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6BC */ { VXInstructionMnemonic::XCHG,             { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6BD */ { VXInstructionMnemonic::XCHG,             { OPI_R0v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6BE */ { VXInstructionMnemonic::XCHG,             { OPI_R7v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6BF */ { VXInstructionMnemonic::XCHG,             { OPI_R5v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6C0 */ { VXInstructionMnemonic::XCHG,             { OPI_R6v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6C1 */ { VXInstructionMnemonic::XCHG,             { OPI_R3v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6C2 */ { VXInstructionMnemonic::XCHG,             { OPI_R4v,  OPI_rAX,  OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXB },
    /* 6C3 */ { VXInstructionMnemonic::XCRYPTCBC,        { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C4 */ { VXInstructionMnemonic::XCRYPTCFB,        { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C5 */ { VXInstructionMnemonic::XCRYPTCTR,        { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C6 */ { VXInstructionMnemonic::XCRYPTECB,        { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C7 */ { VXInstructionMnemonic::XCRYPTOFB,        { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C8 */ { VXInstructionMnemonic::XGETBV,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6C9 */ { VXInstructionMnemonic::XLATB,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_REXW | IDF_ACCEPTS_SEGMENT_OVERRIDE },
    /* 6CA */ { VXInstructionMnemonic::XOR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6CB */ { VXInstructionMnemonic::XOR,              { OPI_rAX,  OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW },
    /* 6CC */ { VXInstructionMnemonic::XOR,              { OPI_AL,   OPI_Ib,   OPI_NONE, OPI_NONE }, 0 },
    /* 6CD */ { VXInstructionMnemonic::XOR,              { OPI_Ev,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6CE */ { VXInstructionMnemonic::XOR,              { OPI_Eb,   OPI_Ib,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB | IDF_INVALID_64 },
    /* 6CF */ { VXInstructionMnemonic::XOR,              { OPI_Ev,   OPI_Iz,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D0 */ { VXInstructionMnemonic::XOR,              { OPI_Gb,   OPI_Eb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D1 */ { VXInstructionMnemonic::XOR,              { OPI_Ev,   OPI_Gv,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D2 */ { VXInstructionMnemonic::XOR,              { OPI_Eb,   OPI_Gb,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D3 */ { VXInstructionMnemonic::XOR,              { OPI_Gv,   OPI_Ev,   OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_OPERAND_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D4 */ { VXInstructionMnemonic::XORPD,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D5 */ { VXInstructionMnemonic::XORPS,            { OPI_V,    OPI_W,    OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D6 */ { VXInstructionMnemonic::XRSTOR,           { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D7 */ { VXInstructionMnemonic::XSAVE,            { OPI_M,    OPI_NONE, OPI_NONE, OPI_NONE }, IDF_ACCEPTS_ADDRESS_SIZE_OVERRIDE | IDF_ACCEPTS_REXW | IDF_ACCEPTS_REXR | IDF_ACCEPTS_REXX | IDF_ACCEPTS_REXB },
    /* 6D8 */ { VXInstructionMnemonic::XSETBV,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6D9 */ { VXInstructionMnemonic::XSHA1,            { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6DA */ { VXInstructionMnemonic::XSHA256,          { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
    /* 6DB */ { VXInstructionMnemonic::XSTORE,           { OPI_NONE, OPI_NONE, OPI_NONE, OPI_NONE }, 0 },
};

#undef OPI_NONE    
#undef OPI_AL      
#undef OPI_AX      
#undef OPI_Av      
#undef OPI_C       
#undef OPI_CL      
#undef OPI_CS      
#undef OPI_CX      
#undef OPI_D       
#undef OPI_DL      
#undef OPI_DS      
#undef OPI_DX      
#undef OPI_E       
#undef OPI_ES      
#undef OPI_Eb      
#undef OPI_Ed      
#undef OPI_Eq      
#undef OPI_Ev      
#undef OPI_Ew      
#undef OPI_Ey      
#undef OPI_Ez      
#undef OPI_FS      
#undef OPI_Fv      
#undef OPI_G       
#undef OPI_GS      
#undef OPI_Gb      
#undef OPI_Gd      
#undef OPI_Gq      
#undef OPI_Gv      
#undef OPI_Gw      
#undef OPI_Gy      
#undef OPI_Gz      
#undef OPI_H       
#undef OPI_Hqq     
#undef OPI_Hx      
#undef OPI_I1      
#undef OPI_Ib      
#undef OPI_Iv      
#undef OPI_Iw      
#undef OPI_Iz      
#undef OPI_Jb      
#undef OPI_Jv      
#undef OPI_Jz      
#undef OPI_L       
#undef OPI_Lx      
#undef OPI_M       
#undef OPI_Mb      
#undef OPI_MbRd    
#undef OPI_MbRv    
#undef OPI_Md      
#undef OPI_MdRy    
#undef OPI_MdU     
#undef OPI_Mdq     
#undef OPI_Mo      
#undef OPI_Mq      
#undef OPI_MqU     
#undef OPI_Ms      
#undef OPI_Mt      
#undef OPI_Mv      
#undef OPI_Mw      
#undef OPI_MwRd    
#undef OPI_MwRv    
#undef OPI_MwRy    
#undef OPI_MwU     
#undef OPI_N       
#undef OPI_Ob      
#undef OPI_Ov      
#undef OPI_Ow      
#undef OPI_P       
#undef OPI_Q       
#undef OPI_R       
#undef OPI_R0b     
#undef OPI_R0v     
#undef OPI_R0w     
#undef OPI_R0y     
#undef OPI_R0z     
#undef OPI_R1b     
#undef OPI_R1v     
#undef OPI_R1w     
#undef OPI_R1y     
#undef OPI_R1z     
#undef OPI_R2b     
#undef OPI_R2v     
#undef OPI_R2w     
#undef OPI_R2y     
#undef OPI_R2z     
#undef OPI_R3b     
#undef OPI_R3v     
#undef OPI_R3w     
#undef OPI_R3y     
#undef OPI_R3z     
#undef OPI_R4b     
#undef OPI_R4v     
#undef OPI_R4w     
#undef OPI_R4y     
#undef OPI_R4z     
#undef OPI_R5b     
#undef OPI_R5v     
#undef OPI_R5w     
#undef OPI_R5y     
#undef OPI_R5z     
#undef OPI_R6b     
#undef OPI_R6v     
#undef OPI_R6w     
#undef OPI_R6y     
#undef OPI_R6z     
#undef OPI_R7b     
#undef OPI_R7v     
#undef OPI_R7w     
#undef OPI_R7y     
#undef OPI_R7z     
#undef OPI_S       
#undef OPI_SS      
#undef OPI_ST0     
#undef OPI_ST1     
#undef OPI_ST2     
#undef OPI_ST3     
#undef OPI_ST4     
#undef OPI_ST5     
#undef OPI_ST6     
#undef OPI_ST7     
#undef OPI_U       
#undef OPI_Ux      
#undef OPI_V       
#undef OPI_Vdq     
#undef OPI_Vqq     
#undef OPI_Vsd     
#undef OPI_Vx      
#undef OPI_W       
#undef OPI_Wdq     
#undef OPI_Wqq     
#undef OPI_Wsd     
#undef OPI_Wx      
#undef OPI_eAX     
#undef OPI_eCX     
#undef OPI_eDX     
#undef OPI_rAX     
#undef OPI_rCX     
#undef OPI_rDX    

const char* instrMnemonicStrings[] =
{
    /* 000 */ "invalid",
    /* 001 */ "aaa",
    /* 002 */ "aad",
    /* 003 */ "aam",
    /* 004 */ "aas",
    /* 005 */ "adc",
    /* 006 */ "add",
    /* 007 */ "addpd",
    /* 008 */ "addps",
    /* 009 */ "addsd",
    /* 00A */ "addss",
    /* 00B */ "addsubpd",
    /* 00C */ "addsubps",
    /* 00D */ "aesdec",
    /* 00E */ "aesdeclast",
    /* 00F */ "aesenc",
    /* 010 */ "aesenclast",
    /* 011 */ "aesimc",
    /* 012 */ "aeskeygenassist",
    /* 013 */ "and",
    /* 014 */ "andnpd",
    /* 015 */ "andnps",
    /* 016 */ "andpd",
    /* 017 */ "andps",
    /* 018 */ "arpl",
    /* 019 */ "blendpd",
    /* 01A */ "blendps",
    /* 01B */ "blendvpd",
    /* 01C */ "blendvps",
    /* 01D */ "bound",
    /* 01E */ "bsf",
    /* 01F */ "bsr",
    /* 020 */ "bswap",
    /* 021 */ "bt",
    /* 022 */ "btc",
    /* 023 */ "btr",
    /* 024 */ "bts",
    /* 025 */ "call",
    /* 026 */ "cbw",
    /* 027 */ "cdq",
    /* 028 */ "cdqe",
    /* 029 */ "clc",
    /* 02A */ "cld",
    /* 02B */ "clflush",
    /* 02C */ "clgi",
    /* 02D */ "cli",
    /* 02E */ "clts",
    /* 02F */ "cmc",
    /* 030 */ "cmova",
    /* 031 */ "cmovae",
    /* 032 */ "cmovb",
    /* 033 */ "cmovbe",
    /* 034 */ "cmovg",
    /* 035 */ "cmovge",
    /* 036 */ "cmovl",
    /* 037 */ "cmovle",
    /* 038 */ "cmovno",
    /* 039 */ "cmovnp",
    /* 03A */ "cmovns",
    /* 03B */ "cmovnz",
    /* 03C */ "cmovo",
    /* 03D */ "cmovp",
    /* 03E */ "cmovs",
    /* 03F */ "cmovz",
    /* 040 */ "cmp",
    /* 041 */ "cmppd",
    /* 042 */ "cmpps",
    /* 043 */ "cmpsb",
    /* 044 */ "cmpsd",
    /* 045 */ "cmpsq",
    /* 046 */ "cmpss",
    /* 047 */ "cmpsw",
    /* 048 */ "cmpxchg",
    /* 049 */ "cmpxchg16b",
    /* 04A */ "cmpxchg8b",
    /* 04B */ "comisd",
    /* 04C */ "comiss",
    /* 04D */ "cpuid",
    /* 04E */ "cqo",
    /* 04F */ "crc32",
    /* 050 */ "cvtdq2pd",
    /* 051 */ "cvtdq2ps",
    /* 052 */ "cvtpd2dq",
    /* 053 */ "cvtpd2pi",
    /* 054 */ "cvtpd2ps",
    /* 055 */ "cvtpi2pd",
    /* 056 */ "cvtpi2ps",
    /* 057 */ "cvtps2dq",
    /* 058 */ "cvtps2pd",
    /* 059 */ "cvtps2pi",
    /* 05A */ "cvtsd2si",
    /* 05B */ "cvtsd2ss",
    /* 05C */ "cvtsi2sd",
    /* 05D */ "cvtsi2ss",
    /* 05E */ "cvtss2sd",
    /* 05F */ "cvtss2si",
    /* 060 */ "cvttpd2dq",
    /* 061 */ "cvttpd2pi",
    /* 062 */ "cvttps2dq",
    /* 063 */ "cvttps2pi",
    /* 064 */ "cvttsd2si",
    /* 065 */ "cvttss2si",
    /* 066 */ "cwd",
    /* 067 */ "cwde",
    /* 068 */ "daa",
    /* 069 */ "das",
    /* 06A */ "dec",
    /* 06B */ "div",
    /* 06C */ "divpd",
    /* 06D */ "divps",
    /* 06E */ "divsd",
    /* 06F */ "divss",
    /* 070 */ "dppd",
    /* 071 */ "dpps",
    /* 072 */ "emms",
    /* 073 */ "enter",
    /* 074 */ "extractps",
    /* 075 */ "f2xm1",
    /* 076 */ "fabs",
    /* 077 */ "fadd",
    /* 078 */ "faddp",
    /* 079 */ "fbld",
    /* 07A */ "fbstp",
    /* 07B */ "fchs",
    /* 07C */ "fclex",
    /* 07D */ "fcmovb",
    /* 07E */ "fcmovbe",
    /* 07F */ "fcmove",
    /* 080 */ "fcmovnb",
    /* 081 */ "fcmovnbe",
    /* 082 */ "fcmovne",
    /* 083 */ "fcmovnu",
    /* 084 */ "fcmovu",
    /* 085 */ "fcom",
    /* 086 */ "fcom2",
    /* 087 */ "fcomi",
    /* 088 */ "fcomip",
    /* 089 */ "fcomp",
    /* 08A */ "fcomp3",
    /* 08B */ "fcomp5",
    /* 08C */ "fcompp",
    /* 08D */ "fcos",
    /* 08E */ "fdecstp",
    /* 08F */ "fdiv",
    /* 090 */ "fdivp",
    /* 091 */ "fdivr",
    /* 092 */ "fdivrp",
    /* 093 */ "femms",
    /* 094 */ "ffree",
    /* 095 */ "ffreep",
    /* 096 */ "fiadd",
    /* 097 */ "ficom",
    /* 098 */ "ficomp",
    /* 099 */ "fidiv",
    /* 09A */ "fidivr",
    /* 09B */ "fild",
    /* 09C */ "fimul",
    /* 09D */ "fincstp",
    /* 09E */ "fist",
    /* 09F */ "fistp",
    /* 0A0 */ "fisttp",
    /* 0A1 */ "fisub",
    /* 0A2 */ "fisubr",
    /* 0A3 */ "fld",
    /* 0A4 */ "fld1",
    /* 0A5 */ "fldcw",
    /* 0A6 */ "fldenv",
    /* 0A7 */ "fldl2e",
    /* 0A8 */ "fldl2t",
    /* 0A9 */ "fldlg2",
    /* 0AA */ "fldln2",
    /* 0AB */ "fldpi",
    /* 0AC */ "fldz",
    /* 0AD */ "fmul",
    /* 0AE */ "fmulp",
    /* 0AF */ "fninit",
    /* 0B0 */ "fnop",
    /* 0B1 */ "fnsave",
    /* 0B2 */ "fnstcw",
    /* 0B3 */ "fnstenv",
    /* 0B4 */ "fnstsw",
    /* 0B5 */ "fpatan",
    /* 0B6 */ "fprem",
    /* 0B7 */ "fprem1",
    /* 0B8 */ "fptan",
    /* 0B9 */ "frndint",
    /* 0BA */ "frstor",
    /* 0BB */ "fscale",
    /* 0BC */ "fsin",
    /* 0BD */ "fsincos",
    /* 0BE */ "fsqrt",
    /* 0BF */ "fst",
    /* 0C0 */ "fstp",
    /* 0C1 */ "fstp1",
    /* 0C2 */ "fstp8",
    /* 0C3 */ "fstp9",
    /* 0C4 */ "fsub",
    /* 0C5 */ "fsubp",
    /* 0C6 */ "fsubr",
    /* 0C7 */ "fsubrp",
    /* 0C8 */ "ftst",
    /* 0C9 */ "fucom",
    /* 0CA */ "fucomi",
    /* 0CB */ "fucomip",
    /* 0CC */ "fucomp",
    /* 0CD */ "fucompp",
    /* 0CE */ "fxam",
    /* 0CF */ "fxch",
    /* 0D0 */ "fxch4",
    /* 0D1 */ "fxch7",
    /* 0D2 */ "fxrstor",
    /* 0D3 */ "fxsave",
    /* 0D4 */ "fxtract",
    /* 0D5 */ "fyl2x",
    /* 0D6 */ "fyl2xp1",
    /* 0D7 */ "getsec",
    /* 0D8 */ "haddpd",
    /* 0D9 */ "haddps",
    /* 0DA */ "hlt",
    /* 0DB */ "hsubpd",
    /* 0DC */ "hsubps",
    /* 0DD */ "idiv",
    /* 0DE */ "imul",
    /* 0DF */ "in",
    /* 0E0 */ "inc",
    /* 0E1 */ "insb",
    /* 0E2 */ "insd",
    /* 0E3 */ "insertps",
    /* 0E4 */ "insw",
    /* 0E5 */ "int",
    /* 0E6 */ "int1",
    /* 0E7 */ "int3",
    /* 0E8 */ "into",
    /* 0E9 */ "invd",
    /* 0EA */ "invept",
    /* 0EB */ "invlpg",
    /* 0EC */ "invlpga",
    /* 0ED */ "invvpid",
    /* 0EE */ "iretd",
    /* 0EF */ "iretq",
    /* 0F0 */ "iretw",
    /* 0F1 */ "ja",
    /* 0F2 */ "jae",
    /* 0F3 */ "jb",
    /* 0F4 */ "jbe",
    /* 0F5 */ "jcxz",
    /* 0F6 */ "jecxz",
    /* 0F7 */ "jg",
    /* 0F8 */ "jge",
    /* 0F9 */ "jl",
    /* 0FA */ "jle",
    /* 0FB */ "jmp",
    /* 0FC */ "jno",
    /* 0FD */ "jnp",
    /* 0FE */ "jns",
    /* 0FF */ "jnz",
    /* 100 */ "jo",
    /* 101 */ "jp",
    /* 102 */ "jrcxz",
    /* 103 */ "js",
    /* 104 */ "jz",
    /* 105 */ "lahf",
    /* 106 */ "lar",
    /* 107 */ "lddqu",
    /* 108 */ "ldmxcsr",
    /* 109 */ "lds",
    /* 10A */ "lea",
    /* 10B */ "leave",
    /* 10C */ "les",
    /* 10D */ "lfence",
    /* 10E */ "lfs",
    /* 10F */ "lgdt",
    /* 110 */ "lgs",
    /* 111 */ "lidt",
    /* 112 */ "lldt",
    /* 113 */ "lmsw",
    /* 114 */ "lock",
    /* 115 */ "lodsb",
    /* 116 */ "lodsd",
    /* 117 */ "lodsq",
    /* 118 */ "lodsw",
    /* 119 */ "loop",
    /* 11A */ "loope",
    /* 11B */ "loopne",
    /* 11C */ "lsl",
    /* 11D */ "lss",
    /* 11E */ "ltr",
    /* 11F */ "maskmovdqu",
    /* 120 */ "maskmovq",
    /* 121 */ "maxpd",
    /* 122 */ "maxps",
    /* 123 */ "maxsd",
    /* 124 */ "maxss",
    /* 125 */ "mfence",
    /* 126 */ "minpd",
    /* 127 */ "minps",
    /* 128 */ "minsd",
    /* 129 */ "minss",
    /* 12A */ "monitor",
    /* 12B */ "montmul",
    /* 12C */ "mov",
    /* 12D */ "movapd",
    /* 12E */ "movaps",
    /* 12F */ "movbe",
    /* 130 */ "movd",
    /* 131 */ "movddup",
    /* 132 */ "movdq2q",
    /* 133 */ "movdqa",
    /* 134 */ "movdqu",
    /* 135 */ "movhlps",
    /* 136 */ "movhpd",
    /* 137 */ "movhps",
    /* 138 */ "movlhps",
    /* 139 */ "movlpd",
    /* 13A */ "movlps",
    /* 13B */ "movmskpd",
    /* 13C */ "movmskps",
    /* 13D */ "movntdq",
    /* 13E */ "movntdqa",
    /* 13F */ "movnti",
    /* 140 */ "movntpd",
    /* 141 */ "movntps",
    /* 142 */ "movntq",
    /* 143 */ "movq",
    /* 144 */ "movq2dq",
    /* 145 */ "movsb",
    /* 146 */ "movsd",
    /* 147 */ "movshdup",
    /* 148 */ "movsldup",
    /* 149 */ "movsq",
    /* 14A */ "movss",
    /* 14B */ "movsw",
    /* 14C */ "movsx",
    /* 14D */ "movsxd",
    /* 14E */ "movupd",
    /* 14F */ "movups",
    /* 150 */ "movzx",
    /* 151 */ "mpsadbw",
    /* 152 */ "mul",
    /* 153 */ "mulpd",
    /* 154 */ "mulps",
    /* 155 */ "mulsd",
    /* 156 */ "mulss",
    /* 157 */ "mwait",
    /* 158 */ "neg",
    /* 159 */ "nop",
    /* 15A */ "not",
    /* 15B */ "or",
    /* 15C */ "orpd",
    /* 15D */ "orps",
    /* 15E */ "out",
    /* 15F */ "outsb",
    /* 160 */ "outsd",
    /* 161 */ "outsw",
    /* 162 */ "pabsb",
    /* 163 */ "pabsd",
    /* 164 */ "pabsw",
    /* 165 */ "packssdw",
    /* 166 */ "packsswb",
    /* 167 */ "packusdw",
    /* 168 */ "packuswb",
    /* 169 */ "paddb",
    /* 16A */ "paddd",
    /* 16B */ "paddq",
    /* 16C */ "paddsb",
    /* 16D */ "paddsw",
    /* 16E */ "paddusb",
    /* 16F */ "paddusw",
    /* 170 */ "paddw",
    /* 171 */ "palignr",
    /* 172 */ "pand",
    /* 173 */ "pandn",
    /* 174 */ "pause",
    /* 175 */ "pavgb",
    /* 176 */ "pavgusb",
    /* 177 */ "pavgw",
    /* 178 */ "pblendvb",
    /* 179 */ "pblendw",
    /* 17A */ "pclmulqdq",
    /* 17B */ "pcmpeqb",
    /* 17C */ "pcmpeqd",
    /* 17D */ "pcmpeqq",
    /* 17E */ "pcmpeqw",
    /* 17F */ "pcmpestri",
    /* 180 */ "pcmpestrm",
    /* 181 */ "pcmpgtb",
    /* 182 */ "pcmpgtd",
    /* 183 */ "pcmpgtq",
    /* 184 */ "pcmpgtw",
    /* 185 */ "pcmpistri",
    /* 186 */ "pcmpistrm",
    /* 187 */ "pextrb",
    /* 188 */ "pextrd",
    /* 189 */ "pextrq",
    /* 18A */ "pextrw",
    /* 18B */ "pf2id",
    /* 18C */ "pf2iw",
    /* 18D */ "pfacc",
    /* 18E */ "pfadd",
    /* 18F */ "pfcmpeq",
    /* 190 */ "pfcmpge",
    /* 191 */ "pfcmpgt",
    /* 192 */ "pfmax",
    /* 193 */ "pfmin",
    /* 194 */ "pfmul",
    /* 195 */ "pfnacc",
    /* 196 */ "pfpnacc",
    /* 197 */ "pfrcp",
    /* 198 */ "pfrcpit1",
    /* 199 */ "pfrcpit2",
    /* 19A */ "pfrsqit1",
    /* 19B */ "pfrsqrt",
    /* 19C */ "pfsub",
    /* 19D */ "pfsubr",
    /* 19E */ "phaddd",
    /* 19F */ "phaddsw",
    /* 1A0 */ "phaddw",
    /* 1A1 */ "phminposuw",
    /* 1A2 */ "phsubd",
    /* 1A3 */ "phsubsw",
    /* 1A4 */ "phsubw",
    /* 1A5 */ "pi2fd",
    /* 1A6 */ "pi2fw",
    /* 1A7 */ "pinsrb",
    /* 1A8 */ "pinsrd",
    /* 1A9 */ "pinsrq",
    /* 1AA */ "pinsrw",
    /* 1AB */ "pmaddubsw",
    /* 1AC */ "pmaddwd",
    /* 1AD */ "pmaxsb",
    /* 1AE */ "pmaxsd",
    /* 1AF */ "pmaxsw",
    /* 1B0 */ "pmaxub",
    /* 1B1 */ "pmaxud",
    /* 1B2 */ "pmaxuw",
    /* 1B3 */ "pminsb",
    /* 1B4 */ "pminsd",
    /* 1B5 */ "pminsw",
    /* 1B6 */ "pminub",
    /* 1B7 */ "pminud",
    /* 1B8 */ "pminuw",
    /* 1B9 */ "pmovmskb",
    /* 1BA */ "pmovsxbd",
    /* 1BB */ "pmovsxbq",
    /* 1BC */ "pmovsxbw",
    /* 1BD */ "pmovsxdq",
    /* 1BE */ "pmovsxwd",
    /* 1BF */ "pmovsxwq",
    /* 1C0 */ "pmovzxbd",
    /* 1C1 */ "pmovzxbq",
    /* 1C2 */ "pmovzxbw",
    /* 1C3 */ "pmovzxdq",
    /* 1C4 */ "pmovzxwd",
    /* 1C5 */ "pmovzxwq",
    /* 1C6 */ "pmuldq",
    /* 1C7 */ "pmulhrsw",
    /* 1C8 */ "pmulhrw",
    /* 1C9 */ "pmulhuw",
    /* 1CA */ "pmulhw",
    /* 1CB */ "pmulld",
    /* 1CC */ "pmullw",
    /* 1CD */ "pmuludq",
    /* 1CE */ "pop",
    /* 1CF */ "popa",
    /* 1D0 */ "popad",
    /* 1D1 */ "popcnt",
    /* 1D2 */ "popfd",
    /* 1D3 */ "popfq",
    /* 1D4 */ "popfw",
    /* 1D5 */ "por",
    /* 1D6 */ "prefetch",
    /* 1D7 */ "prefetchnta",
    /* 1D8 */ "prefetcht0",
    /* 1D9 */ "prefetcht1",
    /* 1DA */ "prefetcht2",
    /* 1DB */ "psadbw",
    /* 1DC */ "pshufb",
    /* 1DD */ "pshufd",
    /* 1DE */ "pshufhw",
    /* 1DF */ "pshuflw",
    /* 1E0 */ "pshufw",
    /* 1E1 */ "psignb",
    /* 1E2 */ "psignd",
    /* 1E3 */ "psignw",
    /* 1E4 */ "pslld",
    /* 1E5 */ "pslldq",
    /* 1E6 */ "psllq",
    /* 1E7 */ "psllw",
    /* 1E8 */ "psrad",
    /* 1E9 */ "psraw",
    /* 1EA */ "psrld",
    /* 1EB */ "psrldq",
    /* 1EC */ "psrlq",
    /* 1ED */ "psrlw",
    /* 1EE */ "psubb",
    /* 1EF */ "psubd",
    /* 1F0 */ "psubq",
    /* 1F1 */ "psubsb",
    /* 1F2 */ "psubsw",
    /* 1F3 */ "psubusb",
    /* 1F4 */ "psubusw",
    /* 1F5 */ "psubw",
    /* 1F6 */ "pswapd",
    /* 1F7 */ "ptest",
    /* 1F8 */ "punpckhbw",
    /* 1F9 */ "punpckhdq",
    /* 1FA */ "punpckhqdq",
    /* 1FB */ "punpckhwd",
    /* 1FC */ "punpcklbw",
    /* 1FD */ "punpckldq",
    /* 1FE */ "punpcklqdq",
    /* 1FF */ "punpcklwd",
    /* 200 */ "push",
    /* 201 */ "pusha",
    /* 202 */ "pushad",
    /* 203 */ "pushfd",
    /* 204 */ "pushfq",
    /* 205 */ "pushfw",
    /* 206 */ "pxor",
    /* 207 */ "rcl",
    /* 208 */ "rcpps",
    /* 209 */ "rcpss",
    /* 20A */ "rcr",
    /* 20B */ "rdmsr",
    /* 20C */ "rdpmc",
    /* 20D */ "rdrand",
    /* 20E */ "rdtsc",
    /* 20F */ "rdtscp",
    /* 210 */ "rep",
    /* 211 */ "repne",
    /* 212 */ "retf",
    /* 213 */ "retn",
    /* 214 */ "rol",
    /* 215 */ "ror",
    /* 216 */ "roundpd",
    /* 217 */ "roundps",
    /* 218 */ "roundsd",
    /* 219 */ "roundss",
    /* 21A */ "rsm",
    /* 21B */ "rsqrtps",
    /* 21C */ "rsqrtss",
    /* 21D */ "sahf",
    /* 21E */ "salc",
    /* 21F */ "sar",
    /* 220 */ "sbb",
    /* 221 */ "scasb",
    /* 222 */ "scasd",
    /* 223 */ "scasq",
    /* 224 */ "scasw",
    /* 225 */ "seta",
    /* 226 */ "setae",
    /* 227 */ "setb",
    /* 228 */ "setbe",
    /* 229 */ "setg",
    /* 22A */ "setge",
    /* 22B */ "setl",
    /* 22C */ "setle",
    /* 22D */ "setno",
    /* 22E */ "setnp",
    /* 22F */ "setns",
    /* 230 */ "setnz",
    /* 231 */ "seto",
    /* 232 */ "setp",
    /* 233 */ "sets",
    /* 234 */ "setz",
    /* 235 */ "sfence",
    /* 236 */ "sgdt",
    /* 237 */ "shl",
    /* 238 */ "shld",
    /* 239 */ "shr",
    /* 23A */ "shrd",
    /* 23B */ "shufpd",
    /* 23C */ "shufps",
    /* 23D */ "sidt",
    /* 23E */ "skinit",
    /* 23F */ "sldt",
    /* 240 */ "smsw",
    /* 241 */ "sqrtpd",
    /* 242 */ "sqrtps",
    /* 243 */ "sqrtsd",
    /* 244 */ "sqrtss",
    /* 245 */ "stc",
    /* 246 */ "std",
    /* 247 */ "stgi",
    /* 248 */ "sti",
    /* 249 */ "stmxcsr",
    /* 24A */ "stosb",
    /* 24B */ "stosd",
    /* 24C */ "stosq",
    /* 24D */ "stosw",
    /* 24E */ "str",
    /* 24F */ "sub",
    /* 250 */ "subpd",
    /* 251 */ "subps",
    /* 252 */ "subsd",
    /* 253 */ "subss",
    /* 254 */ "swapgs",
    /* 255 */ "syscall",
    /* 256 */ "sysenter",
    /* 257 */ "sysexit",
    /* 258 */ "sysret",
    /* 259 */ "test",
    /* 25A */ "ucomisd",
    /* 25B */ "ucomiss",
    /* 25C */ "ud2",
    /* 25D */ "unpckhpd",
    /* 25E */ "unpckhps",
    /* 25F */ "unpcklpd",
    /* 260 */ "unpcklps",
    /* 261 */ "vaddpd",
    /* 262 */ "vaddps",
    /* 263 */ "vaddsd",
    /* 264 */ "vaddss",
    /* 265 */ "vaddsubpd",
    /* 266 */ "vaddsubps",
    /* 267 */ "vaesdec",
    /* 268 */ "vaesdeclast",
    /* 269 */ "vaesenc",
    /* 26A */ "vaesenclast",
    /* 26B */ "vaesimc",
    /* 26C */ "vaeskeygenassist",
    /* 26D */ "vandnpd",
    /* 26E */ "vandnps",
    /* 26F */ "vandpd",
    /* 270 */ "vandps",
    /* 271 */ "vblendpd",
    /* 272 */ "vblendps",
    /* 273 */ "vblendvpd",
    /* 274 */ "vblendvps",
    /* 275 */ "vbroadcastsd",
    /* 276 */ "vbroadcastss",
    /* 277 */ "vcmppd",
    /* 278 */ "vcmpps",
    /* 279 */ "vcmpsd",
    /* 27A */ "vcmpss",
    /* 27B */ "vcomisd",
    /* 27C */ "vcomiss",
    /* 27D */ "vcvtdq2pd",
    /* 27E */ "vcvtdq2ps",
    /* 27F */ "vcvtpd2dq",
    /* 280 */ "vcvtpd2ps",
    /* 281 */ "vcvtps2dq",
    /* 282 */ "vcvtps2pd",
    /* 283 */ "vcvtsd2si",
    /* 284 */ "vcvtsd2ss",
    /* 285 */ "vcvtsi2sd",
    /* 286 */ "vcvtsi2ss",
    /* 287 */ "vcvtss2sd",
    /* 288 */ "vcvtss2si",
    /* 289 */ "vcvttpd2dq",
    /* 28A */ "vcvttps2dq",
    /* 28B */ "vcvttsd2si",
    /* 28C */ "vcvttss2si",
    /* 28D */ "vdivpd",
    /* 28E */ "vdivps",
    /* 28F */ "vdivsd",
    /* 290 */ "vdivss",
    /* 291 */ "vdppd",
    /* 292 */ "vdpps",
    /* 293 */ "verr",
    /* 294 */ "verw",
    /* 295 */ "vextractf128",
    /* 296 */ "vextractps",
    /* 297 */ "vhaddpd",
    /* 298 */ "vhaddps",
    /* 299 */ "vhsubpd",
    /* 29A */ "vhsubps",
    /* 29B */ "vinsertf128",
    /* 29C */ "vinsertps",
    /* 29D */ "vlddqu",
    /* 29E */ "vmaskmovdqu",
    /* 29F */ "vmaskmovpd",
    /* 2A0 */ "vmaskmovps",
    /* 2A1 */ "vmaxpd",
    /* 2A2 */ "vmaxps",
    /* 2A3 */ "vmaxsd",
    /* 2A4 */ "vmaxss",
    /* 2A5 */ "vmcall",
    /* 2A6 */ "vmclear",
    /* 2A7 */ "vminpd",
    /* 2A8 */ "vminps",
    /* 2A9 */ "vminsd",
    /* 2AA */ "vminss",
    /* 2AB */ "vmlaunch",
    /* 2AC */ "vmload",
    /* 2AD */ "vmmcall",
    /* 2AE */ "vmovapd",
    /* 2AF */ "vmovaps",
    /* 2B0 */ "vmovd",
    /* 2B1 */ "vmovddup",
    /* 2B2 */ "vmovdqa",
    /* 2B3 */ "vmovdqu",
    /* 2B4 */ "vmovhlps",
    /* 2B5 */ "vmovhpd",
    /* 2B6 */ "vmovhps",
    /* 2B7 */ "vmovlhps",
    /* 2B8 */ "vmovlpd",
    /* 2B9 */ "vmovlps",
    /* 2BA */ "vmovmskpd",
    /* 2BB */ "vmovmskps",
    /* 2BC */ "vmovntdq",
    /* 2BD */ "vmovntdqa",
    /* 2BE */ "vmovntpd",
    /* 2BF */ "vmovntps",
    /* 2C0 */ "vmovq",
    /* 2C1 */ "vmovsd",
    /* 2C2 */ "vmovshdup",
    /* 2C3 */ "vmovsldup",
    /* 2C4 */ "vmovss",
    /* 2C5 */ "vmovupd",
    /* 2C6 */ "vmovups",
    /* 2C7 */ "vmpsadbw",
    /* 2C8 */ "vmptrld",
    /* 2C9 */ "vmptrst",
    /* 2CA */ "vmread",
    /* 2CB */ "vmresume",
    /* 2CC */ "vmrun",
    /* 2CD */ "vmsave",
    /* 2CE */ "vmulpd",
    /* 2CF */ "vmulps",
    /* 2D0 */ "vmulsd",
    /* 2D1 */ "vmulss",
    /* 2D2 */ "vmwrite",
    /* 2D3 */ "vmxoff",
    /* 2D4 */ "vmxon",
    /* 2D5 */ "vorpd",
    /* 2D6 */ "vorps",
    /* 2D7 */ "vpabsb",
    /* 2D8 */ "vpabsd",
    /* 2D9 */ "vpabsw",
    /* 2DA */ "vpackssdw",
    /* 2DB */ "vpacksswb",
    /* 2DC */ "vpackusdw",
    /* 2DD */ "vpackuswb",
    /* 2DE */ "vpaddb",
    /* 2DF */ "vpaddd",
    /* 2E0 */ "vpaddq",
    /* 2E1 */ "vpaddsb",
    /* 2E2 */ "vpaddsw",
    /* 2E3 */ "vpaddusb",
    /* 2E4 */ "vpaddusw",
    /* 2E5 */ "vpaddw",
    /* 2E6 */ "vpalignr",
    /* 2E7 */ "vpand",
    /* 2E8 */ "vpandn",
    /* 2E9 */ "vpavgb",
    /* 2EA */ "vpavgw",
    /* 2EB */ "vpblendvb",
    /* 2EC */ "vpblendw",
    /* 2ED */ "vpclmulqdq",
    /* 2EE */ "vpcmpeqb",
    /* 2EF */ "vpcmpeqd",
    /* 2F0 */ "vpcmpeqq",
    /* 2F1 */ "vpcmpeqw",
    /* 2F2 */ "vpcmpestri",
    /* 2F3 */ "vpcmpestrm",
    /* 2F4 */ "vpcmpgtb",
    /* 2F5 */ "vpcmpgtd",
    /* 2F6 */ "vpcmpgtq",
    /* 2F7 */ "vpcmpgtw",
    /* 2F8 */ "vpcmpistri",
    /* 2F9 */ "vpcmpistrm",
    /* 2FA */ "vperm2f128",
    /* 2FB */ "vpermilpd",
    /* 2FC */ "vpermilps",
    /* 2FD */ "vpextrb",
    /* 2FE */ "vpextrd",
    /* 2FF */ "vpextrq",
    /* 300 */ "vpextrw",
    /* 301 */ "vphaddd",
    /* 302 */ "vphaddsw",
    /* 303 */ "vphaddw",
    /* 304 */ "vphminposuw",
    /* 305 */ "vphsubd",
    /* 306 */ "vphsubsw",
    /* 307 */ "vphsubw",
    /* 308 */ "vpinsrb",
    /* 309 */ "vpinsrd",
    /* 30A */ "vpinsrq",
    /* 30B */ "vpinsrw",
    /* 30C */ "vpmaddubsw",
    /* 30D */ "vpmaddwd",
    /* 30E */ "vpmaxsb",
    /* 30F */ "vpmaxsd",
    /* 310 */ "vpmaxsw",
    /* 311 */ "vpmaxub",
    /* 312 */ "vpmaxud",
    /* 313 */ "vpmaxuw",
    /* 314 */ "vpminsb",
    /* 315 */ "vpminsd",
    /* 316 */ "vpminsw",
    /* 317 */ "vpminub",
    /* 318 */ "vpminud",
    /* 319 */ "vpminuw",
    /* 31A */ "vpmovmskb",
    /* 31B */ "vpmovsxbd",
    /* 31C */ "vpmovsxbq",
    /* 31D */ "vpmovsxbw",
    /* 31E */ "vpmovsxwd",
    /* 31F */ "vpmovsxwq",
    /* 320 */ "vpmovzxbd",
    /* 321 */ "vpmovzxbq",
    /* 322 */ "vpmovzxbw",
    /* 323 */ "vpmovzxdq",
    /* 324 */ "vpmovzxwd",
    /* 325 */ "vpmovzxwq",
    /* 326 */ "vpmuldq",
    /* 327 */ "vpmulhrsw",
    /* 328 */ "vpmulhuw",
    /* 329 */ "vpmulhw",
    /* 32A */ "vpmulld",
    /* 32B */ "vpmullw",
    /* 32C */ "vpor",
    /* 32D */ "vpsadbw",
    /* 32E */ "vpshufb",
    /* 32F */ "vpshufd",
    /* 330 */ "vpshufhw",
    /* 331 */ "vpshuflw",
    /* 332 */ "vpsignb",
    /* 333 */ "vpsignd",
    /* 334 */ "vpsignw",
    /* 335 */ "vpslld",
    /* 336 */ "vpslldq",
    /* 337 */ "vpsllq",
    /* 338 */ "vpsllw",
    /* 339 */ "vpsrad",
    /* 33A */ "vpsraw",
    /* 33B */ "vpsrld",
    /* 33C */ "vpsrldq",
    /* 33D */ "vpsrlq",
    /* 33E */ "vpsrlw",
    /* 33F */ "vpsubb",
    /* 340 */ "vpsubd",
    /* 341 */ "vpsubq",
    /* 342 */ "vpsubsb",
    /* 343 */ "vpsubsw",
    /* 344 */ "vpsubusb",
    /* 345 */ "vpsubusw",
    /* 346 */ "vpsubw",
    /* 347 */ "vptest",
    /* 348 */ "vpunpckhbw",
    /* 349 */ "vpunpckhdq",
    /* 34A */ "vpunpckhqdq",
    /* 34B */ "vpunpckhwd",
    /* 34C */ "vpunpcklbw",
    /* 34D */ "vpunpckldq",
    /* 34E */ "vpunpcklqdq",
    /* 34F */ "vpunpcklwd",
    /* 350 */ "vpxor",
    /* 351 */ "vrcpps",
    /* 352 */ "vrcpss",
    /* 353 */ "vroundpd",
    /* 354 */ "vroundps",
    /* 355 */ "vroundsd",
    /* 356 */ "vroundss",
    /* 357 */ "vrsqrtps",
    /* 358 */ "vrsqrtss",
    /* 359 */ "vshufpd",
    /* 35A */ "vshufps",
    /* 35B */ "vsqrtpd",
    /* 35C */ "vsqrtps",
    /* 35D */ "vsqrtsd",
    /* 35E */ "vsqrtss",
    /* 35F */ "vstmxcsr",
    /* 360 */ "vsubpd",
    /* 361 */ "vsubps",
    /* 362 */ "vsubsd",
    /* 363 */ "vsubss",
    /* 364 */ "vtestpd",
    /* 365 */ "vtestps",
    /* 366 */ "vucomisd",
    /* 367 */ "vucomiss",
    /* 368 */ "vunpckhpd",
    /* 369 */ "vunpckhps",
    /* 36A */ "vunpcklpd",
    /* 36B */ "vunpcklps",
    /* 36C */ "vxorpd",
    /* 36D */ "vxorps",
    /* 36E */ "vzeroall",
    /* 36F */ "vzeroupper",
    /* 370 */ "wait",
    /* 371 */ "wbinvd",
    /* 372 */ "wrmsr",
    /* 373 */ "xadd",
    /* 374 */ "xchg",
    /* 375 */ "xcryptcbc",
    /* 376 */ "xcryptcfb",
    /* 377 */ "xcryptctr",
    /* 378 */ "xcryptecb",
    /* 379 */ "xcryptofb",
    /* 37A */ "xgetbv",
    /* 37B */ "xlatb",
    /* 37C */ "xor",
    /* 37D */ "xorpd",
    /* 37E */ "xorps",
    /* 37F */ "xrstor",
    /* 380 */ "xsave",
    /* 381 */ "xsetbv",
    /* 382 */ "xsha1",
    /* 383 */ "xsha256",
    /* 384 */ "xstore",
};

}

}

}
